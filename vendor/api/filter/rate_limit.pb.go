// Code generated by protoc-gen-go.
// source: api/filter/rate_limit.proto
// DO NOT EDIT!

package filter

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RateLimit struct {
	StatPrefix           string                           `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix" json:"stat_prefix,omitempty"`
	Domain               string                           `protobuf:"bytes,2,opt,name=domain" json:"domain,omitempty"`
	RateLimitDescriptors []*RateLimit_RateLimitDescriptor `protobuf:"bytes,3,rep,name=rate_limit_descriptors,json=rateLimitDescriptors" json:"rate_limit_descriptors,omitempty"`
}

func (m *RateLimit) Reset()                    { *m = RateLimit{} }
func (m *RateLimit) String() string            { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()               {}
func (*RateLimit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RateLimit) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

func (m *RateLimit) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *RateLimit) GetRateLimitDescriptors() []*RateLimit_RateLimitDescriptor {
	if m != nil {
		return m.RateLimitDescriptors
	}
	return nil
}

type RateLimit_RateLimitDescriptor struct {
	Entries []*RateLimit_RateLimitDescriptor_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *RateLimit_RateLimitDescriptor) Reset()         { *m = RateLimit_RateLimitDescriptor{} }
func (m *RateLimit_RateLimitDescriptor) String() string { return proto.CompactTextString(m) }
func (*RateLimit_RateLimitDescriptor) ProtoMessage()    {}
func (*RateLimit_RateLimitDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0}
}

func (m *RateLimit_RateLimitDescriptor) GetEntries() []*RateLimit_RateLimitDescriptor_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RateLimit_RateLimitDescriptor_Entry struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RateLimit_RateLimitDescriptor_Entry) Reset()         { *m = RateLimit_RateLimitDescriptor_Entry{} }
func (m *RateLimit_RateLimitDescriptor_Entry) String() string { return proto.CompactTextString(m) }
func (*RateLimit_RateLimitDescriptor_Entry) ProtoMessage()    {}
func (*RateLimit_RateLimitDescriptor_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0, 0}
}

func (m *RateLimit_RateLimitDescriptor_Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RateLimit_RateLimitDescriptor_Entry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*RateLimit)(nil), "envoy.api.v2.filter.RateLimit")
	proto.RegisterType((*RateLimit_RateLimitDescriptor)(nil), "envoy.api.v2.filter.RateLimit.RateLimitDescriptor")
	proto.RegisterType((*RateLimit_RateLimitDescriptor_Entry)(nil), "envoy.api.v2.filter.RateLimit.RateLimitDescriptor.Entry")
}

func init() { proto.RegisterFile("api/filter/rate_limit.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0x46, 0x2d, 0xea, 0x75, 0x41, 0x6e, 0x55, 0x45, 0x65, 0xa0, 0x62, 0xea, 0xe4,
	0x48, 0x61, 0xe1, 0x01, 0x60, 0x63, 0x40, 0x7e, 0x81, 0xc8, 0xd0, 0xab, 0x38, 0x91, 0xda, 0xd6,
	0xf9, 0x88, 0xc8, 0xab, 0xf0, 0x4a, 0xbc, 0x14, 0x8a, 0x1b, 0xda, 0x81, 0x2e, 0xdd, 0xee, 0x3e,
	0xff, 0xbe, 0x4f, 0xfa, 0xe1, 0xc6, 0x06, 0x2a, 0x77, 0xd4, 0x08, 0x72, 0xc9, 0x56, 0xb0, 0x6e,
	0x68, 0x4f, 0xa2, 0x03, 0x7b, 0xf1, 0x6a, 0x8e, 0xae, 0xf5, 0x9d, 0xb6, 0x81, 0x74, 0x5b, 0xe9,
	0x43, 0xea, 0xee, 0x67, 0x04, 0x53, 0x63, 0x05, 0x9f, 0xfb, 0xa0, 0xba, 0x85, 0x59, 0x14, 0x2b,
	0x75, 0x60, 0xdc, 0xd1, 0x57, 0x91, 0xad, 0xb3, 0xcd, 0xd4, 0x40, 0x8f, 0x5e, 0x12, 0x51, 0x4b,
	0x98, 0x6c, 0xfd, 0xde, 0x92, 0x2b, 0x46, 0xe9, 0x6d, 0xd8, 0xd4, 0x3b, 0x2c, 0x4f, 0xbe, 0x7a,
	0x8b, 0xf1, 0x8d, 0x29, 0x88, 0xe7, 0x58, 0xe4, 0xeb, 0x7c, 0x33, 0xab, 0x2a, 0x7d, 0x46, 0xae,
	0x8f, 0xe2, 0xd3, 0xf4, 0x78, 0xfc, 0x6a, 0x16, 0xfc, 0x1f, 0xc6, 0xd5, 0x77, 0x06, 0xf3, 0x33,
	0x69, 0x65, 0xe0, 0x0a, 0x9d, 0x30, 0x61, 0x2c, 0xb2, 0xa4, 0x7c, 0xb8, 0x5c, 0xa9, 0x9f, 0x9c,
	0x70, 0x67, 0xfe, 0x0e, 0xad, 0x4a, 0x18, 0x27, 0xa2, 0xae, 0x21, 0xff, 0xc0, 0x6e, 0xe8, 0xa3,
	0x1f, 0xd5, 0x02, 0xc6, 0xad, 0x6d, 0x3e, 0x71, 0xe8, 0xe1, 0xb0, 0xbc, 0x4e, 0x52, 0xd3, 0xf7,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x10, 0xda, 0x28, 0x00, 0x88, 0x01, 0x00, 0x00,
}
