// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/filters/network/tcp_proxy/v3/tcp_proxy.proto

package envoy_extensions_filters_network_tcp_proxy_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	v31 "github.com/envoyproxy/go-control-plane/envoy/config/accesslog/v3"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	v32 "github.com/envoyproxy/go-control-plane/envoy/type/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TcpProxy struct {
	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// Types that are valid to be assigned to ClusterSpecifier:
	//	*TcpProxy_Cluster
	//	*TcpProxy_WeightedClusters
	ClusterSpecifier                  isTcpProxy_ClusterSpecifier `protobuf_oneof:"cluster_specifier"`
	MetadataMatch                     *v3.Metadata                `protobuf:"bytes,9,opt,name=metadata_match,json=metadataMatch,proto3" json:"metadata_match,omitempty"`
	IdleTimeout                       *duration.Duration          `protobuf:"bytes,8,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	DownstreamIdleTimeout             *duration.Duration          `protobuf:"bytes,3,opt,name=downstream_idle_timeout,json=downstreamIdleTimeout,proto3" json:"downstream_idle_timeout,omitempty"`
	UpstreamIdleTimeout               *duration.Duration          `protobuf:"bytes,4,opt,name=upstream_idle_timeout,json=upstreamIdleTimeout,proto3" json:"upstream_idle_timeout,omitempty"`
	AccessLog                         []*v31.AccessLog            `protobuf:"bytes,5,rep,name=access_log,json=accessLog,proto3" json:"access_log,omitempty"`
	HiddenEnvoyDeprecatedDeprecatedV1 *TcpProxy_DeprecatedV1      `protobuf:"bytes,6,opt,name=hidden_envoy_deprecated_deprecated_v1,json=hiddenEnvoyDeprecatedDeprecatedV1,proto3" json:"hidden_envoy_deprecated_deprecated_v1,omitempty"` // Deprecated: Do not use.
	MaxConnectAttempts                *wrappers.UInt32Value       `protobuf:"bytes,7,opt,name=max_connect_attempts,json=maxConnectAttempts,proto3" json:"max_connect_attempts,omitempty"`
	HashPolicy                        []*v32.HashPolicy           `protobuf:"bytes,11,rep,name=hash_policy,json=hashPolicy,proto3" json:"hash_policy,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}                    `json:"-"`
	XXX_unrecognized                  []byte                      `json:"-"`
	XXX_sizecache                     int32                       `json:"-"`
}

func (m *TcpProxy) Reset()         { *m = TcpProxy{} }
func (m *TcpProxy) String() string { return proto.CompactTextString(m) }
func (*TcpProxy) ProtoMessage()    {}
func (*TcpProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_926036763459e38f, []int{0}
}

func (m *TcpProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpProxy.Unmarshal(m, b)
}
func (m *TcpProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpProxy.Marshal(b, m, deterministic)
}
func (m *TcpProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpProxy.Merge(m, src)
}
func (m *TcpProxy) XXX_Size() int {
	return xxx_messageInfo_TcpProxy.Size(m)
}
func (m *TcpProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpProxy.DiscardUnknown(m)
}

var xxx_messageInfo_TcpProxy proto.InternalMessageInfo

func (m *TcpProxy) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

type isTcpProxy_ClusterSpecifier interface {
	isTcpProxy_ClusterSpecifier()
}

type TcpProxy_Cluster struct {
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3,oneof"`
}

type TcpProxy_WeightedClusters struct {
	WeightedClusters *TcpProxy_WeightedCluster `protobuf:"bytes,10,opt,name=weighted_clusters,json=weightedClusters,proto3,oneof"`
}

func (*TcpProxy_Cluster) isTcpProxy_ClusterSpecifier() {}

func (*TcpProxy_WeightedClusters) isTcpProxy_ClusterSpecifier() {}

func (m *TcpProxy) GetClusterSpecifier() isTcpProxy_ClusterSpecifier {
	if m != nil {
		return m.ClusterSpecifier
	}
	return nil
}

func (m *TcpProxy) GetCluster() string {
	if x, ok := m.GetClusterSpecifier().(*TcpProxy_Cluster); ok {
		return x.Cluster
	}
	return ""
}

func (m *TcpProxy) GetWeightedClusters() *TcpProxy_WeightedCluster {
	if x, ok := m.GetClusterSpecifier().(*TcpProxy_WeightedClusters); ok {
		return x.WeightedClusters
	}
	return nil
}

func (m *TcpProxy) GetMetadataMatch() *v3.Metadata {
	if m != nil {
		return m.MetadataMatch
	}
	return nil
}

func (m *TcpProxy) GetIdleTimeout() *duration.Duration {
	if m != nil {
		return m.IdleTimeout
	}
	return nil
}

func (m *TcpProxy) GetDownstreamIdleTimeout() *duration.Duration {
	if m != nil {
		return m.DownstreamIdleTimeout
	}
	return nil
}

func (m *TcpProxy) GetUpstreamIdleTimeout() *duration.Duration {
	if m != nil {
		return m.UpstreamIdleTimeout
	}
	return nil
}

func (m *TcpProxy) GetAccessLog() []*v31.AccessLog {
	if m != nil {
		return m.AccessLog
	}
	return nil
}

// Deprecated: Do not use.
func (m *TcpProxy) GetHiddenEnvoyDeprecatedDeprecatedV1() *TcpProxy_DeprecatedV1 {
	if m != nil {
		return m.HiddenEnvoyDeprecatedDeprecatedV1
	}
	return nil
}

func (m *TcpProxy) GetMaxConnectAttempts() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxConnectAttempts
	}
	return nil
}

func (m *TcpProxy) GetHashPolicy() []*v32.HashPolicy {
	if m != nil {
		return m.HashPolicy
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TcpProxy) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TcpProxy_Cluster)(nil),
		(*TcpProxy_WeightedClusters)(nil),
	}
}

// Deprecated: Do not use.
type TcpProxy_DeprecatedV1 struct {
	Routes               []*TcpProxy_DeprecatedV1_TCPRoute `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *TcpProxy_DeprecatedV1) Reset()         { *m = TcpProxy_DeprecatedV1{} }
func (m *TcpProxy_DeprecatedV1) String() string { return proto.CompactTextString(m) }
func (*TcpProxy_DeprecatedV1) ProtoMessage()    {}
func (*TcpProxy_DeprecatedV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_926036763459e38f, []int{0, 0}
}

func (m *TcpProxy_DeprecatedV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpProxy_DeprecatedV1.Unmarshal(m, b)
}
func (m *TcpProxy_DeprecatedV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpProxy_DeprecatedV1.Marshal(b, m, deterministic)
}
func (m *TcpProxy_DeprecatedV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpProxy_DeprecatedV1.Merge(m, src)
}
func (m *TcpProxy_DeprecatedV1) XXX_Size() int {
	return xxx_messageInfo_TcpProxy_DeprecatedV1.Size(m)
}
func (m *TcpProxy_DeprecatedV1) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpProxy_DeprecatedV1.DiscardUnknown(m)
}

var xxx_messageInfo_TcpProxy_DeprecatedV1 proto.InternalMessageInfo

func (m *TcpProxy_DeprecatedV1) GetRoutes() []*TcpProxy_DeprecatedV1_TCPRoute {
	if m != nil {
		return m.Routes
	}
	return nil
}

type TcpProxy_DeprecatedV1_TCPRoute struct {
	Cluster              string          `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	DestinationIpList    []*v3.CidrRange `protobuf:"bytes,2,rep,name=destination_ip_list,json=destinationIpList,proto3" json:"destination_ip_list,omitempty"`
	DestinationPorts     string          `protobuf:"bytes,3,opt,name=destination_ports,json=destinationPorts,proto3" json:"destination_ports,omitempty"`
	SourceIpList         []*v3.CidrRange `protobuf:"bytes,4,rep,name=source_ip_list,json=sourceIpList,proto3" json:"source_ip_list,omitempty"`
	SourcePorts          string          `protobuf:"bytes,5,opt,name=source_ports,json=sourcePorts,proto3" json:"source_ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TcpProxy_DeprecatedV1_TCPRoute) Reset()         { *m = TcpProxy_DeprecatedV1_TCPRoute{} }
func (m *TcpProxy_DeprecatedV1_TCPRoute) String() string { return proto.CompactTextString(m) }
func (*TcpProxy_DeprecatedV1_TCPRoute) ProtoMessage()    {}
func (*TcpProxy_DeprecatedV1_TCPRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_926036763459e38f, []int{0, 0, 0}
}

func (m *TcpProxy_DeprecatedV1_TCPRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpProxy_DeprecatedV1_TCPRoute.Unmarshal(m, b)
}
func (m *TcpProxy_DeprecatedV1_TCPRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpProxy_DeprecatedV1_TCPRoute.Marshal(b, m, deterministic)
}
func (m *TcpProxy_DeprecatedV1_TCPRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpProxy_DeprecatedV1_TCPRoute.Merge(m, src)
}
func (m *TcpProxy_DeprecatedV1_TCPRoute) XXX_Size() int {
	return xxx_messageInfo_TcpProxy_DeprecatedV1_TCPRoute.Size(m)
}
func (m *TcpProxy_DeprecatedV1_TCPRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpProxy_DeprecatedV1_TCPRoute.DiscardUnknown(m)
}

var xxx_messageInfo_TcpProxy_DeprecatedV1_TCPRoute proto.InternalMessageInfo

func (m *TcpProxy_DeprecatedV1_TCPRoute) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *TcpProxy_DeprecatedV1_TCPRoute) GetDestinationIpList() []*v3.CidrRange {
	if m != nil {
		return m.DestinationIpList
	}
	return nil
}

func (m *TcpProxy_DeprecatedV1_TCPRoute) GetDestinationPorts() string {
	if m != nil {
		return m.DestinationPorts
	}
	return ""
}

func (m *TcpProxy_DeprecatedV1_TCPRoute) GetSourceIpList() []*v3.CidrRange {
	if m != nil {
		return m.SourceIpList
	}
	return nil
}

func (m *TcpProxy_DeprecatedV1_TCPRoute) GetSourcePorts() string {
	if m != nil {
		return m.SourcePorts
	}
	return ""
}

type TcpProxy_WeightedCluster struct {
	Clusters             []*TcpProxy_WeightedCluster_ClusterWeight `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *TcpProxy_WeightedCluster) Reset()         { *m = TcpProxy_WeightedCluster{} }
func (m *TcpProxy_WeightedCluster) String() string { return proto.CompactTextString(m) }
func (*TcpProxy_WeightedCluster) ProtoMessage()    {}
func (*TcpProxy_WeightedCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_926036763459e38f, []int{0, 1}
}

func (m *TcpProxy_WeightedCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpProxy_WeightedCluster.Unmarshal(m, b)
}
func (m *TcpProxy_WeightedCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpProxy_WeightedCluster.Marshal(b, m, deterministic)
}
func (m *TcpProxy_WeightedCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpProxy_WeightedCluster.Merge(m, src)
}
func (m *TcpProxy_WeightedCluster) XXX_Size() int {
	return xxx_messageInfo_TcpProxy_WeightedCluster.Size(m)
}
func (m *TcpProxy_WeightedCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpProxy_WeightedCluster.DiscardUnknown(m)
}

var xxx_messageInfo_TcpProxy_WeightedCluster proto.InternalMessageInfo

func (m *TcpProxy_WeightedCluster) GetClusters() []*TcpProxy_WeightedCluster_ClusterWeight {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type TcpProxy_WeightedCluster_ClusterWeight struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weight               uint32       `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	MetadataMatch        *v3.Metadata `protobuf:"bytes,3,opt,name=metadata_match,json=metadataMatch,proto3" json:"metadata_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TcpProxy_WeightedCluster_ClusterWeight) Reset() {
	*m = TcpProxy_WeightedCluster_ClusterWeight{}
}
func (m *TcpProxy_WeightedCluster_ClusterWeight) String() string { return proto.CompactTextString(m) }
func (*TcpProxy_WeightedCluster_ClusterWeight) ProtoMessage()    {}
func (*TcpProxy_WeightedCluster_ClusterWeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_926036763459e38f, []int{0, 1, 0}
}

func (m *TcpProxy_WeightedCluster_ClusterWeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpProxy_WeightedCluster_ClusterWeight.Unmarshal(m, b)
}
func (m *TcpProxy_WeightedCluster_ClusterWeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpProxy_WeightedCluster_ClusterWeight.Marshal(b, m, deterministic)
}
func (m *TcpProxy_WeightedCluster_ClusterWeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpProxy_WeightedCluster_ClusterWeight.Merge(m, src)
}
func (m *TcpProxy_WeightedCluster_ClusterWeight) XXX_Size() int {
	return xxx_messageInfo_TcpProxy_WeightedCluster_ClusterWeight.Size(m)
}
func (m *TcpProxy_WeightedCluster_ClusterWeight) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpProxy_WeightedCluster_ClusterWeight.DiscardUnknown(m)
}

var xxx_messageInfo_TcpProxy_WeightedCluster_ClusterWeight proto.InternalMessageInfo

func (m *TcpProxy_WeightedCluster_ClusterWeight) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TcpProxy_WeightedCluster_ClusterWeight) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *TcpProxy_WeightedCluster_ClusterWeight) GetMetadataMatch() *v3.Metadata {
	if m != nil {
		return m.MetadataMatch
	}
	return nil
}

func init() {
	proto.RegisterType((*TcpProxy)(nil), "envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy")
	proto.RegisterType((*TcpProxy_DeprecatedV1)(nil), "envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.DeprecatedV1")
	proto.RegisterType((*TcpProxy_DeprecatedV1_TCPRoute)(nil), "envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.DeprecatedV1.TCPRoute")
	proto.RegisterType((*TcpProxy_WeightedCluster)(nil), "envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster")
	proto.RegisterType((*TcpProxy_WeightedCluster_ClusterWeight)(nil), "envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy.WeightedCluster.ClusterWeight")
}

func init() {
	proto.RegisterFile("envoy/extensions/filters/network/tcp_proxy/v3/tcp_proxy.proto", fileDescriptor_926036763459e38f)
}

var fileDescriptor_926036763459e38f = []byte{
	// 927 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x0e, 0x25, 0xc5, 0x96, 0x47, 0x76, 0x63, 0x33, 0x0d, 0xc2, 0xa8, 0x85, 0x7f, 0x82, 0x16,
	0x50, 0x5b, 0x94, 0x84, 0xad, 0x4b, 0xa1, 0xfe, 0xa0, 0xa6, 0x1c, 0xd8, 0x06, 0xe2, 0x44, 0x21,
	0x1c, 0xe7, 0x48, 0xac, 0xc9, 0x95, 0xb4, 0x28, 0xc5, 0x25, 0x76, 0x97, 0x92, 0x8c, 0xbe, 0x40,
	0xcf, 0x3d, 0xe6, 0x29, 0xfa, 0x0a, 0x3d, 0x14, 0x7d, 0x92, 0xde, 0xfa, 0x00, 0x45, 0x4e, 0xc5,
	0xfe, 0x50, 0xa2, 0x5c, 0xb5, 0xae, 0x93, 0x9c, 0xc4, 0x9d, 0x99, 0xef, 0x9b, 0xd9, 0x6f, 0x76,
	0x46, 0xf0, 0x2d, 0x4e, 0xc7, 0xf4, 0xca, 0xc3, 0x53, 0x81, 0x53, 0x4e, 0x68, 0xca, 0xbd, 0x3e,
	0x49, 0x04, 0x66, 0xdc, 0x4b, 0xb1, 0x98, 0x50, 0xf6, 0x83, 0x27, 0xa2, 0x2c, 0xcc, 0x18, 0x9d,
	0x5e, 0x79, 0xe3, 0xf6, 0xfc, 0xe0, 0x66, 0x8c, 0x0a, 0x6a, 0x7f, 0xa9, 0xe0, 0xee, 0x1c, 0xee,
	0x1a, 0xb8, 0x6b, 0xe0, 0xee, 0x1c, 0x31, 0x6e, 0x37, 0x3f, 0xd3, 0xd9, 0x22, 0x9a, 0xf6, 0xc9,
	0xc0, 0x43, 0x51, 0x84, 0x39, 0x4f, 0xe8, 0x40, 0x32, 0xcf, 0x0e, 0x9a, 0xb9, 0xf9, 0x78, 0x21,
	0x34, 0xa2, 0x0c, 0xab, 0xa8, 0x38, 0x66, 0x98, 0x73, 0x13, 0xb3, 0xb3, 0x34, 0xe6, 0x12, 0x71,
	0xbc, 0x18, 0x20, 0xae, 0x32, 0xe5, 0x19, 0x22, 0x3e, 0x0c, 0x33, 0x9a, 0x90, 0xc8, 0xd4, 0xdf,
	0xdc, 0x1e, 0x50, 0x3a, 0x48, 0xb0, 0xa7, 0x4e, 0x97, 0x79, 0xdf, 0x8b, 0x73, 0x86, 0x04, 0xa1,
	0xe9, 0xbf, 0xf9, 0x27, 0x0c, 0x65, 0x99, 0xbc, 0x9f, 0xf6, 0xef, 0xe5, 0x71, 0x86, 0x3c, 0x94,
	0xa6, 0x54, 0x28, 0x18, 0xf7, 0xc6, 0x98, 0x49, 0x21, 0x48, 0x5a, 0x5c, 0xe4, 0xe1, 0x18, 0x25,
	0x24, 0x46, 0x02, 0x7b, 0xc5, 0x87, 0x76, 0x3c, 0xfe, 0xf5, 0x1e, 0xd4, 0xcf, 0xa3, 0xac, 0x27,
	0xc5, 0xb1, 0x5b, 0xd0, 0xe0, 0x02, 0x89, 0x30, 0x63, 0xb8, 0x4f, 0xa6, 0x8e, 0xb5, 0x6b, 0xb5,
	0xd6, 0xfc, 0xd5, 0x37, 0x7e, 0x8d, 0x55, 0x76, 0xad, 0x00, 0xa4, 0xaf, 0xa7, 0x5c, 0x76, 0x13,
	0x56, 0xa3, 0x24, 0xe7, 0x02, 0x33, 0xa7, 0x22, 0xa3, 0x4e, 0xee, 0x04, 0x85, 0xc1, 0x1e, 0xc3,
	0xd6, 0x04, 0x93, 0xc1, 0x50, 0xe0, 0x38, 0x34, 0x36, 0xee, 0xc0, 0xae, 0xd5, 0x6a, 0x1c, 0x1c,
	0xbb, 0xb7, 0x6a, 0x95, 0x5b, 0x54, 0xe6, 0xbe, 0x32, 0x84, 0x5d, 0xcd, 0x77, 0x72, 0x27, 0xd8,
	0x9c, 0x2c, 0x9a, 0xb8, 0xfd, 0x04, 0x3e, 0x18, 0x61, 0x81, 0x62, 0x24, 0x50, 0x38, 0x42, 0x22,
	0x1a, 0x3a, 0x6b, 0x2a, 0xe9, 0xb6, 0x49, 0xaa, 0x3b, 0xe4, 0xca, 0x0e, 0x49, 0xee, 0x33, 0x13,
	0x1b, 0x6c, 0x14, 0xa8, 0x33, 0x09, 0xb2, 0xbf, 0x81, 0x75, 0x12, 0x27, 0x38, 0x14, 0x64, 0x84,
	0x69, 0x2e, 0x9c, 0xba, 0x22, 0x79, 0xe4, 0xea, 0x26, 0xb8, 0x45, 0x13, 0xdc, 0x23, 0xd3, 0xa4,
	0xa0, 0x21, 0xc3, 0xcf, 0x75, 0xb4, 0xfd, 0x02, 0x1e, 0xc6, 0x74, 0x92, 0x72, 0xc1, 0x30, 0x1a,
	0x85, 0x0b, 0x44, 0xd5, 0x9b, 0x88, 0x1e, 0xcc, 0x91, 0xa7, 0x25, 0xca, 0x33, 0x78, 0x90, 0x67,
	0xcb, 0x08, 0x6b, 0x37, 0x11, 0xde, 0x2f, 0x70, 0x65, 0xba, 0x2e, 0x80, 0x7e, 0xe6, 0x61, 0x42,
	0x07, 0xce, 0xdd, 0xdd, 0x6a, 0xab, 0x71, 0xf0, 0xc9, 0xa2, 0x44, 0xf3, 0x31, 0x18, 0xb7, 0xdd,
	0x43, 0x75, 0x78, 0x4a, 0x07, 0xc1, 0x1a, 0x2a, 0x3e, 0xed, 0xd7, 0x16, 0x7c, 0x3a, 0x24, 0x71,
	0x8c, 0xd3, 0x50, 0x21, 0xc3, 0x18, 0x67, 0x0c, 0x47, 0x48, 0xf6, 0xbc, 0xf4, 0x39, 0xde, 0x77,
	0x56, 0x54, 0x91, 0x47, 0x6f, 0xdb, 0xf8, 0xa3, 0x19, 0xd9, 0xc5, 0xbe, 0x5f, 0x71, 0xac, 0x60,
	0x4f, 0xa7, 0x7d, 0x22, 0xe9, 0xe6, 0xce, 0x72, 0x98, 0xfd, 0x0a, 0x3e, 0x1c, 0xa1, 0x69, 0x18,
	0xd1, 0x34, 0xc5, 0x91, 0x08, 0x91, 0x10, 0x78, 0x94, 0x09, 0xee, 0xac, 0xaa, 0x52, 0x3e, 0xfe,
	0x87, 0x5e, 0x2f, 0x4f, 0x53, 0xd1, 0x3e, 0xb8, 0x40, 0x49, 0x8e, 0xd5, 0x6b, 0xff, 0xbc, 0xd2,
	0xb2, 0x02, 0x7b, 0x84, 0xa6, 0x5d, 0xcd, 0x70, 0x68, 0x08, 0xec, 0x23, 0x68, 0x94, 0xa6, 0xd7,
	0x69, 0x28, 0xed, 0x1e, 0x99, 0xab, 0xc9, 0xf9, 0x96, 0xa5, 0x9f, 0x20, 0x3e, 0xec, 0xa9, 0x00,
	0xbf, 0xfe, 0xc6, 0xbf, 0xfb, 0xb3, 0x55, 0xd9, 0xb4, 0x02, 0x18, 0xce, 0xac, 0xcd, 0x5f, 0x6a,
	0xb0, 0xbe, 0x50, 0x2f, 0x85, 0x15, 0x46, 0x73, 0x81, 0xb9, 0x63, 0x29, 0xc6, 0xb3, 0xf7, 0x21,
	0x96, 0x7b, 0xde, 0xed, 0x05, 0x92, 0xb5, 0xa8, 0xa2, 0x6e, 0x05, 0x26, 0x4d, 0xf3, 0x8f, 0x0a,
	0xd4, 0x0b, 0xb7, 0xbd, 0x37, 0x1f, 0xe5, 0x6b, 0x03, 0x3f, 0x9b, 0xe8, 0xe7, 0x70, 0x3f, 0xc6,
	0x5c, 0x90, 0x54, 0x3d, 0xab, 0x90, 0x64, 0x61, 0x42, 0xb8, 0x70, 0x2a, 0xaa, 0xda, 0x9d, 0xe5,
	0xe3, 0xd5, 0x25, 0x31, 0x0b, 0x50, 0x3a, 0xc0, 0xc1, 0x56, 0x09, 0x7b, 0x9a, 0x3d, 0x25, 0x5c,
	0xd8, 0x5f, 0x40, 0xd9, 0x18, 0x66, 0x94, 0x09, 0xae, 0xe6, 0x63, 0x2d, 0xd8, 0x2c, 0x39, 0x7a,
	0xd2, 0x2e, 0xe7, 0x9a, 0xd3, 0x9c, 0x45, 0x78, 0x96, 0xb8, 0xf6, 0xff, 0x12, 0xaf, 0x6b, 0x98,
	0xc9, 0xb9, 0x07, 0xe6, 0x6c, 0xd2, 0xdd, 0x55, 0xe9, 0x1a, 0xda, 0xa6, 0x32, 0x75, 0x9e, 0xbd,
	0xfe, 0xed, 0xa7, 0xed, 0x53, 0x38, 0x5e, 0xe0, 0xd5, 0xd2, 0x2f, 0x53, 0xfe, 0xe0, 0x06, 0xe5,
	0x3b, 0xc7, 0x92, 0xef, 0x7b, 0xf8, 0xee, 0xdd, 0xf8, 0x1c, 0xab, 0xf9, 0x7b, 0x15, 0xee, 0x5d,
	0x5b, 0x81, 0xf6, 0x8f, 0x50, 0x9f, 0x6d, 0x57, 0xfd, 0x6e, 0x5e, 0xbe, 0xa7, 0xed, 0xea, 0x9a,
	0x5f, 0x6d, 0x2e, 0xbd, 0x9f, 0x59, 0xc2, 0xe6, 0x9f, 0x16, 0x6c, 0x2c, 0x44, 0xd9, 0x1f, 0x41,
	0x2d, 0x45, 0x23, 0x7c, 0xfd, 0x0d, 0x29, 0xa3, 0xbd, 0x03, 0x2b, 0x7a, 0x5d, 0xab, 0x7f, 0x8b,
	0x8d, 0xf9, 0x94, 0x19, 0xf3, 0x92, 0xdd, 0x5d, 0x7d, 0x8b, 0xdd, 0xdd, 0xb9, 0x90, 0x82, 0xbf,
	0x80, 0xe7, 0xb7, 0x17, 0xfc, 0x3f, 0x25, 0xe8, 0x9c, 0x48, 0xde, 0x2e, 0x1c, 0xbe, 0x33, 0x6f,
	0xe7, 0x2b, 0xc9, 0xd4, 0x86, 0xfd, 0x5b, 0x33, 0xf9, 0x0e, 0x6c, 0x19, 0xf9, 0x43, 0x9e, 0xe1,
	0x88, 0xf4, 0x09, 0x66, 0x76, 0xf5, 0x2f, 0xdf, 0xf2, 0x9f, 0xc1, 0xd7, 0x84, 0x6a, 0xa1, 0x34,
	0xec, 0x56, 0xcf, 0xc0, 0xdf, 0x28, 0x52, 0xf4, 0xe4, 0x42, 0xec, 0x59, 0x97, 0x2b, 0x6a, 0x33,
	0xb6, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x34, 0x86, 0x74, 0x70, 0x97, 0x09, 0x00, 0x00,
}
