// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/filters/http/grpc_http1_reverse_bridge/v3alpha/config.proto

package envoy_extensions_filters_http_grpc_http1_reverse_bridge_v3alpha

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FilterConfig struct {
	ContentType          string   `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	WithholdGrpcFrames   bool     `protobuf:"varint,2,opt,name=withhold_grpc_frames,json=withholdGrpcFrames,proto3" json:"withhold_grpc_frames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterConfig) Reset()         { *m = FilterConfig{} }
func (m *FilterConfig) String() string { return proto.CompactTextString(m) }
func (*FilterConfig) ProtoMessage()    {}
func (*FilterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d70565c35fada1f8, []int{0}
}

func (m *FilterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterConfig.Unmarshal(m, b)
}
func (m *FilterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterConfig.Marshal(b, m, deterministic)
}
func (m *FilterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterConfig.Merge(m, src)
}
func (m *FilterConfig) XXX_Size() int {
	return xxx_messageInfo_FilterConfig.Size(m)
}
func (m *FilterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FilterConfig proto.InternalMessageInfo

func (m *FilterConfig) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *FilterConfig) GetWithholdGrpcFrames() bool {
	if m != nil {
		return m.WithholdGrpcFrames
	}
	return false
}

type FilterConfigPerRoute struct {
	Disabled             bool     `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterConfigPerRoute) Reset()         { *m = FilterConfigPerRoute{} }
func (m *FilterConfigPerRoute) String() string { return proto.CompactTextString(m) }
func (*FilterConfigPerRoute) ProtoMessage()    {}
func (*FilterConfigPerRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_d70565c35fada1f8, []int{1}
}

func (m *FilterConfigPerRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterConfigPerRoute.Unmarshal(m, b)
}
func (m *FilterConfigPerRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterConfigPerRoute.Marshal(b, m, deterministic)
}
func (m *FilterConfigPerRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterConfigPerRoute.Merge(m, src)
}
func (m *FilterConfigPerRoute) XXX_Size() int {
	return xxx_messageInfo_FilterConfigPerRoute.Size(m)
}
func (m *FilterConfigPerRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterConfigPerRoute.DiscardUnknown(m)
}

var xxx_messageInfo_FilterConfigPerRoute proto.InternalMessageInfo

func (m *FilterConfigPerRoute) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func init() {
	proto.RegisterType((*FilterConfig)(nil), "envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3alpha.FilterConfig")
	proto.RegisterType((*FilterConfigPerRoute)(nil), "envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3alpha.FilterConfigPerRoute")
}

func init() {
	proto.RegisterFile("envoy/extensions/filters/http/grpc_http1_reverse_bridge/v3alpha/config.proto", fileDescriptor_d70565c35fada1f8)
}

var fileDescriptor_d70565c35fada1f8 = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0xc9, 0x10, 0x9d, 0xd9, 0x4e, 0x65, 0xe0, 0xd8, 0x41, 0xe6, 0x4e, 0xc3, 0x43, 0xe2,
	0xdc, 0x6d, 0x17, 0xa1, 0xc2, 0x14, 0x51, 0x1c, 0x45, 0xf0, 0x66, 0xc9, 0xda, 0x6f, 0x6b, 0xa0,
	0x26, 0x21, 0xfd, 0x56, 0xd7, 0x7f, 0x20, 0xf8, 0x0f, 0xfc, 0x2f, 0x1e, 0xfd, 0x53, 0x9e, 0xa4,
	0x59, 0xab, 0xbb, 0x88, 0x07, 0xbd, 0x7d, 0xc9, 0x1b, 0x9e, 0xf7, 0x7d, 0xf3, 0xd1, 0x6b, 0x50,
	0xb9, 0x2e, 0x38, 0xac, 0x11, 0x54, 0x26, 0xb5, 0xca, 0xf8, 0x42, 0xa6, 0x08, 0x36, 0xe3, 0x09,
	0xa2, 0xe1, 0x4b, 0x6b, 0xa2, 0xb0, 0x9c, 0x46, 0xa1, 0x85, 0x1c, 0x6c, 0x06, 0xe1, 0xdc, 0xca,
	0x78, 0x09, 0x3c, 0x1f, 0x8b, 0xd4, 0x24, 0x82, 0x47, 0x5a, 0x2d, 0xe4, 0x92, 0x19, 0xab, 0x51,
	0x7b, 0x67, 0x8e, 0xc6, 0xbe, 0x69, 0xac, 0xa2, 0xb1, 0x92, 0xc1, 0x7e, 0xa4, 0xb1, 0x8a, 0xd6,
	0x3b, 0x5a, 0xc5, 0x46, 0x70, 0xa1, 0x94, 0x46, 0x81, 0x2e, 0x4e, 0xf9, 0x4c, 0x6a, 0x25, 0x55,
	0xe5, 0xd1, 0x3b, 0xc8, 0x45, 0x2a, 0x63, 0x81, 0xc0, 0xeb, 0x61, 0x23, 0x0c, 0xde, 0x08, 0x6d,
	0x4f, 0x9d, 0xdd, 0xb9, 0xcb, 0xe4, 0x1d, 0xd3, 0x76, 0xa4, 0x15, 0x82, 0xc2, 0x10, 0x0b, 0x03,
	0x5d, 0xd2, 0x27, 0xc3, 0x7d, 0x7f, 0xef, 0xc3, 0xdf, 0xb1, 0x8d, 0x3e, 0x09, 0x5a, 0x95, 0x78,
	0x57, 0x18, 0xf0, 0x4e, 0x68, 0xe7, 0x49, 0x62, 0x92, 0xe8, 0x34, 0x0e, 0x5d, 0xcc, 0x85, 0x15,
	0x8f, 0x90, 0x75, 0x1b, 0x7d, 0x32, 0x6c, 0x06, 0x5e, 0xad, 0x5d, 0x58, 0x13, 0x4d, 0x9d, 0x32,
	0xb9, 0x7d, 0x7d, 0x7f, 0x3e, 0xbc, 0xa2, 0x97, 0x9b, 0xca, 0xd5, 0x37, 0x6c, 0xea, 0xfe, 0xda,
	0xf6, 0xd4, 0xb5, 0x1d, 0xb1, 0xed, 0xb8, 0x83, 0x17, 0x42, 0x3b, 0xdb, 0x17, 0x33, 0xb0, 0x81,
	0x5e, 0x21, 0x78, 0x3d, 0xda, 0x8c, 0x65, 0x26, 0xe6, 0x29, 0xc4, 0xae, 0x43, 0x33, 0xf8, 0x3a,
	0x4f, 0xee, 0xcb, 0x14, 0x01, 0x9d, 0xfd, 0x57, 0x8a, 0xda, 0xd4, 0x7f, 0xa0, 0x37, 0x52, 0x33,
	0x87, 0x35, 0x56, 0xaf, 0x0b, 0xf6, 0xc7, 0xd5, 0xfa, 0xad, 0xca, 0xa0, 0xdc, 0xd5, 0x8c, 0xcc,
	0x77, 0xdd, 0xd2, 0xc6, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x54, 0x03, 0x73, 0x23, 0x81, 0x02,
	0x00, 0x00,
}
