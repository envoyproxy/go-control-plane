// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/transport_sockets/tls/v3/tls.proto

package envoy_extensions_transport_sockets_tls_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpstreamTlsContext struct {
	CommonTlsContext     *CommonTlsContext     `protobuf:"bytes,1,opt,name=common_tls_context,json=commonTlsContext,proto3" json:"common_tls_context,omitempty"`
	Sni                  string                `protobuf:"bytes,2,opt,name=sni,proto3" json:"sni,omitempty"`
	AllowRenegotiation   bool                  `protobuf:"varint,3,opt,name=allow_renegotiation,json=allowRenegotiation,proto3" json:"allow_renegotiation,omitempty"`
	MaxSessionKeys       *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=max_session_keys,json=maxSessionKeys,proto3" json:"max_session_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpstreamTlsContext) Reset()         { *m = UpstreamTlsContext{} }
func (m *UpstreamTlsContext) String() string { return proto.CompactTextString(m) }
func (*UpstreamTlsContext) ProtoMessage()    {}
func (*UpstreamTlsContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_57bc8d868b0a9df1, []int{0}
}

func (m *UpstreamTlsContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpstreamTlsContext.Unmarshal(m, b)
}
func (m *UpstreamTlsContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpstreamTlsContext.Marshal(b, m, deterministic)
}
func (m *UpstreamTlsContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamTlsContext.Merge(m, src)
}
func (m *UpstreamTlsContext) XXX_Size() int {
	return xxx_messageInfo_UpstreamTlsContext.Size(m)
}
func (m *UpstreamTlsContext) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamTlsContext.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamTlsContext proto.InternalMessageInfo

func (m *UpstreamTlsContext) GetCommonTlsContext() *CommonTlsContext {
	if m != nil {
		return m.CommonTlsContext
	}
	return nil
}

func (m *UpstreamTlsContext) GetSni() string {
	if m != nil {
		return m.Sni
	}
	return ""
}

func (m *UpstreamTlsContext) GetAllowRenegotiation() bool {
	if m != nil {
		return m.AllowRenegotiation
	}
	return false
}

func (m *UpstreamTlsContext) GetMaxSessionKeys() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxSessionKeys
	}
	return nil
}

type DownstreamTlsContext struct {
	CommonTlsContext         *CommonTlsContext   `protobuf:"bytes,1,opt,name=common_tls_context,json=commonTlsContext,proto3" json:"common_tls_context,omitempty"`
	RequireClientCertificate *wrappers.BoolValue `protobuf:"bytes,2,opt,name=require_client_certificate,json=requireClientCertificate,proto3" json:"require_client_certificate,omitempty"`
	RequireSni               *wrappers.BoolValue `protobuf:"bytes,3,opt,name=require_sni,json=requireSni,proto3" json:"require_sni,omitempty"`
	// Types that are valid to be assigned to SessionTicketKeysType:
	//	*DownstreamTlsContext_SessionTicketKeys
	//	*DownstreamTlsContext_SessionTicketKeysSdsSecretConfig
	//	*DownstreamTlsContext_DisableStatelessSessionResumption
	SessionTicketKeysType isDownstreamTlsContext_SessionTicketKeysType `protobuf_oneof:"session_ticket_keys_type"`
	SessionTimeout        *duration.Duration                           `protobuf:"bytes,6,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                     `json:"-"`
	XXX_unrecognized      []byte                                       `json:"-"`
	XXX_sizecache         int32                                        `json:"-"`
}

func (m *DownstreamTlsContext) Reset()         { *m = DownstreamTlsContext{} }
func (m *DownstreamTlsContext) String() string { return proto.CompactTextString(m) }
func (*DownstreamTlsContext) ProtoMessage()    {}
func (*DownstreamTlsContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_57bc8d868b0a9df1, []int{1}
}

func (m *DownstreamTlsContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownstreamTlsContext.Unmarshal(m, b)
}
func (m *DownstreamTlsContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownstreamTlsContext.Marshal(b, m, deterministic)
}
func (m *DownstreamTlsContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamTlsContext.Merge(m, src)
}
func (m *DownstreamTlsContext) XXX_Size() int {
	return xxx_messageInfo_DownstreamTlsContext.Size(m)
}
func (m *DownstreamTlsContext) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamTlsContext.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamTlsContext proto.InternalMessageInfo

func (m *DownstreamTlsContext) GetCommonTlsContext() *CommonTlsContext {
	if m != nil {
		return m.CommonTlsContext
	}
	return nil
}

func (m *DownstreamTlsContext) GetRequireClientCertificate() *wrappers.BoolValue {
	if m != nil {
		return m.RequireClientCertificate
	}
	return nil
}

func (m *DownstreamTlsContext) GetRequireSni() *wrappers.BoolValue {
	if m != nil {
		return m.RequireSni
	}
	return nil
}

type isDownstreamTlsContext_SessionTicketKeysType interface {
	isDownstreamTlsContext_SessionTicketKeysType()
}

type DownstreamTlsContext_SessionTicketKeys struct {
	SessionTicketKeys *TlsSessionTicketKeys `protobuf:"bytes,4,opt,name=session_ticket_keys,json=sessionTicketKeys,proto3,oneof"`
}

type DownstreamTlsContext_SessionTicketKeysSdsSecretConfig struct {
	SessionTicketKeysSdsSecretConfig *SdsSecretConfig `protobuf:"bytes,5,opt,name=session_ticket_keys_sds_secret_config,json=sessionTicketKeysSdsSecretConfig,proto3,oneof"`
}

type DownstreamTlsContext_DisableStatelessSessionResumption struct {
	DisableStatelessSessionResumption bool `protobuf:"varint,7,opt,name=disable_stateless_session_resumption,json=disableStatelessSessionResumption,proto3,oneof"`
}

func (*DownstreamTlsContext_SessionTicketKeys) isDownstreamTlsContext_SessionTicketKeysType() {}

func (*DownstreamTlsContext_SessionTicketKeysSdsSecretConfig) isDownstreamTlsContext_SessionTicketKeysType() {
}

func (*DownstreamTlsContext_DisableStatelessSessionResumption) isDownstreamTlsContext_SessionTicketKeysType() {
}

func (m *DownstreamTlsContext) GetSessionTicketKeysType() isDownstreamTlsContext_SessionTicketKeysType {
	if m != nil {
		return m.SessionTicketKeysType
	}
	return nil
}

func (m *DownstreamTlsContext) GetSessionTicketKeys() *TlsSessionTicketKeys {
	if x, ok := m.GetSessionTicketKeysType().(*DownstreamTlsContext_SessionTicketKeys); ok {
		return x.SessionTicketKeys
	}
	return nil
}

func (m *DownstreamTlsContext) GetSessionTicketKeysSdsSecretConfig() *SdsSecretConfig {
	if x, ok := m.GetSessionTicketKeysType().(*DownstreamTlsContext_SessionTicketKeysSdsSecretConfig); ok {
		return x.SessionTicketKeysSdsSecretConfig
	}
	return nil
}

func (m *DownstreamTlsContext) GetDisableStatelessSessionResumption() bool {
	if x, ok := m.GetSessionTicketKeysType().(*DownstreamTlsContext_DisableStatelessSessionResumption); ok {
		return x.DisableStatelessSessionResumption
	}
	return false
}

func (m *DownstreamTlsContext) GetSessionTimeout() *duration.Duration {
	if m != nil {
		return m.SessionTimeout
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DownstreamTlsContext) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DownstreamTlsContext_SessionTicketKeys)(nil),
		(*DownstreamTlsContext_SessionTicketKeysSdsSecretConfig)(nil),
		(*DownstreamTlsContext_DisableStatelessSessionResumption)(nil),
	}
}

type CommonTlsContext struct {
	TlsParams                      *TlsParameters     `protobuf:"bytes,1,opt,name=tls_params,json=tlsParams,proto3" json:"tls_params,omitempty"`
	TlsCertificates                []*TlsCertificate  `protobuf:"bytes,2,rep,name=tls_certificates,json=tlsCertificates,proto3" json:"tls_certificates,omitempty"`
	TlsCertificateSdsSecretConfigs []*SdsSecretConfig `protobuf:"bytes,6,rep,name=tls_certificate_sds_secret_configs,json=tlsCertificateSdsSecretConfigs,proto3" json:"tls_certificate_sds_secret_configs,omitempty"`
	// Types that are valid to be assigned to ValidationContextType:
	//	*CommonTlsContext_ValidationContext
	//	*CommonTlsContext_ValidationContextSdsSecretConfig
	//	*CommonTlsContext_CombinedValidationContext
	ValidationContextType isCommonTlsContext_ValidationContextType `protobuf_oneof:"validation_context_type"`
	AlpnProtocols         []string                                 `protobuf:"bytes,4,rep,name=alpn_protocols,json=alpnProtocols,proto3" json:"alpn_protocols,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                 `json:"-"`
	XXX_unrecognized      []byte                                   `json:"-"`
	XXX_sizecache         int32                                    `json:"-"`
}

func (m *CommonTlsContext) Reset()         { *m = CommonTlsContext{} }
func (m *CommonTlsContext) String() string { return proto.CompactTextString(m) }
func (*CommonTlsContext) ProtoMessage()    {}
func (*CommonTlsContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_57bc8d868b0a9df1, []int{2}
}

func (m *CommonTlsContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonTlsContext.Unmarshal(m, b)
}
func (m *CommonTlsContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonTlsContext.Marshal(b, m, deterministic)
}
func (m *CommonTlsContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonTlsContext.Merge(m, src)
}
func (m *CommonTlsContext) XXX_Size() int {
	return xxx_messageInfo_CommonTlsContext.Size(m)
}
func (m *CommonTlsContext) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonTlsContext.DiscardUnknown(m)
}

var xxx_messageInfo_CommonTlsContext proto.InternalMessageInfo

func (m *CommonTlsContext) GetTlsParams() *TlsParameters {
	if m != nil {
		return m.TlsParams
	}
	return nil
}

func (m *CommonTlsContext) GetTlsCertificates() []*TlsCertificate {
	if m != nil {
		return m.TlsCertificates
	}
	return nil
}

func (m *CommonTlsContext) GetTlsCertificateSdsSecretConfigs() []*SdsSecretConfig {
	if m != nil {
		return m.TlsCertificateSdsSecretConfigs
	}
	return nil
}

type isCommonTlsContext_ValidationContextType interface {
	isCommonTlsContext_ValidationContextType()
}

type CommonTlsContext_ValidationContext struct {
	ValidationContext *CertificateValidationContext `protobuf:"bytes,3,opt,name=validation_context,json=validationContext,proto3,oneof"`
}

type CommonTlsContext_ValidationContextSdsSecretConfig struct {
	ValidationContextSdsSecretConfig *SdsSecretConfig `protobuf:"bytes,7,opt,name=validation_context_sds_secret_config,json=validationContextSdsSecretConfig,proto3,oneof"`
}

type CommonTlsContext_CombinedValidationContext struct {
	CombinedValidationContext *CommonTlsContext_CombinedCertificateValidationContext `protobuf:"bytes,8,opt,name=combined_validation_context,json=combinedValidationContext,proto3,oneof"`
}

func (*CommonTlsContext_ValidationContext) isCommonTlsContext_ValidationContextType() {}

func (*CommonTlsContext_ValidationContextSdsSecretConfig) isCommonTlsContext_ValidationContextType() {}

func (*CommonTlsContext_CombinedValidationContext) isCommonTlsContext_ValidationContextType() {}

func (m *CommonTlsContext) GetValidationContextType() isCommonTlsContext_ValidationContextType {
	if m != nil {
		return m.ValidationContextType
	}
	return nil
}

func (m *CommonTlsContext) GetValidationContext() *CertificateValidationContext {
	if x, ok := m.GetValidationContextType().(*CommonTlsContext_ValidationContext); ok {
		return x.ValidationContext
	}
	return nil
}

func (m *CommonTlsContext) GetValidationContextSdsSecretConfig() *SdsSecretConfig {
	if x, ok := m.GetValidationContextType().(*CommonTlsContext_ValidationContextSdsSecretConfig); ok {
		return x.ValidationContextSdsSecretConfig
	}
	return nil
}

func (m *CommonTlsContext) GetCombinedValidationContext() *CommonTlsContext_CombinedCertificateValidationContext {
	if x, ok := m.GetValidationContextType().(*CommonTlsContext_CombinedValidationContext); ok {
		return x.CombinedValidationContext
	}
	return nil
}

func (m *CommonTlsContext) GetAlpnProtocols() []string {
	if m != nil {
		return m.AlpnProtocols
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CommonTlsContext) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CommonTlsContext_ValidationContext)(nil),
		(*CommonTlsContext_ValidationContextSdsSecretConfig)(nil),
		(*CommonTlsContext_CombinedValidationContext)(nil),
	}
}

type CommonTlsContext_CombinedCertificateValidationContext struct {
	DefaultValidationContext         *CertificateValidationContext `protobuf:"bytes,1,opt,name=default_validation_context,json=defaultValidationContext,proto3" json:"default_validation_context,omitempty"`
	ValidationContextSdsSecretConfig *SdsSecretConfig              `protobuf:"bytes,2,opt,name=validation_context_sds_secret_config,json=validationContextSdsSecretConfig,proto3" json:"validation_context_sds_secret_config,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                      `json:"-"`
	XXX_unrecognized                 []byte                        `json:"-"`
	XXX_sizecache                    int32                         `json:"-"`
}

func (m *CommonTlsContext_CombinedCertificateValidationContext) Reset() {
	*m = CommonTlsContext_CombinedCertificateValidationContext{}
}
func (m *CommonTlsContext_CombinedCertificateValidationContext) String() string {
	return proto.CompactTextString(m)
}
func (*CommonTlsContext_CombinedCertificateValidationContext) ProtoMessage() {}
func (*CommonTlsContext_CombinedCertificateValidationContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_57bc8d868b0a9df1, []int{2, 0}
}

func (m *CommonTlsContext_CombinedCertificateValidationContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonTlsContext_CombinedCertificateValidationContext.Unmarshal(m, b)
}
func (m *CommonTlsContext_CombinedCertificateValidationContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonTlsContext_CombinedCertificateValidationContext.Marshal(b, m, deterministic)
}
func (m *CommonTlsContext_CombinedCertificateValidationContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonTlsContext_CombinedCertificateValidationContext.Merge(m, src)
}
func (m *CommonTlsContext_CombinedCertificateValidationContext) XXX_Size() int {
	return xxx_messageInfo_CommonTlsContext_CombinedCertificateValidationContext.Size(m)
}
func (m *CommonTlsContext_CombinedCertificateValidationContext) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonTlsContext_CombinedCertificateValidationContext.DiscardUnknown(m)
}

var xxx_messageInfo_CommonTlsContext_CombinedCertificateValidationContext proto.InternalMessageInfo

func (m *CommonTlsContext_CombinedCertificateValidationContext) GetDefaultValidationContext() *CertificateValidationContext {
	if m != nil {
		return m.DefaultValidationContext
	}
	return nil
}

func (m *CommonTlsContext_CombinedCertificateValidationContext) GetValidationContextSdsSecretConfig() *SdsSecretConfig {
	if m != nil {
		return m.ValidationContextSdsSecretConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*UpstreamTlsContext)(nil), "envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext")
	proto.RegisterType((*DownstreamTlsContext)(nil), "envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext")
	proto.RegisterType((*CommonTlsContext)(nil), "envoy.extensions.transport_sockets.tls.v3.CommonTlsContext")
	proto.RegisterType((*CommonTlsContext_CombinedCertificateValidationContext)(nil), "envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.CombinedCertificateValidationContext")
}

func init() {
	proto.RegisterFile("envoy/extensions/transport_sockets/tls/v3/tls.proto", fileDescriptor_57bc8d868b0a9df1)
}

var fileDescriptor_57bc8d868b0a9df1 = []byte{
	// 941 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xcf, 0x8f, 0xdb, 0x44,
	0x14, 0x5e, 0x27, 0xdd, 0x34, 0x3b, 0xab, 0x6e, 0xc3, 0x14, 0xa9, 0x5e, 0x03, 0xab, 0x34, 0x4a,
	0xab, 0x54, 0x08, 0x5b, 0x4a, 0x24, 0x7e, 0xa4, 0x07, 0x24, 0xa7, 0xa2, 0x5b, 0x10, 0x68, 0x71,
	0xb6, 0x85, 0x9b, 0x99, 0xb5, 0x67, 0xc3, 0xa8, 0xf6, 0x8c, 0x3b, 0x33, 0xce, 0x26, 0xb7, 0x1c,
	0x11, 0x02, 0x15, 0x21, 0x4e, 0x5c, 0x90, 0xb8, 0x20, 0xf1, 0x27, 0x70, 0xe3, 0x80, 0xc4, 0x95,
	0x7f, 0xa7, 0x17, 0xd0, 0x8c, 0xed, 0x64, 0x1b, 0x47, 0xda, 0x84, 0xad, 0xd4, 0x53, 0xe2, 0x37,
	0xef, 0x7d, 0xef, 0xbd, 0xef, 0x7d, 0xef, 0x81, 0x1e, 0xa6, 0x63, 0x36, 0x75, 0xf0, 0x44, 0x62,
	0x2a, 0x08, 0xa3, 0xc2, 0x91, 0x1c, 0x51, 0x91, 0x30, 0x2e, 0x7d, 0xc1, 0x82, 0x27, 0x58, 0x0a,
	0x47, 0x46, 0xc2, 0x19, 0xf7, 0xd4, 0x8f, 0x9d, 0x70, 0x26, 0x19, 0xbc, 0xab, 0x83, 0xec, 0x45,
	0x90, 0x5d, 0x0a, 0xb2, 0x95, 0xf7, 0xb8, 0x67, 0xbd, 0xbb, 0x3e, 0x7e, 0xc0, 0xe2, 0x98, 0xd1,
	0x2c, 0xc5, 0x26, 0x71, 0x02, 0x07, 0x1c, 0xcb, 0x3c, 0xee, 0x60, 0xc4, 0xd8, 0x28, 0xc2, 0x8e,
	0xfe, 0x3a, 0x49, 0x4f, 0x9d, 0x30, 0xe5, 0x48, 0x92, 0x39, 0x6e, 0xe9, 0xfd, 0x8c, 0xa3, 0x24,
	0xc1, 0x3c, 0x6f, 0xcd, 0x7a, 0x2b, 0x0d, 0x13, 0xe4, 0x20, 0x4a, 0x99, 0xd4, 0x61, 0xc2, 0x11,
	0x12, 0xc9, 0xb4, 0x78, 0xbe, 0x55, 0x7a, 0x1e, 0x63, 0xae, 0xea, 0x23, 0x74, 0x94, 0xbb, 0xdc,
	0x1c, 0xa3, 0x88, 0x84, 0x48, 0x62, 0xa7, 0xf8, 0x93, 0x3d, 0xb4, 0xfe, 0xac, 0x00, 0xf8, 0x28,
	0x11, 0x92, 0x63, 0x14, 0x1f, 0x47, 0x62, 0xc0, 0xa8, 0xc4, 0x13, 0x09, 0x09, 0x80, 0x59, 0xe7,
	0xbe, 0x8c, 0x84, 0x1f, 0x64, 0x56, 0xd3, 0x68, 0x1a, 0x9d, 0xdd, 0xee, 0x3d, 0x7b, 0x6d, 0xa6,
	0xed, 0x81, 0x06, 0x59, 0x00, 0x7b, 0x8d, 0x60, 0xc9, 0x02, 0x2d, 0x50, 0x15, 0x94, 0x98, 0x95,
	0xa6, 0xd1, 0xd9, 0x71, 0xeb, 0xcf, 0xdd, 0x6d, 0x5e, 0xed, 0xfc, 0x6b, 0x78, 0xca, 0x08, 0x1d,
	0x70, 0x03, 0x45, 0x11, 0x3b, 0xf3, 0x39, 0xa6, 0x78, 0xc4, 0x24, 0xd1, 0xfd, 0x99, 0xd5, 0xa6,
	0xd1, 0xa9, 0x7b, 0x50, 0x3f, 0x79, 0xe7, 0x5f, 0xe0, 0x47, 0xa0, 0x11, 0xa3, 0x89, 0x2f, 0xb0,
	0x50, 0x85, 0xf9, 0x4f, 0xf0, 0x54, 0x98, 0x57, 0x74, 0xd5, 0x6f, 0xda, 0x19, 0xc9, 0x76, 0x41,
	0xb2, 0xfd, 0xe8, 0x21, 0x95, 0xbd, 0xee, 0x63, 0x14, 0xa5, 0xd8, 0xdb, 0x8b, 0xd1, 0x64, 0x98,
	0x05, 0x7d, 0x82, 0xa7, 0xa2, 0xff, 0xf6, 0xcf, 0x7f, 0x7d, 0x73, 0x70, 0x07, 0xb4, 0xb3, 0x4e,
	0x51, 0x42, 0xec, 0x71, 0xd7, 0x46, 0xa9, 0xfc, 0xda, 0x2e, 0x93, 0xd5, 0x7a, 0x56, 0x03, 0xaf,
	0xdf, 0x67, 0x67, 0xf4, 0x55, 0xb2, 0xf8, 0x25, 0xb0, 0x38, 0x7e, 0x9a, 0x12, 0x8e, 0xfd, 0x20,
	0x22, 0x98, 0x4a, 0x3f, 0xc0, 0x5c, 0x92, 0x53, 0x12, 0x20, 0x89, 0x35, 0xb9, 0xbb, 0x5d, 0xab,
	0x44, 0x81, 0xcb, 0x58, 0x94, 0x11, 0x60, 0xe6, 0xd1, 0x03, 0x1d, 0x3c, 0x58, 0xc4, 0xc2, 0x7b,
	0x60, 0xb7, 0x40, 0x56, 0x73, 0xaa, 0x5e, 0x08, 0x05, 0x72, 0xf7, 0x21, 0x25, 0xf0, 0x29, 0xb8,
	0x51, 0xcc, 0x42, 0x12, 0xd5, 0xd3, 0xf9, 0x91, 0x7c, 0xb8, 0x01, 0x05, 0xc7, 0x91, 0xc8, 0xe7,
	0x73, 0xac, 0x71, 0xd4, 0x94, 0x0e, 0xb7, 0xbc, 0xd7, 0xc4, 0xb2, 0x11, 0x7e, 0x6f, 0x80, 0xdb,
	0x2b, 0x72, 0xfa, 0x22, 0x14, 0x7e, 0xb6, 0x95, 0x6a, 0x12, 0xa7, 0x64, 0x64, 0x6e, 0xeb, 0x2a,
	0xfa, 0x1b, 0x54, 0x31, 0x0c, 0xc5, 0x50, 0x43, 0x0c, 0x34, 0xc2, 0xe1, 0x96, 0xd7, 0x2c, 0x15,
	0xb0, 0xe4, 0x03, 0x3f, 0x07, 0xed, 0x90, 0x08, 0x74, 0x12, 0x61, 0x5f, 0x6d, 0x2d, 0x8e, 0xb0,
	0x10, 0x73, 0x81, 0x72, 0x2c, 0xd2, 0x38, 0xd1, 0xa2, 0xbe, 0xaa, 0x44, 0x7d, 0xb8, 0xe5, 0xdd,
	0xca, 0xbd, 0x87, 0x85, 0x73, 0xde, 0xb7, 0x37, 0x77, 0x85, 0xc7, 0xe0, 0xfa, 0xa2, 0xc3, 0x18,
	0xb3, 0x54, 0x9a, 0x35, 0xdd, 0xcb, 0x7e, 0x69, 0x2c, 0xf7, 0xf3, 0x4b, 0xe3, 0x36, 0x9e, 0xbb,
	0xd7, 0x7e, 0x37, 0x80, 0x55, 0xab, 0xcf, 0x66, 0xb3, 0x59, 0xa3, 0xbb, 0xe5, 0xed, 0xcd, 0x4b,
	0xd7, 0x10, 0xfd, 0x77, 0x94, 0xe6, 0x3b, 0xe0, 0x4e, 0x59, 0xf3, 0xab, 0xc4, 0xed, 0x5a, 0xc0,
	0x5c, 0x45, 0xb3, 0x9c, 0x26, 0xb8, 0xf5, 0x1b, 0x00, 0x8d, 0x65, 0xd1, 0xc2, 0x2f, 0x00, 0x50,
	0x6b, 0x90, 0x20, 0x8e, 0x62, 0x91, 0x6f, 0xc1, 0xfb, 0x9b, 0x49, 0xe0, 0x48, 0xc5, 0x62, 0x89,
	0xb9, 0xf0, 0x76, 0x64, 0xfe, 0x29, 0x60, 0x08, 0x1a, 0x7a, 0xbf, 0x16, 0xa2, 0x15, 0x66, 0xa5,
	0x59, 0xed, 0xec, 0x76, 0x3f, 0xd8, 0x0c, 0xfe, 0x9c, 0xec, 0xbd, 0xeb, 0xf2, 0x85, 0x6f, 0x01,
	0x7f, 0x30, 0x40, 0x6b, 0x29, 0x4d, 0x59, 0x53, 0xc2, 0xac, 0xe9, 0xc4, 0x97, 0x10, 0x95, 0xbe,
	0x81, 0x3f, 0x1a, 0x95, 0x86, 0xe1, 0x1d, 0xbc, 0x58, 0xc3, 0x92, 0xa3, 0x80, 0x13, 0x00, 0xf3,
	0x73, 0xae, 0xa6, 0x50, 0xdc, 0x97, 0x6c, 0x43, 0x1f, 0x6c, 0x72, 0x5f, 0x16, 0x39, 0x1e, 0xcf,
	0xf1, 0xf2, 0xb1, 0xa9, 0x25, 0x1b, 0x2f, 0x1b, 0xe1, 0x77, 0x06, 0x68, 0x97, 0x53, 0xaf, 0xd8,
	0xb1, 0xab, 0x2f, 0x63, 0xc7, 0x4a, 0xf9, 0x97, 0x77, 0xec, 0x57, 0x03, 0xbc, 0x11, 0xb0, 0xf8,
	0x84, 0x50, 0x1c, 0xfa, 0x2b, 0x28, 0xa9, 0xeb, 0x2a, 0xbe, 0xba, 0xc4, 0xc9, 0x55, 0x06, 0x0d,
	0x7f, 0x01, 0x57, 0xfb, 0x45, 0x19, 0xa5, 0x47, 0x78, 0x1b, 0xec, 0xa1, 0x28, 0xa1, 0xbe, 0xde,
	0xcd, 0x80, 0x45, 0xea, 0x0c, 0x56, 0x3b, 0x3b, 0xde, 0x35, 0x65, 0x3d, 0x2a, 0x8c, 0xd6, 0x2f,
	0x55, 0xd0, 0x5e, 0x27, 0x19, 0x7c, 0x66, 0x00, 0x2b, 0xc4, 0xa7, 0x28, 0x8d, 0xe4, 0xaa, 0x9e,
	0x8d, 0x97, 0x2a, 0x03, 0xad, 0xca, 0x6f, 0xb5, 0x2a, 0xcd, 0x3c, 0x69, 0xb9, 0xa2, 0x9f, 0xd6,
	0x55, 0x45, 0xe5, 0xb2, 0xaa, 0x38, 0x57, 0xce, 0x85, 0xea, 0xe8, 0x7f, 0xa6, 0x0e, 0xdb, 0x43,
	0xf0, 0xa0, 0x7c, 0xd8, 0xfe, 0xd7, 0x94, 0xfb, 0x77, 0x15, 0x5e, 0x1b, 0xb4, 0x2e, 0xc6, 0x73,
	0xf7, 0xc1, 0xcd, 0x15, 0x84, 0xa8, 0x1b, 0xf9, 0xf1, 0x95, 0xfa, 0x76, 0xa3, 0xe6, 0x7e, 0xfa,
	0xc7, 0xec, 0xef, 0x7f, 0x6a, 0x95, 0x46, 0x05, 0xbc, 0x47, 0x58, 0xc6, 0x47, 0xc2, 0xd9, 0x64,
	0xba, 0x3e, 0x35, 0x6e, 0x5d, 0x1d, 0x46, 0x25, 0x9f, 0x23, 0xe3, 0xa4, 0xa6, 0xc5, 0xd5, 0xfb,
	0x2f, 0x00, 0x00, 0xff, 0xff, 0xec, 0x87, 0xf9, 0x51, 0x42, 0x0b, 0x00, 0x00,
}
