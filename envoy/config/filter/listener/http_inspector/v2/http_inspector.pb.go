// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/listener/http_inspector/v2/http_inspector.proto

package envoy_config_filter_listener_http_inspector_v2

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HttpInspector struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpInspector) Reset()         { *m = HttpInspector{} }
func (m *HttpInspector) String() string { return proto.CompactTextString(m) }
func (*HttpInspector) ProtoMessage()    {}
func (*HttpInspector) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d6cdfe6d97a924e, []int{0}
}

func (m *HttpInspector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpInspector.Unmarshal(m, b)
}
func (m *HttpInspector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpInspector.Marshal(b, m, deterministic)
}
func (m *HttpInspector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpInspector.Merge(m, src)
}
func (m *HttpInspector) XXX_Size() int {
	return xxx_messageInfo_HttpInspector.Size(m)
}
func (m *HttpInspector) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpInspector.DiscardUnknown(m)
}

var xxx_messageInfo_HttpInspector proto.InternalMessageInfo

func init() {
	proto.RegisterType((*HttpInspector)(nil), "envoy.config.filter.listener.http_inspector.v2.HttpInspector")
}

func init() {
	proto.RegisterFile("envoy/config/filter/listener/http_inspector/v2/http_inspector.proto", fileDescriptor_0d6cdfe6d97a924e)
}

var fileDescriptor_0d6cdfe6d97a924e = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8e, 0x31, 0x0a, 0xc2, 0x40,
	0x10, 0x45, 0x49, 0xa1, 0x45, 0x40, 0x84, 0x94, 0x16, 0x16, 0x1e, 0x60, 0x17, 0x12, 0xec, 0xac,
	0x62, 0xa3, 0x5d, 0x6e, 0x20, 0x6b, 0x9c, 0xc4, 0x85, 0x38, 0xb3, 0xec, 0x8e, 0x21, 0x39, 0x45,
	0x5a, 0xcf, 0xe9, 0x01, 0x44, 0x92, 0x35, 0x85, 0x01, 0x0b, 0xdb, 0x0f, 0xff, 0xbd, 0x17, 0xee,
	0x01, 0x6b, 0x6a, 0x65, 0x4e, 0x58, 0xe8, 0x52, 0x16, 0xba, 0x62, 0xb0, 0xb2, 0xd2, 0x8e, 0x01,
	0xc1, 0xca, 0x2b, 0xb3, 0x39, 0x69, 0x74, 0x06, 0x72, 0x26, 0x2b, 0xeb, 0x78, 0xb2, 0x08, 0x63,
	0x89, 0x29, 0x12, 0x03, 0x44, 0x78, 0x88, 0xf0, 0x10, 0x31, 0x42, 0xc4, 0xe4, 0x52, 0xc7, 0xab,
	0xf5, 0xfd, 0x62, 0x94, 0x54, 0x88, 0xc4, 0x8a, 0x35, 0xa1, 0x93, 0x37, 0x5d, 0x5a, 0xc5, 0xe0,
	0x79, 0x9b, 0x65, 0xb8, 0x38, 0x30, 0x9b, 0xe3, 0xf8, 0x49, 0xbb, 0xe0, 0xf9, 0x78, 0x75, 0xb3,
	0x6d, 0x94, 0x78, 0x13, 0x34, 0x0c, 0xe8, 0xfa, 0xe7, 0xc7, 0xe6, 0x7e, 0xeb, 0x92, 0x70, 0xa7,
	0xc9, 0x17, 0x1a, 0x4b, 0x4d, 0xfb, 0x67, 0x6c, 0x1a, 0x7d, 0xa5, 0x64, 0x7d, 0x60, 0x16, 0x9c,
	0xe7, 0x43, 0x69, 0xf2, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x27, 0xdf, 0x3a, 0xff, 0x40, 0x01, 0x00,
	0x00,
}
