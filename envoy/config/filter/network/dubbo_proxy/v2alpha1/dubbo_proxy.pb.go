// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto

package envoy_config_filter_network_dubbo_proxy_v2alpha1

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolType int32

const (
	ProtocolType_Dubbo ProtocolType = 0
)

var ProtocolType_name = map[int32]string{
	0: "Dubbo",
}

var ProtocolType_value = map[string]int32{
	"Dubbo": 0,
}

func (x ProtocolType) String() string {
	return proto.EnumName(ProtocolType_name, int32(x))
}

func (ProtocolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{0}
}

type SerializationType int32

const (
	SerializationType_Hessian2 SerializationType = 0
)

var SerializationType_name = map[int32]string{
	0: "Hessian2",
}

var SerializationType_value = map[string]int32{
	"Hessian2": 0,
}

func (x SerializationType) String() string {
	return proto.EnumName(SerializationType_name, int32(x))
}

func (SerializationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{1}
}

type DubboProxy struct {
	StatPrefix           string                `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	ProtocolType         ProtocolType          `protobuf:"varint,2,opt,name=protocol_type,json=protocolType,proto3,enum=envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType" json:"protocol_type,omitempty"`
	SerializationType    SerializationType     `protobuf:"varint,3,opt,name=serialization_type,json=serializationType,proto3,enum=envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType" json:"serialization_type,omitempty"`
	RouteConfig          []*RouteConfiguration `protobuf:"bytes,4,rep,name=route_config,json=routeConfig,proto3" json:"route_config,omitempty"`
	DubboFilters         []*DubboFilter        `protobuf:"bytes,5,rep,name=dubbo_filters,json=dubboFilters,proto3" json:"dubbo_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DubboProxy) Reset()         { *m = DubboProxy{} }
func (m *DubboProxy) String() string { return proto.CompactTextString(m) }
func (*DubboProxy) ProtoMessage()    {}
func (*DubboProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{0}
}

func (m *DubboProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DubboProxy.Unmarshal(m, b)
}
func (m *DubboProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DubboProxy.Marshal(b, m, deterministic)
}
func (m *DubboProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DubboProxy.Merge(m, src)
}
func (m *DubboProxy) XXX_Size() int {
	return xxx_messageInfo_DubboProxy.Size(m)
}
func (m *DubboProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_DubboProxy.DiscardUnknown(m)
}

var xxx_messageInfo_DubboProxy proto.InternalMessageInfo

func (m *DubboProxy) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

func (m *DubboProxy) GetProtocolType() ProtocolType {
	if m != nil {
		return m.ProtocolType
	}
	return ProtocolType_Dubbo
}

func (m *DubboProxy) GetSerializationType() SerializationType {
	if m != nil {
		return m.SerializationType
	}
	return SerializationType_Hessian2
}

func (m *DubboProxy) GetRouteConfig() []*RouteConfiguration {
	if m != nil {
		return m.RouteConfig
	}
	return nil
}

func (m *DubboProxy) GetDubboFilters() []*DubboFilter {
	if m != nil {
		return m.DubboFilters
	}
	return nil
}

type DubboFilter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config               *any.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DubboFilter) Reset()         { *m = DubboFilter{} }
func (m *DubboFilter) String() string { return proto.CompactTextString(m) }
func (*DubboFilter) ProtoMessage()    {}
func (*DubboFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{1}
}

func (m *DubboFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DubboFilter.Unmarshal(m, b)
}
func (m *DubboFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DubboFilter.Marshal(b, m, deterministic)
}
func (m *DubboFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DubboFilter.Merge(m, src)
}
func (m *DubboFilter) XXX_Size() int {
	return xxx_messageInfo_DubboFilter.Size(m)
}
func (m *DubboFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_DubboFilter.DiscardUnknown(m)
}

var xxx_messageInfo_DubboFilter proto.InternalMessageInfo

func (m *DubboFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DubboFilter) GetConfig() *any.Any {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterEnum("envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType", ProtocolType_name, ProtocolType_value)
	proto.RegisterEnum("envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType", SerializationType_name, SerializationType_value)
	proto.RegisterType((*DubboProxy)(nil), "envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy")
	proto.RegisterType((*DubboFilter)(nil), "envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboFilter")
}

func init() {
	proto.RegisterFile("envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto", fileDescriptor_8ee9c82d7d1be64c)
}

var fileDescriptor_8ee9c82d7d1be64c = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x97, 0xfe, 0x18, 0x9b, 0x93, 0x41, 0x67, 0x21, 0xd1, 0x15, 0x09, 0x95, 0x9d, 0xaa,
	0x09, 0xd9, 0x90, 0x21, 0x4e, 0x30, 0x89, 0x6c, 0x42, 0x1c, 0xab, 0xc0, 0x81, 0x5b, 0xe5, 0xac,
	0x6e, 0xb0, 0x48, 0xed, 0xc8, 0x76, 0x4a, 0x83, 0x38, 0xf1, 0x0f, 0xec, 0xca, 0x9f, 0x89, 0x38,
	0xee, 0x80, 0x50, 0x9e, 0x53, 0x1a, 0x95, 0x5d, 0x72, 0x8b, 0xdf, 0x7b, 0xfe, 0x7e, 0xf2, 0x7d,
	0xef, 0x19, 0x45, 0x5c, 0xae, 0x54, 0x49, 0xaf, 0x95, 0x5c, 0x88, 0x94, 0x2e, 0x44, 0x66, 0xb9,
	0xa6, 0x92, 0xdb, 0xaf, 0x4a, 0x7f, 0xa1, 0xf3, 0x22, 0x49, 0xd4, 0x2c, 0xd7, 0x6a, 0x5d, 0xd2,
	0x55, 0xc8, 0xb2, 0xfc, 0x33, 0x7b, 0xd1, 0x0c, 0x92, 0x5c, 0x2b, 0xab, 0xf0, 0x73, 0xd0, 0x20,
	0x4e, 0x83, 0x38, 0x0d, 0x52, 0x6b, 0x90, 0x66, 0xf9, 0x46, 0x63, 0xf4, 0xba, 0x35, 0x55, 0xab,
	0xc2, 0x72, 0xc7, 0x1b, 0x9d, 0xa4, 0x4a, 0xa5, 0x19, 0xa7, 0x70, 0x4a, 0x8a, 0x05, 0x65, 0xb2,
	0xfe, 0x95, 0xd1, 0x93, 0x62, 0x9e, 0x33, 0xca, 0xa4, 0x54, 0x96, 0x59, 0xa1, 0xa4, 0xa1, 0x4b,
	0x91, 0x6a, 0xf6, 0xef, 0xea, 0xa3, 0x15, 0xcb, 0xc4, 0x9c, 0x59, 0x4e, 0x37, 0x1f, 0x2e, 0x71,
	0xfa, 0xab, 0x8b, 0xd0, 0x55, 0x05, 0x9e, 0x56, 0x5c, 0x3c, 0x41, 0xbe, 0xb1, 0xcc, 0xce, 0x72,
	0xcd, 0x17, 0x62, 0x3d, 0xf4, 0xc6, 0xde, 0xe4, 0x30, 0xba, 0x77, 0x1b, 0xf5, 0x74, 0x67, 0xec,
	0xc5, 0xa8, 0xca, 0x4d, 0x21, 0x85, 0x97, 0xe8, 0x08, 0x14, 0xae, 0x55, 0x36, 0xb3, 0x65, 0xce,
	0x87, 0x9d, 0xb1, 0x37, 0xb9, 0x1f, 0x5e, 0x90, 0xb6, 0x4d, 0x21, 0xd3, 0x5a, 0xe6, 0x63, 0x99,
	0xf3, 0xe8, 0xe0, 0x36, 0xea, 0xff, 0xf0, 0x3a, 0x03, 0x2f, 0x0e, 0xf2, 0x46, 0x1c, 0x7f, 0x47,
	0xd8, 0x70, 0x2d, 0x58, 0x26, 0xbe, 0x81, 0x41, 0xc7, 0xec, 0x02, 0xf3, 0xb2, 0x3d, 0xf3, 0x43,
	0x53, 0x6b, 0x07, 0x7c, 0x6c, 0x76, 0x93, 0x38, 0x45, 0x01, 0x0c, 0x62, 0xe6, 0x10, 0xc3, 0xde,
	0xb8, 0x3b, 0xf1, 0xc3, 0xab, 0xf6, 0xdc, 0xb8, 0x52, 0xb9, 0x84, 0xfa, 0x42, 0x83, 0x7e, 0xec,
	0xeb, 0x6d, 0x0c, 0x27, 0xe8, 0xc8, 0xdd, 0x73, 0x62, 0x66, 0xd8, 0x07, 0xd2, 0x9b, 0xf6, 0x24,
	0x18, 0xea, 0x3b, 0x28, 0x8c, 0x83, 0xf9, 0xf6, 0x60, 0x4e, 0x3f, 0x21, 0xbf, 0x91, 0xc4, 0x8f,
	0x51, 0x4f, 0xb2, 0x25, 0xdf, 0x9d, 0x35, 0x04, 0xf1, 0x33, 0xb4, 0x5f, 0x5b, 0xae, 0xc6, 0xeb,
	0x87, 0x0f, 0x89, 0xdb, 0x41, 0xb2, 0xd9, 0x41, 0xf2, 0x56, 0x96, 0x71, 0x5d, 0x73, 0x76, 0x82,
	0x82, 0xe6, 0x30, 0xf1, 0x21, 0xea, 0x03, 0x69, 0xb0, 0x77, 0xf6, 0x14, 0x1d, 0xff, 0xd7, 0x73,
	0x1c, 0xa0, 0x83, 0xf7, 0xdc, 0x18, 0xc1, 0x64, 0x38, 0xd8, 0x8b, 0x6e, 0xbc, 0xdf, 0x3f, 0xff,
	0xdc, 0xf4, 0x5f, 0xe1, 0x97, 0xce, 0x2c, 0x5f, 0x5b, 0x2e, 0x4d, 0xb5, 0xcc, 0xb5, 0x61, 0x73,
	0xb7, 0xe3, 0x73, 0x70, 0x8c, 0x2e, 0x84, 0x72, 0x5d, 0x72, 0xe1, 0xb6, 0x0d, 0x8b, 0x1e, 0x6c,
	0x9f, 0x01, 0x98, 0x98, 0x7a, 0xc9, 0x3e, 0xb8, 0x3c, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x61,
	0x85, 0x50, 0x89, 0x2d, 0x04, 0x00, 0x00,
}
