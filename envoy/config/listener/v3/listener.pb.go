// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/listener/v3/listener.proto

package envoy_config_listener_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	v31 "github.com/envoyproxy/go-control-plane/envoy/config/accesslog/v3"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Listener_DrainType int32

const (
	Listener_DEFAULT     Listener_DrainType = 0
	Listener_MODIFY_ONLY Listener_DrainType = 1
)

var Listener_DrainType_name = map[int32]string{
	0: "DEFAULT",
	1: "MODIFY_ONLY",
}

var Listener_DrainType_value = map[string]int32{
	"DEFAULT":     0,
	"MODIFY_ONLY": 1,
}

func (x Listener_DrainType) String() string {
	return proto.EnumName(Listener_DrainType_name, int32(x))
}

func (Listener_DrainType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1700162847fce94e, []int{0, 0}
}

type Listener struct {
	Name                                string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address                             *v3.Address                       `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	FilterChains                        []*FilterChain                    `protobuf:"bytes,3,rep,name=filter_chains,json=filterChains,proto3" json:"filter_chains,omitempty"`
	PerConnectionBufferLimitBytes       *wrappers.UInt32Value             `protobuf:"bytes,5,opt,name=per_connection_buffer_limit_bytes,json=perConnectionBufferLimitBytes,proto3" json:"per_connection_buffer_limit_bytes,omitempty"`
	Metadata                            *v3.Metadata                      `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	DeprecatedV1                        *Listener_DeprecatedV1            `protobuf:"bytes,7,opt,name=deprecated_v1,json=deprecatedV1,proto3" json:"deprecated_v1,omitempty"`
	DrainType                           Listener_DrainType                `protobuf:"varint,8,opt,name=drain_type,json=drainType,proto3,enum=envoy.config.listener.v3.Listener_DrainType" json:"drain_type,omitempty"`
	ListenerFilters                     []*ListenerFilter                 `protobuf:"bytes,9,rep,name=listener_filters,json=listenerFilters,proto3" json:"listener_filters,omitempty"`
	ListenerFiltersTimeout              *duration.Duration                `protobuf:"bytes,15,opt,name=listener_filters_timeout,json=listenerFiltersTimeout,proto3" json:"listener_filters_timeout,omitempty"`
	ContinueOnListenerFiltersTimeout    bool                              `protobuf:"varint,17,opt,name=continue_on_listener_filters_timeout,json=continueOnListenerFiltersTimeout,proto3" json:"continue_on_listener_filters_timeout,omitempty"`
	Transparent                         *wrappers.BoolValue               `protobuf:"bytes,10,opt,name=transparent,proto3" json:"transparent,omitempty"`
	Freebind                            *wrappers.BoolValue               `protobuf:"bytes,11,opt,name=freebind,proto3" json:"freebind,omitempty"`
	SocketOptions                       []*v3.SocketOption                `protobuf:"bytes,13,rep,name=socket_options,json=socketOptions,proto3" json:"socket_options,omitempty"`
	TcpFastOpenQueueLength              *wrappers.UInt32Value             `protobuf:"bytes,12,opt,name=tcp_fast_open_queue_length,json=tcpFastOpenQueueLength,proto3" json:"tcp_fast_open_queue_length,omitempty"`
	TrafficDirection                    v3.TrafficDirection               `protobuf:"varint,16,opt,name=traffic_direction,json=trafficDirection,proto3,enum=envoy.config.core.v3.TrafficDirection" json:"traffic_direction,omitempty"`
	UdpListenerConfig                   *UdpListenerConfig                `protobuf:"bytes,18,opt,name=udp_listener_config,json=udpListenerConfig,proto3" json:"udp_listener_config,omitempty"`
	ApiListener                         *ApiListener                      `protobuf:"bytes,19,opt,name=api_listener,json=apiListener,proto3" json:"api_listener,omitempty"`
	ConnectionBalanceConfig             *Listener_ConnectionBalanceConfig `protobuf:"bytes,20,opt,name=connection_balance_config,json=connectionBalanceConfig,proto3" json:"connection_balance_config,omitempty"`
	ReusePort                           bool                              `protobuf:"varint,21,opt,name=reuse_port,json=reusePort,proto3" json:"reuse_port,omitempty"`
	AccessLog                           []*v31.AccessLog                  `protobuf:"bytes,22,rep,name=access_log,json=accessLog,proto3" json:"access_log,omitempty"`
	HiddenEnvoyDeprecatedUseOriginalDst *wrappers.BoolValue               `protobuf:"bytes,4,opt,name=hidden_envoy_deprecated_use_original_dst,json=hiddenEnvoyDeprecatedUseOriginalDst,proto3" json:"hidden_envoy_deprecated_use_original_dst,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral                struct{}                          `json:"-"`
	XXX_unrecognized                    []byte                            `json:"-"`
	XXX_sizecache                       int32                             `json:"-"`
}

func (m *Listener) Reset()         { *m = Listener{} }
func (m *Listener) String() string { return proto.CompactTextString(m) }
func (*Listener) ProtoMessage()    {}
func (*Listener) Descriptor() ([]byte, []int) {
	return fileDescriptor_1700162847fce94e, []int{0}
}

func (m *Listener) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Listener.Unmarshal(m, b)
}
func (m *Listener) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Listener.Marshal(b, m, deterministic)
}
func (m *Listener) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Listener.Merge(m, src)
}
func (m *Listener) XXX_Size() int {
	return xxx_messageInfo_Listener.Size(m)
}
func (m *Listener) XXX_DiscardUnknown() {
	xxx_messageInfo_Listener.DiscardUnknown(m)
}

var xxx_messageInfo_Listener proto.InternalMessageInfo

func (m *Listener) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Listener) GetAddress() *v3.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Listener) GetFilterChains() []*FilterChain {
	if m != nil {
		return m.FilterChains
	}
	return nil
}

func (m *Listener) GetPerConnectionBufferLimitBytes() *wrappers.UInt32Value {
	if m != nil {
		return m.PerConnectionBufferLimitBytes
	}
	return nil
}

func (m *Listener) GetMetadata() *v3.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Listener) GetDeprecatedV1() *Listener_DeprecatedV1 {
	if m != nil {
		return m.DeprecatedV1
	}
	return nil
}

func (m *Listener) GetDrainType() Listener_DrainType {
	if m != nil {
		return m.DrainType
	}
	return Listener_DEFAULT
}

func (m *Listener) GetListenerFilters() []*ListenerFilter {
	if m != nil {
		return m.ListenerFilters
	}
	return nil
}

func (m *Listener) GetListenerFiltersTimeout() *duration.Duration {
	if m != nil {
		return m.ListenerFiltersTimeout
	}
	return nil
}

func (m *Listener) GetContinueOnListenerFiltersTimeout() bool {
	if m != nil {
		return m.ContinueOnListenerFiltersTimeout
	}
	return false
}

func (m *Listener) GetTransparent() *wrappers.BoolValue {
	if m != nil {
		return m.Transparent
	}
	return nil
}

func (m *Listener) GetFreebind() *wrappers.BoolValue {
	if m != nil {
		return m.Freebind
	}
	return nil
}

func (m *Listener) GetSocketOptions() []*v3.SocketOption {
	if m != nil {
		return m.SocketOptions
	}
	return nil
}

func (m *Listener) GetTcpFastOpenQueueLength() *wrappers.UInt32Value {
	if m != nil {
		return m.TcpFastOpenQueueLength
	}
	return nil
}

func (m *Listener) GetTrafficDirection() v3.TrafficDirection {
	if m != nil {
		return m.TrafficDirection
	}
	return v3.TrafficDirection_UNSPECIFIED
}

func (m *Listener) GetUdpListenerConfig() *UdpListenerConfig {
	if m != nil {
		return m.UdpListenerConfig
	}
	return nil
}

func (m *Listener) GetApiListener() *ApiListener {
	if m != nil {
		return m.ApiListener
	}
	return nil
}

func (m *Listener) GetConnectionBalanceConfig() *Listener_ConnectionBalanceConfig {
	if m != nil {
		return m.ConnectionBalanceConfig
	}
	return nil
}

func (m *Listener) GetReusePort() bool {
	if m != nil {
		return m.ReusePort
	}
	return false
}

func (m *Listener) GetAccessLog() []*v31.AccessLog {
	if m != nil {
		return m.AccessLog
	}
	return nil
}

// Deprecated: Do not use.
func (m *Listener) GetHiddenEnvoyDeprecatedUseOriginalDst() *wrappers.BoolValue {
	if m != nil {
		return m.HiddenEnvoyDeprecatedUseOriginalDst
	}
	return nil
}

type Listener_DeprecatedV1 struct {
	BindToPort           *wrappers.BoolValue `protobuf:"bytes,1,opt,name=bind_to_port,json=bindToPort,proto3" json:"bind_to_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Listener_DeprecatedV1) Reset()         { *m = Listener_DeprecatedV1{} }
func (m *Listener_DeprecatedV1) String() string { return proto.CompactTextString(m) }
func (*Listener_DeprecatedV1) ProtoMessage()    {}
func (*Listener_DeprecatedV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_1700162847fce94e, []int{0, 0}
}

func (m *Listener_DeprecatedV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Listener_DeprecatedV1.Unmarshal(m, b)
}
func (m *Listener_DeprecatedV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Listener_DeprecatedV1.Marshal(b, m, deterministic)
}
func (m *Listener_DeprecatedV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Listener_DeprecatedV1.Merge(m, src)
}
func (m *Listener_DeprecatedV1) XXX_Size() int {
	return xxx_messageInfo_Listener_DeprecatedV1.Size(m)
}
func (m *Listener_DeprecatedV1) XXX_DiscardUnknown() {
	xxx_messageInfo_Listener_DeprecatedV1.DiscardUnknown(m)
}

var xxx_messageInfo_Listener_DeprecatedV1 proto.InternalMessageInfo

func (m *Listener_DeprecatedV1) GetBindToPort() *wrappers.BoolValue {
	if m != nil {
		return m.BindToPort
	}
	return nil
}

type Listener_ConnectionBalanceConfig struct {
	// Types that are valid to be assigned to BalanceType:
	//	*Listener_ConnectionBalanceConfig_ExactBalance_
	BalanceType          isListener_ConnectionBalanceConfig_BalanceType `protobuf_oneof:"balance_type"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *Listener_ConnectionBalanceConfig) Reset()         { *m = Listener_ConnectionBalanceConfig{} }
func (m *Listener_ConnectionBalanceConfig) String() string { return proto.CompactTextString(m) }
func (*Listener_ConnectionBalanceConfig) ProtoMessage()    {}
func (*Listener_ConnectionBalanceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1700162847fce94e, []int{0, 1}
}

func (m *Listener_ConnectionBalanceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Listener_ConnectionBalanceConfig.Unmarshal(m, b)
}
func (m *Listener_ConnectionBalanceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Listener_ConnectionBalanceConfig.Marshal(b, m, deterministic)
}
func (m *Listener_ConnectionBalanceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Listener_ConnectionBalanceConfig.Merge(m, src)
}
func (m *Listener_ConnectionBalanceConfig) XXX_Size() int {
	return xxx_messageInfo_Listener_ConnectionBalanceConfig.Size(m)
}
func (m *Listener_ConnectionBalanceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_Listener_ConnectionBalanceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_Listener_ConnectionBalanceConfig proto.InternalMessageInfo

type isListener_ConnectionBalanceConfig_BalanceType interface {
	isListener_ConnectionBalanceConfig_BalanceType()
}

type Listener_ConnectionBalanceConfig_ExactBalance_ struct {
	ExactBalance *Listener_ConnectionBalanceConfig_ExactBalance `protobuf:"bytes,1,opt,name=exact_balance,json=exactBalance,proto3,oneof"`
}

func (*Listener_ConnectionBalanceConfig_ExactBalance_) isListener_ConnectionBalanceConfig_BalanceType() {
}

func (m *Listener_ConnectionBalanceConfig) GetBalanceType() isListener_ConnectionBalanceConfig_BalanceType {
	if m != nil {
		return m.BalanceType
	}
	return nil
}

func (m *Listener_ConnectionBalanceConfig) GetExactBalance() *Listener_ConnectionBalanceConfig_ExactBalance {
	if x, ok := m.GetBalanceType().(*Listener_ConnectionBalanceConfig_ExactBalance_); ok {
		return x.ExactBalance
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Listener_ConnectionBalanceConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Listener_ConnectionBalanceConfig_ExactBalance_)(nil),
	}
}

type Listener_ConnectionBalanceConfig_ExactBalance struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Listener_ConnectionBalanceConfig_ExactBalance) Reset() {
	*m = Listener_ConnectionBalanceConfig_ExactBalance{}
}
func (m *Listener_ConnectionBalanceConfig_ExactBalance) String() string {
	return proto.CompactTextString(m)
}
func (*Listener_ConnectionBalanceConfig_ExactBalance) ProtoMessage() {}
func (*Listener_ConnectionBalanceConfig_ExactBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_1700162847fce94e, []int{0, 1, 0}
}

func (m *Listener_ConnectionBalanceConfig_ExactBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Listener_ConnectionBalanceConfig_ExactBalance.Unmarshal(m, b)
}
func (m *Listener_ConnectionBalanceConfig_ExactBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Listener_ConnectionBalanceConfig_ExactBalance.Marshal(b, m, deterministic)
}
func (m *Listener_ConnectionBalanceConfig_ExactBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Listener_ConnectionBalanceConfig_ExactBalance.Merge(m, src)
}
func (m *Listener_ConnectionBalanceConfig_ExactBalance) XXX_Size() int {
	return xxx_messageInfo_Listener_ConnectionBalanceConfig_ExactBalance.Size(m)
}
func (m *Listener_ConnectionBalanceConfig_ExactBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_Listener_ConnectionBalanceConfig_ExactBalance.DiscardUnknown(m)
}

var xxx_messageInfo_Listener_ConnectionBalanceConfig_ExactBalance proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("envoy.config.listener.v3.Listener_DrainType", Listener_DrainType_name, Listener_DrainType_value)
	proto.RegisterType((*Listener)(nil), "envoy.config.listener.v3.Listener")
	proto.RegisterType((*Listener_DeprecatedV1)(nil), "envoy.config.listener.v3.Listener.DeprecatedV1")
	proto.RegisterType((*Listener_ConnectionBalanceConfig)(nil), "envoy.config.listener.v3.Listener.ConnectionBalanceConfig")
	proto.RegisterType((*Listener_ConnectionBalanceConfig_ExactBalance)(nil), "envoy.config.listener.v3.Listener.ConnectionBalanceConfig.ExactBalance")
}

func init() {
	proto.RegisterFile("envoy/config/listener/v3/listener.proto", fileDescriptor_1700162847fce94e)
}

var fileDescriptor_1700162847fce94e = []byte{
	// 1116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4d, 0x73, 0xdb, 0xc4,
	0x1b, 0xaf, 0xdc, 0x97, 0xd8, 0x6b, 0xbb, 0x71, 0x36, 0xff, 0x26, 0xaa, 0x27, 0xc9, 0xdf, 0x0d,
	0xa1, 0x38, 0x14, 0xe4, 0xa9, 0xc3, 0x70, 0xf0, 0xe4, 0x62, 0xc7, 0x09, 0x4d, 0x71, 0xeb, 0x54,
	0x71, 0x3a, 0x74, 0x38, 0x68, 0xd6, 0xd2, 0xda, 0xd9, 0x41, 0xd9, 0x15, 0xbb, 0x2b, 0xb7, 0xbe,
	0x71, 0x64, 0x7a, 0xe5, 0xc6, 0x17, 0xe0, 0x23, 0x30, 0xc3, 0x9d, 0x19, 0xae, 0x0c, 0x5f, 0x86,
	0xe1, 0xc4, 0xec, 0x4a, 0x72, 0xe4, 0xc4, 0xc6, 0x81, 0xdb, 0x3e, 0x7a, 0x7e, 0xcf, 0x6f, 0x9f,
	0xf7, 0x15, 0xf8, 0x08, 0xd3, 0x11, 0x1b, 0xd7, 0x5c, 0x46, 0x07, 0x64, 0x58, 0xf3, 0x89, 0x90,
	0x98, 0x62, 0x5e, 0x1b, 0xed, 0x4d, 0xce, 0x56, 0xc0, 0x99, 0x64, 0xd0, 0xd4, 0x40, 0x2b, 0x02,
	0x5a, 0x13, 0xe5, 0x68, 0xaf, 0xbc, 0x3b, 0x45, 0x81, 0x5c, 0x17, 0x0b, 0xe1, 0xb3, 0xa1, 0xe2,
	0x98, 0x08, 0x11, 0x49, 0x79, 0x7b, 0x0a, 0xea, 0x32, 0x8e, 0x35, 0xca, 0xf3, 0x38, 0x16, 0x22,
	0xc6, 0xfc, 0x7f, 0x26, 0xa6, 0x8f, 0x04, 0x8e, 0x01, 0xd5, 0x99, 0x00, 0xc1, 0xdc, 0x6f, 0xb0,
	0x74, 0x58, 0x20, 0x09, 0xa3, 0x31, 0xf2, 0xc9, 0xdc, 0xe0, 0x50, 0x40, 0x9c, 0xe9, 0x00, 0xcb,
	0xf5, 0x85, 0x99, 0x70, 0x5c, 0x76, 0x11, 0x30, 0x8a, 0xa9, 0x14, 0x0b, 0x6d, 0x42, 0x2f, 0x70,
	0x52, 0x76, 0x3a, 0x69, 0x91, 0xcd, 0xc6, 0x90, 0xb1, 0xa1, 0x8f, 0x95, 0x0b, 0x35, 0x44, 0x29,
	0x93, 0x48, 0x79, 0x9c, 0x30, 0x6e, 0xc5, 0x5a, 0x2d, 0xf5, 0xc3, 0x41, 0xcd, 0x0b, 0x39, 0x4a,
	0x85, 0x74, 0x4d, 0xff, 0x96, 0xa3, 0x20, 0xc0, 0x7c, 0x92, 0xbd, 0xd0, 0x0b, 0x50, 0x9a, 0xb7,
	0x26, 0xb0, 0x1b, 0x72, 0x22, 0xc7, 0x31, 0x60, 0xf3, 0x3a, 0x40, 0x22, 0x19, 0x26, 0xf6, 0x8f,
	0xae, 0xa9, 0x47, 0x98, 0x0b, 0xc2, 0x28, 0xa1, 0x49, 0x00, 0xeb, 0x23, 0xe4, 0x13, 0x0f, 0x49,
	0x5c, 0x4b, 0x0e, 0x91, 0x62, 0xfb, 0x8f, 0x12, 0xc8, 0x76, 0xe2, 0x98, 0x21, 0x04, 0x77, 0x28,
	0xba, 0xc0, 0xa6, 0x51, 0x31, 0xaa, 0x39, 0x5b, 0x9f, 0x61, 0x13, 0x2c, 0xc5, 0xb5, 0x36, 0x33,
	0x15, 0xa3, 0x9a, 0xaf, 0x6f, 0x5a, 0x53, 0x5d, 0xa5, 0x6a, 0x69, 0x8d, 0xf6, 0xac, 0x66, 0x04,
	0x6a, 0x65, 0xff, 0x6a, 0xdd, 0x7d, 0x6f, 0x64, 0x4a, 0x86, 0x9d, 0xd8, 0xc1, 0xe7, 0xa0, 0x38,
	0x20, 0xbe, 0x54, 0x49, 0x3d, 0x47, 0x84, 0x0a, 0xf3, 0x76, 0xe5, 0x76, 0x35, 0x5f, 0xff, 0xd0,
	0x9a, 0xd7, 0x9e, 0xd6, 0x91, 0x86, 0x1f, 0x28, 0xb4, 0x5d, 0x18, 0x5c, 0x0a, 0x02, 0x32, 0xf0,
	0x28, 0x88, 0xaa, 0x43, 0xb1, 0xab, 0x82, 0x75, 0xfa, 0xe1, 0x60, 0x80, 0xb9, 0xe3, 0x93, 0x0b,
	0x22, 0x9d, 0xfe, 0x58, 0x62, 0x61, 0xde, 0xd5, 0x8e, 0x6e, 0x58, 0x51, 0xde, 0xad, 0x24, 0xef,
	0xd6, 0xd9, 0x31, 0x95, 0x7b, 0xf5, 0xd7, 0xc8, 0x0f, 0x71, 0x6b, 0xe9, 0xfd, 0x0f, 0x3f, 0x7f,
	0x9c, 0xc9, 0x1a, 0xf6, 0x66, 0x80, 0xf9, 0xc1, 0x84, 0xae, 0xa5, 0xd9, 0x3a, 0x8a, 0xac, 0xa5,
	0xb8, 0x60, 0x03, 0x64, 0x2f, 0xb0, 0x44, 0x1e, 0x92, 0xc8, 0xbc, 0xa7, 0x79, 0xb7, 0x66, 0x27,
	0xe0, 0x45, 0x8c, 0xb2, 0x27, 0x78, 0xd8, 0x03, 0x45, 0x0f, 0x07, 0x1c, 0xbb, 0x48, 0x62, 0xcf,
	0x19, 0x3d, 0x35, 0x97, 0x34, 0x41, 0x6d, 0x7e, 0xe0, 0x49, 0x29, 0xac, 0xf6, 0xc4, 0xee, 0xf5,
	0x53, 0xbb, 0xe0, 0xa5, 0x24, 0xf8, 0x25, 0x00, 0x1e, 0x47, 0x84, 0x3a, 0x72, 0x1c, 0x60, 0x33,
	0x5b, 0x31, 0xaa, 0xf7, 0xeb, 0x9f, 0xdc, 0x84, 0x52, 0x19, 0xf5, 0xc6, 0x01, 0xb6, 0x73, 0x5e,
	0x72, 0x84, 0xa7, 0xa0, 0x34, 0x69, 0xf9, 0x28, 0xd1, 0xc2, 0xcc, 0xe9, 0xf2, 0x54, 0x17, 0x53,
	0x46, 0x65, 0xb2, 0x97, 0xfd, 0x29, 0x59, 0xc0, 0x53, 0x60, 0x5e, 0x25, 0x75, 0x24, 0xb9, 0xc0,
	0x2c, 0x94, 0xe6, 0xb2, 0x4e, 0xc1, 0xc3, 0x6b, 0xb5, 0x69, 0xc7, 0x33, 0x63, 0xaf, 0x5d, 0x61,
	0xeb, 0x45, 0x86, 0xf0, 0x25, 0xd8, 0x71, 0x19, 0x95, 0x84, 0x86, 0xd8, 0x61, 0xd4, 0x99, 0x7b,
	0xc1, 0x4a, 0xc5, 0xa8, 0x66, 0xed, 0x4a, 0x82, 0xed, 0xd2, 0xce, 0x6c, 0xbe, 0x7d, 0x90, 0x97,
	0x1c, 0x51, 0x11, 0x20, 0x8e, 0xa9, 0x34, 0x81, 0xf6, 0xab, 0x7c, 0xcd, 0xaf, 0x16, 0x63, 0xbe,
	0xee, 0x18, 0x3b, 0x0d, 0x87, 0x9f, 0x83, 0xec, 0x80, 0x63, 0xdc, 0x27, 0xd4, 0x33, 0xf3, 0x0b,
	0x4d, 0x27, 0x58, 0x78, 0x0c, 0xee, 0x4f, 0x6d, 0x3d, 0x61, 0x16, 0x75, 0xb6, 0xb7, 0x67, 0x37,
	0xd5, 0xa9, 0xc6, 0x76, 0x35, 0xd4, 0x2e, 0x8a, 0x94, 0x24, 0xe0, 0x57, 0xa0, 0x2c, 0xdd, 0xc0,
	0x19, 0x20, 0xa1, 0xc8, 0x30, 0x75, 0xbe, 0x0d, 0x71, 0x88, 0x1d, 0x1f, 0xd3, 0xa1, 0x3c, 0x37,
	0x0b, 0x8b, 0x67, 0xc0, 0x5e, 0x93, 0x6e, 0x70, 0x84, 0x84, 0xec, 0x06, 0x98, 0xbe, 0x52, 0xc6,
	0x1d, 0x6d, 0x0b, 0x4f, 0xc1, 0x8a, 0xe4, 0x68, 0x30, 0x20, 0xae, 0xe3, 0x11, 0x1e, 0x0d, 0x86,
	0x59, 0xd2, 0x8d, 0xf6, 0x78, 0xb6, 0x9f, 0xbd, 0x08, 0xde, 0x4e, 0xd0, 0x76, 0x49, 0x5e, 0xf9,
	0x02, 0xbf, 0x06, 0xab, 0x33, 0x16, 0xac, 0x09, 0xb5, 0x9f, 0x4f, 0xe6, 0x37, 0xdb, 0x99, 0x17,
	0x24, 0x15, 0x3c, 0xd0, 0x5a, 0x7b, 0x25, 0xbc, 0xfa, 0x09, 0x3e, 0x03, 0x85, 0xf4, 0xf3, 0x60,
	0xae, 0x6a, 0xd6, 0x7f, 0xd8, 0x30, 0xcd, 0x80, 0x24, 0x14, 0x76, 0x1e, 0x5d, 0x0a, 0x70, 0x04,
	0x1e, 0xa6, 0x97, 0x0b, 0xf2, 0x11, 0x75, 0x71, 0xe2, 0xec, 0xff, 0x34, 0x6d, 0xe3, 0x06, 0xc3,
	0x96, 0xda, 0x28, 0x11, 0x45, 0xec, 0xfb, 0xba, 0x3b, 0x5b, 0x01, 0x37, 0x01, 0xe0, 0x38, 0x14,
	0xd8, 0x09, 0x18, 0x97, 0xe6, 0x03, 0xdd, 0xc4, 0x39, 0xfd, 0xe5, 0x84, 0x71, 0x09, 0x0f, 0x00,
	0x88, 0x1e, 0x66, 0xc7, 0x67, 0x43, 0x73, 0x4d, 0xf7, 0xcc, 0xce, 0xb4, 0x1f, 0x97, 0x0f, 0xb7,
	0x8a, 0x4f, 0x0b, 0x1d, 0x36, 0xb4, 0x73, 0x28, 0x39, 0xc2, 0x10, 0x54, 0xcf, 0x89, 0xe7, 0x61,
	0xea, 0x68, 0x43, 0x27, 0xb5, 0x9c, 0xd4, 0xcd, 0x8c, 0x93, 0x21, 0xa1, 0xc8, 0x77, 0x3c, 0x21,
	0xcd, 0x3b, 0x8b, 0x9a, 0xba, 0x95, 0x31, 0x0d, 0xfb, 0x83, 0x88, 0xef, 0x50, 0xd1, 0x5d, 0xae,
	0xac, 0x33, 0x81, 0xbb, 0x31, 0x57, 0x5b, 0xc8, 0xf2, 0x5b, 0x50, 0x48, 0xaf, 0x33, 0xb8, 0x0f,
	0x0a, 0x6a, 0x16, 0x1c, 0xc9, 0xa2, 0x60, 0x8d, 0x85, 0xf3, 0x03, 0x14, 0xbe, 0xc7, 0x54, 0x26,
	0x1a, 0xbb, 0x3f, 0xfe, 0xfa, 0xfd, 0xd6, 0x0e, 0x88, 0x7e, 0x4b, 0x2c, 0x14, 0x10, 0x6b, 0x54,
	0x9f, 0xbd, 0x37, 0xcb, 0x3f, 0x65, 0xc0, 0xfa, 0x9c, 0x42, 0x40, 0x0a, 0x8a, 0xf8, 0x1d, 0x72,
	0x65, 0x52, 0xe2, 0xd8, 0x8b, 0x2f, 0xfe, 0x7b, 0x6d, 0xad, 0x43, 0xc5, 0x17, 0x7f, 0x7a, 0x76,
	0xcb, 0x2e, 0xe0, 0x94, 0x5c, 0x7e, 0x05, 0x0a, 0x69, 0x7d, 0xa3, 0xa9, 0xc2, 0xd8, 0x07, 0x8d,
	0xd9, 0x61, 0xdc, 0xe4, 0x8a, 0xc6, 0x67, 0x8a, 0xa2, 0x06, 0x3e, 0xfd, 0x57, 0x14, 0xad, 0x55,
	0x50, 0x48, 0xba, 0x5a, 0x3d, 0x20, 0xf0, 0xf6, 0x9f, 0x2d, 0x63, 0x7b, 0x17, 0xe4, 0x26, 0xcf,
	0x03, 0xcc, 0x83, 0xa5, 0xf6, 0xe1, 0x51, 0xf3, 0xac, 0xd3, 0x2b, 0xdd, 0x82, 0xcb, 0x20, 0xff,
	0xa2, 0xdb, 0x3e, 0x3e, 0x7a, 0xe3, 0x74, 0x5f, 0x76, 0xde, 0x94, 0x8c, 0xc6, 0x86, 0xba, 0x75,
	0x1d, 0x3c, 0x98, 0x79, 0xeb, 0xf3, 0x3b, 0xd9, 0xfb, 0xa5, 0xe5, 0x56, 0xf3, 0x97, 0xef, 0x7e,
	0xfb, 0xfd, 0x5e, 0xa6, 0x94, 0x01, 0x8f, 0x09, 0x8b, 0x32, 0x1a, 0x70, 0xf6, 0x6e, 0x3c, 0x37,
	0xb9, 0xad, 0x62, 0xc2, 0x70, 0xa2, 0xaa, 0x7f, 0x62, 0xf4, 0xef, 0xe9, 0x36, 0xd8, 0xfb, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0xc9, 0xe2, 0xb3, 0xa0, 0xed, 0x0a, 0x00, 0x00,
}
