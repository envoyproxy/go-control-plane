// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/core/v3/protocol.proto

package envoy_config_core_v3

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TcpProtocolOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpProtocolOptions) Reset()         { *m = TcpProtocolOptions{} }
func (m *TcpProtocolOptions) String() string { return proto.CompactTextString(m) }
func (*TcpProtocolOptions) ProtoMessage()    {}
func (*TcpProtocolOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{0}
}

func (m *TcpProtocolOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpProtocolOptions.Unmarshal(m, b)
}
func (m *TcpProtocolOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpProtocolOptions.Marshal(b, m, deterministic)
}
func (m *TcpProtocolOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpProtocolOptions.Merge(m, src)
}
func (m *TcpProtocolOptions) XXX_Size() int {
	return xxx_messageInfo_TcpProtocolOptions.Size(m)
}
func (m *TcpProtocolOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpProtocolOptions.DiscardUnknown(m)
}

var xxx_messageInfo_TcpProtocolOptions proto.InternalMessageInfo

type UpstreamHttpProtocolOptions struct {
	AutoSni              bool     `protobuf:"varint,1,opt,name=auto_sni,json=autoSni,proto3" json:"auto_sni,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamHttpProtocolOptions) Reset()         { *m = UpstreamHttpProtocolOptions{} }
func (m *UpstreamHttpProtocolOptions) String() string { return proto.CompactTextString(m) }
func (*UpstreamHttpProtocolOptions) ProtoMessage()    {}
func (*UpstreamHttpProtocolOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{1}
}

func (m *UpstreamHttpProtocolOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpstreamHttpProtocolOptions.Unmarshal(m, b)
}
func (m *UpstreamHttpProtocolOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpstreamHttpProtocolOptions.Marshal(b, m, deterministic)
}
func (m *UpstreamHttpProtocolOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamHttpProtocolOptions.Merge(m, src)
}
func (m *UpstreamHttpProtocolOptions) XXX_Size() int {
	return xxx_messageInfo_UpstreamHttpProtocolOptions.Size(m)
}
func (m *UpstreamHttpProtocolOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamHttpProtocolOptions.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamHttpProtocolOptions proto.InternalMessageInfo

func (m *UpstreamHttpProtocolOptions) GetAutoSni() bool {
	if m != nil {
		return m.AutoSni
	}
	return false
}

type HttpProtocolOptions struct {
	IdleTimeout           *duration.Duration    `protobuf:"bytes,1,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	MaxConnectionDuration *duration.Duration    `protobuf:"bytes,3,opt,name=max_connection_duration,json=maxConnectionDuration,proto3" json:"max_connection_duration,omitempty"`
	MaxHeadersCount       *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=max_headers_count,json=maxHeadersCount,proto3" json:"max_headers_count,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *HttpProtocolOptions) Reset()         { *m = HttpProtocolOptions{} }
func (m *HttpProtocolOptions) String() string { return proto.CompactTextString(m) }
func (*HttpProtocolOptions) ProtoMessage()    {}
func (*HttpProtocolOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{2}
}

func (m *HttpProtocolOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpProtocolOptions.Unmarshal(m, b)
}
func (m *HttpProtocolOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpProtocolOptions.Marshal(b, m, deterministic)
}
func (m *HttpProtocolOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpProtocolOptions.Merge(m, src)
}
func (m *HttpProtocolOptions) XXX_Size() int {
	return xxx_messageInfo_HttpProtocolOptions.Size(m)
}
func (m *HttpProtocolOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpProtocolOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HttpProtocolOptions proto.InternalMessageInfo

func (m *HttpProtocolOptions) GetIdleTimeout() *duration.Duration {
	if m != nil {
		return m.IdleTimeout
	}
	return nil
}

func (m *HttpProtocolOptions) GetMaxConnectionDuration() *duration.Duration {
	if m != nil {
		return m.MaxConnectionDuration
	}
	return nil
}

func (m *HttpProtocolOptions) GetMaxHeadersCount() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxHeadersCount
	}
	return nil
}

type Http1ProtocolOptions struct {
	AllowAbsoluteUrl      *wrappers.BoolValue                   `protobuf:"bytes,1,opt,name=allow_absolute_url,json=allowAbsoluteUrl,proto3" json:"allow_absolute_url,omitempty"`
	AcceptHttp_10         bool                                  `protobuf:"varint,2,opt,name=accept_http_10,json=acceptHttp10,proto3" json:"accept_http_10,omitempty"`
	DefaultHostForHttp_10 string                                `protobuf:"bytes,3,opt,name=default_host_for_http_10,json=defaultHostForHttp10,proto3" json:"default_host_for_http_10,omitempty"`
	HeaderKeyFormat       *Http1ProtocolOptions_HeaderKeyFormat `protobuf:"bytes,4,opt,name=header_key_format,json=headerKeyFormat,proto3" json:"header_key_format,omitempty"`
	EnableTrailers        bool                                  `protobuf:"varint,5,opt,name=enable_trailers,json=enableTrailers,proto3" json:"enable_trailers,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                              `json:"-"`
	XXX_unrecognized      []byte                                `json:"-"`
	XXX_sizecache         int32                                 `json:"-"`
}

func (m *Http1ProtocolOptions) Reset()         { *m = Http1ProtocolOptions{} }
func (m *Http1ProtocolOptions) String() string { return proto.CompactTextString(m) }
func (*Http1ProtocolOptions) ProtoMessage()    {}
func (*Http1ProtocolOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{3}
}

func (m *Http1ProtocolOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Http1ProtocolOptions.Unmarshal(m, b)
}
func (m *Http1ProtocolOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Http1ProtocolOptions.Marshal(b, m, deterministic)
}
func (m *Http1ProtocolOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Http1ProtocolOptions.Merge(m, src)
}
func (m *Http1ProtocolOptions) XXX_Size() int {
	return xxx_messageInfo_Http1ProtocolOptions.Size(m)
}
func (m *Http1ProtocolOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_Http1ProtocolOptions.DiscardUnknown(m)
}

var xxx_messageInfo_Http1ProtocolOptions proto.InternalMessageInfo

func (m *Http1ProtocolOptions) GetAllowAbsoluteUrl() *wrappers.BoolValue {
	if m != nil {
		return m.AllowAbsoluteUrl
	}
	return nil
}

func (m *Http1ProtocolOptions) GetAcceptHttp_10() bool {
	if m != nil {
		return m.AcceptHttp_10
	}
	return false
}

func (m *Http1ProtocolOptions) GetDefaultHostForHttp_10() string {
	if m != nil {
		return m.DefaultHostForHttp_10
	}
	return ""
}

func (m *Http1ProtocolOptions) GetHeaderKeyFormat() *Http1ProtocolOptions_HeaderKeyFormat {
	if m != nil {
		return m.HeaderKeyFormat
	}
	return nil
}

func (m *Http1ProtocolOptions) GetEnableTrailers() bool {
	if m != nil {
		return m.EnableTrailers
	}
	return false
}

type Http1ProtocolOptions_HeaderKeyFormat struct {
	// Types that are valid to be assigned to HeaderFormat:
	//	*Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords_
	HeaderFormat         isHttp1ProtocolOptions_HeaderKeyFormat_HeaderFormat `protobuf_oneof:"header_format"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *Http1ProtocolOptions_HeaderKeyFormat) Reset()         { *m = Http1ProtocolOptions_HeaderKeyFormat{} }
func (m *Http1ProtocolOptions_HeaderKeyFormat) String() string { return proto.CompactTextString(m) }
func (*Http1ProtocolOptions_HeaderKeyFormat) ProtoMessage()    {}
func (*Http1ProtocolOptions_HeaderKeyFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{3, 0}
}

func (m *Http1ProtocolOptions_HeaderKeyFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat.Unmarshal(m, b)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat.Marshal(b, m, deterministic)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat.Merge(m, src)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat) XXX_Size() int {
	return xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat.Size(m)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat.DiscardUnknown(m)
}

var xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat proto.InternalMessageInfo

type isHttp1ProtocolOptions_HeaderKeyFormat_HeaderFormat interface {
	isHttp1ProtocolOptions_HeaderKeyFormat_HeaderFormat()
}

type Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords_ struct {
	ProperCaseWords *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords `protobuf:"bytes,1,opt,name=proper_case_words,json=properCaseWords,proto3,oneof"`
}

func (*Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords_) isHttp1ProtocolOptions_HeaderKeyFormat_HeaderFormat() {
}

func (m *Http1ProtocolOptions_HeaderKeyFormat) GetHeaderFormat() isHttp1ProtocolOptions_HeaderKeyFormat_HeaderFormat {
	if m != nil {
		return m.HeaderFormat
	}
	return nil
}

func (m *Http1ProtocolOptions_HeaderKeyFormat) GetProperCaseWords() *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords {
	if x, ok := m.GetHeaderFormat().(*Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords_); ok {
		return x.ProperCaseWords
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Http1ProtocolOptions_HeaderKeyFormat) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords_)(nil),
	}
}

type Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) Reset() {
	*m = Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords{}
}
func (m *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) String() string {
	return proto.CompactTextString(m)
}
func (*Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) ProtoMessage() {}
func (*Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{3, 0, 0}
}

func (m *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords.Unmarshal(m, b)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords.Marshal(b, m, deterministic)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords.Merge(m, src)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) XXX_Size() int {
	return xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords.Size(m)
}
func (m *Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords) XXX_DiscardUnknown() {
	xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords.DiscardUnknown(m)
}

var xxx_messageInfo_Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords proto.InternalMessageInfo

type Http2ProtocolOptions struct {
	HpackTableSize                               *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=hpack_table_size,json=hpackTableSize,proto3" json:"hpack_table_size,omitempty"`
	MaxConcurrentStreams                         *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=max_concurrent_streams,json=maxConcurrentStreams,proto3" json:"max_concurrent_streams,omitempty"`
	InitialStreamWindowSize                      *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=initial_stream_window_size,json=initialStreamWindowSize,proto3" json:"initial_stream_window_size,omitempty"`
	InitialConnectionWindowSize                  *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=initial_connection_window_size,json=initialConnectionWindowSize,proto3" json:"initial_connection_window_size,omitempty"`
	AllowConnect                                 bool                  `protobuf:"varint,5,opt,name=allow_connect,json=allowConnect,proto3" json:"allow_connect,omitempty"`
	AllowMetadata                                bool                  `protobuf:"varint,6,opt,name=allow_metadata,json=allowMetadata,proto3" json:"allow_metadata,omitempty"`
	MaxOutboundFrames                            *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=max_outbound_frames,json=maxOutboundFrames,proto3" json:"max_outbound_frames,omitempty"`
	MaxOutboundControlFrames                     *wrappers.UInt32Value `protobuf:"bytes,8,opt,name=max_outbound_control_frames,json=maxOutboundControlFrames,proto3" json:"max_outbound_control_frames,omitempty"`
	MaxConsecutiveInboundFramesWithEmptyPayload  *wrappers.UInt32Value `protobuf:"bytes,9,opt,name=max_consecutive_inbound_frames_with_empty_payload,json=maxConsecutiveInboundFramesWithEmptyPayload,proto3" json:"max_consecutive_inbound_frames_with_empty_payload,omitempty"`
	MaxInboundPriorityFramesPerStream            *wrappers.UInt32Value `protobuf:"bytes,10,opt,name=max_inbound_priority_frames_per_stream,json=maxInboundPriorityFramesPerStream,proto3" json:"max_inbound_priority_frames_per_stream,omitempty"`
	MaxInboundWindowUpdateFramesPerDataFrameSent *wrappers.UInt32Value `protobuf:"bytes,11,opt,name=max_inbound_window_update_frames_per_data_frame_sent,json=maxInboundWindowUpdateFramesPerDataFrameSent,proto3" json:"max_inbound_window_update_frames_per_data_frame_sent,omitempty"`
	StreamErrorOnInvalidHttpMessaging            bool                  `protobuf:"varint,12,opt,name=stream_error_on_invalid_http_messaging,json=streamErrorOnInvalidHttpMessaging,proto3" json:"stream_error_on_invalid_http_messaging,omitempty"`
	XXX_NoUnkeyedLiteral                         struct{}              `json:"-"`
	XXX_unrecognized                             []byte                `json:"-"`
	XXX_sizecache                                int32                 `json:"-"`
}

func (m *Http2ProtocolOptions) Reset()         { *m = Http2ProtocolOptions{} }
func (m *Http2ProtocolOptions) String() string { return proto.CompactTextString(m) }
func (*Http2ProtocolOptions) ProtoMessage()    {}
func (*Http2ProtocolOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{4}
}

func (m *Http2ProtocolOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Http2ProtocolOptions.Unmarshal(m, b)
}
func (m *Http2ProtocolOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Http2ProtocolOptions.Marshal(b, m, deterministic)
}
func (m *Http2ProtocolOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Http2ProtocolOptions.Merge(m, src)
}
func (m *Http2ProtocolOptions) XXX_Size() int {
	return xxx_messageInfo_Http2ProtocolOptions.Size(m)
}
func (m *Http2ProtocolOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_Http2ProtocolOptions.DiscardUnknown(m)
}

var xxx_messageInfo_Http2ProtocolOptions proto.InternalMessageInfo

func (m *Http2ProtocolOptions) GetHpackTableSize() *wrappers.UInt32Value {
	if m != nil {
		return m.HpackTableSize
	}
	return nil
}

func (m *Http2ProtocolOptions) GetMaxConcurrentStreams() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxConcurrentStreams
	}
	return nil
}

func (m *Http2ProtocolOptions) GetInitialStreamWindowSize() *wrappers.UInt32Value {
	if m != nil {
		return m.InitialStreamWindowSize
	}
	return nil
}

func (m *Http2ProtocolOptions) GetInitialConnectionWindowSize() *wrappers.UInt32Value {
	if m != nil {
		return m.InitialConnectionWindowSize
	}
	return nil
}

func (m *Http2ProtocolOptions) GetAllowConnect() bool {
	if m != nil {
		return m.AllowConnect
	}
	return false
}

func (m *Http2ProtocolOptions) GetAllowMetadata() bool {
	if m != nil {
		return m.AllowMetadata
	}
	return false
}

func (m *Http2ProtocolOptions) GetMaxOutboundFrames() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxOutboundFrames
	}
	return nil
}

func (m *Http2ProtocolOptions) GetMaxOutboundControlFrames() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxOutboundControlFrames
	}
	return nil
}

func (m *Http2ProtocolOptions) GetMaxConsecutiveInboundFramesWithEmptyPayload() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxConsecutiveInboundFramesWithEmptyPayload
	}
	return nil
}

func (m *Http2ProtocolOptions) GetMaxInboundPriorityFramesPerStream() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxInboundPriorityFramesPerStream
	}
	return nil
}

func (m *Http2ProtocolOptions) GetMaxInboundWindowUpdateFramesPerDataFrameSent() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxInboundWindowUpdateFramesPerDataFrameSent
	}
	return nil
}

func (m *Http2ProtocolOptions) GetStreamErrorOnInvalidHttpMessaging() bool {
	if m != nil {
		return m.StreamErrorOnInvalidHttpMessaging
	}
	return false
}

type GrpcProtocolOptions struct {
	Http2ProtocolOptions *Http2ProtocolOptions `protobuf:"bytes,1,opt,name=http2_protocol_options,json=http2ProtocolOptions,proto3" json:"http2_protocol_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GrpcProtocolOptions) Reset()         { *m = GrpcProtocolOptions{} }
func (m *GrpcProtocolOptions) String() string { return proto.CompactTextString(m) }
func (*GrpcProtocolOptions) ProtoMessage()    {}
func (*GrpcProtocolOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_767741306bfd0da6, []int{5}
}

func (m *GrpcProtocolOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcProtocolOptions.Unmarshal(m, b)
}
func (m *GrpcProtocolOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcProtocolOptions.Marshal(b, m, deterministic)
}
func (m *GrpcProtocolOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcProtocolOptions.Merge(m, src)
}
func (m *GrpcProtocolOptions) XXX_Size() int {
	return xxx_messageInfo_GrpcProtocolOptions.Size(m)
}
func (m *GrpcProtocolOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcProtocolOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcProtocolOptions proto.InternalMessageInfo

func (m *GrpcProtocolOptions) GetHttp2ProtocolOptions() *Http2ProtocolOptions {
	if m != nil {
		return m.Http2ProtocolOptions
	}
	return nil
}

func init() {
	proto.RegisterType((*TcpProtocolOptions)(nil), "envoy.config.core.v3.TcpProtocolOptions")
	proto.RegisterType((*UpstreamHttpProtocolOptions)(nil), "envoy.config.core.v3.UpstreamHttpProtocolOptions")
	proto.RegisterType((*HttpProtocolOptions)(nil), "envoy.config.core.v3.HttpProtocolOptions")
	proto.RegisterType((*Http1ProtocolOptions)(nil), "envoy.config.core.v3.Http1ProtocolOptions")
	proto.RegisterType((*Http1ProtocolOptions_HeaderKeyFormat)(nil), "envoy.config.core.v3.Http1ProtocolOptions.HeaderKeyFormat")
	proto.RegisterType((*Http1ProtocolOptions_HeaderKeyFormat_ProperCaseWords)(nil), "envoy.config.core.v3.Http1ProtocolOptions.HeaderKeyFormat.ProperCaseWords")
	proto.RegisterType((*Http2ProtocolOptions)(nil), "envoy.config.core.v3.Http2ProtocolOptions")
	proto.RegisterType((*GrpcProtocolOptions)(nil), "envoy.config.core.v3.GrpcProtocolOptions")
}

func init() {
	proto.RegisterFile("envoy/config/core/v3/protocol.proto", fileDescriptor_767741306bfd0da6)
}

var fileDescriptor_767741306bfd0da6 = []byte{
	// 1095 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0x53, 0x1b, 0x37,
	0x14, 0xaf, 0x21, 0x09, 0x20, 0x3e, 0x1c, 0x16, 0x37, 0x6c, 0xa0, 0xc3, 0x14, 0x27, 0x21, 0x0c,
	0x49, 0xd6, 0x01, 0xd2, 0x4c, 0xc7, 0xd3, 0x1e, 0x62, 0x12, 0x6a, 0xda, 0x61, 0x70, 0x16, 0x28,
	0x47, 0x45, 0xec, 0xca, 0xb6, 0x9a, 0x5d, 0x69, 0x47, 0xd2, 0xfa, 0x23, 0xe7, 0x1e, 0x7a, 0xed,
	0xb5, 0xf7, 0x4e, 0xff, 0x85, 0x9e, 0xdb, 0xe9, 0xff, 0xd4, 0xe1, 0xe2, 0x8e, 0x3e, 0x96, 0x18,
	0xdb, 0x25, 0xc0, 0xc9, 0xde, 0xa7, 0xdf, 0xc7, 0xd3, 0xd3, 0xd3, 0xdb, 0x05, 0x0f, 0x30, 0x6d,
	0xb1, 0x6e, 0x29, 0x60, 0xb4, 0x4e, 0x1a, 0xa5, 0x80, 0x71, 0x5c, 0x6a, 0x6d, 0x97, 0x12, 0xce,
	0x24, 0x0b, 0x58, 0xe4, 0xe9, 0x3f, 0x4e, 0x41, 0x83, 0x3c, 0x03, 0xf2, 0x14, 0xc8, 0x6b, 0x6d,
	0x2f, 0xad, 0x34, 0x18, 0x6b, 0x44, 0xd8, 0x80, 0x4f, 0xd3, 0x7a, 0x29, 0x4c, 0x39, 0x92, 0x84,
	0x51, 0xc3, 0x1a, 0x5e, 0x6f, 0x73, 0x94, 0x24, 0x98, 0x0b, 0xbb, 0xbe, 0x9a, 0x86, 0x09, 0x2a,
	0x21, 0x4a, 0x99, 0xd4, 0x34, 0x51, 0x6a, 0x61, 0x2e, 0x08, 0xa3, 0x84, 0x36, 0x2c, 0x64, 0xb1,
	0x85, 0x22, 0x12, 0x22, 0x89, 0x4b, 0xd9, 0x1f, 0xb3, 0x50, 0x7c, 0x05, 0x9c, 0xa3, 0x20, 0xa9,
	0xd9, 0x34, 0x0f, 0x12, 0xcd, 0x2f, 0x3f, 0xf9, 0xed, 0x9f, 0x5f, 0x56, 0xd6, 0xc0, 0x43, 0x93,
	0x2e, 0x4a, 0x88, 0xd7, 0xda, 0x32, 0xe9, 0x0e, 0x83, 0x8b, 0x14, 0x2c, 0x1f, 0x27, 0x42, 0x72,
	0x8c, 0xe2, 0xaa, 0x94, 0x83, 0xcb, 0xce, 0x7d, 0x30, 0x89, 0x52, 0xc9, 0xa0, 0xa0, 0xc4, 0xcd,
	0x7d, 0x99, 0x5b, 0x9f, 0xf4, 0x27, 0xd4, 0xf3, 0x21, 0x25, 0xe5, 0x17, 0xca, 0xa6, 0x04, 0x9e,
	0x0d, 0xdb, 0x5c, 0x22, 0x58, 0xfc, 0x63, 0x0c, 0x2c, 0x8c, 0x32, 0xfa, 0x06, 0xcc, 0x90, 0x30,
	0xc2, 0x50, 0x92, 0x18, 0xb3, 0x54, 0x6a, 0xb3, 0xe9, 0xad, 0xfb, 0x9e, 0xa9, 0x9e, 0x97, 0x55,
	0xcf, 0x7b, 0x6d, 0xab, 0xeb, 0x4f, 0x2b, 0xf8, 0x91, 0x41, 0x3b, 0x6f, 0xc1, 0x62, 0x8c, 0x3a,
	0x30, 0x60, 0x94, 0xe2, 0x40, 0x2d, 0xc3, 0xec, 0x14, 0xdc, 0xf1, 0x4f, 0x09, 0x7d, 0x1e, 0xa3,
	0xce, 0xce, 0x39, 0x31, 0x0b, 0x3b, 0x6f, 0xc1, 0xbc, 0x92, 0x6c, 0x62, 0x14, 0x62, 0x2e, 0x60,
	0xc0, 0x52, 0x2a, 0xdd, 0x31, 0x2d, 0xf6, 0xc5, 0x90, 0xd8, 0xf1, 0x1e, 0x95, 0xdb, 0x5b, 0x3f,
	0xa2, 0x28, 0xc5, 0x95, 0x89, 0xb3, 0xca, 0xad, 0x8d, 0xb1, 0xf5, 0x9c, 0x9f, 0x8f, 0x51, 0xa7,
	0x6a, 0xe8, 0x3b, 0x8a, 0x5d, 0x7e, 0xaa, 0x2a, 0xf6, 0x18, 0x3c, 0x1a, 0xae, 0xd8, 0xa8, 0x4a,
	0xfd, 0x7d, 0x1b, 0x14, 0x54, 0x7c, 0x73, 0xb0, 0x54, 0x55, 0xe0, 0xa0, 0x28, 0x62, 0x6d, 0x88,
	0x4e, 0x05, 0x8b, 0x52, 0x89, 0x61, 0xca, 0x23, 0x5b, 0xb0, 0xa5, 0xa1, 0xd4, 0x2a, 0x8c, 0x45,
	0x3a, 0x31, 0xff, 0xae, 0x66, 0xbd, 0xb2, 0xa4, 0x63, 0x1e, 0x39, 0x0f, 0xc1, 0x1c, 0x0a, 0x02,
	0x9c, 0x48, 0xd8, 0x94, 0x32, 0x81, 0x9b, 0xcf, 0xf5, 0x06, 0x27, 0xfd, 0x19, 0x13, 0xd5, 0xee,
	0xcf, 0x9d, 0x97, 0xc0, 0x0d, 0x71, 0x1d, 0xa5, 0x91, 0x84, 0x4d, 0x26, 0x24, 0xac, 0x33, 0x7e,
	0x8e, 0x57, 0xd5, 0x9d, 0xf2, 0x0b, 0x76, 0xbd, 0xca, 0x84, 0xdc, 0x65, 0xdc, 0xf2, 0xea, 0x60,
	0xde, 0x54, 0x0f, 0xbe, 0xc7, 0x5d, 0xc5, 0x8a, 0x91, 0x74, 0x6f, 0xe9, 0x34, 0xcb, 0xde, 0xa8,
	0xbb, 0xe4, 0x8d, 0xda, 0xae, 0x67, 0x4a, 0xf8, 0x03, 0xee, 0xee, 0x6a, 0x05, 0x3f, 0xdf, 0xbc,
	0x18, 0x70, 0x1e, 0x83, 0x3c, 0xa6, 0xe8, 0x54, 0x35, 0x0f, 0x47, 0x24, 0xc2, 0x5c, 0xb8, 0xb7,
	0xf5, 0x36, 0xe6, 0x4c, 0xf8, 0xc8, 0x46, 0x97, 0xfe, 0x1a, 0x03, 0xf9, 0x01, 0x35, 0xa7, 0x03,
	0xe6, 0x13, 0xce, 0x12, 0xcc, 0x61, 0x80, 0x04, 0x86, 0x6d, 0xc6, 0x43, 0x61, 0x6b, 0xf9, 0xfd,
	0xcd, 0x93, 0xf4, 0x6a, 0x5a, 0x73, 0x07, 0x09, 0x7c, 0xa2, 0x14, 0xab, 0x9f, 0xf9, 0xf9, 0xe4,
	0x62, 0x68, 0xe9, 0x1d, 0xc8, 0x0f, 0xa0, 0xca, 0xfb, 0xaa, 0x41, 0xaa, 0x60, 0x77, 0x74, 0x83,
	0x5c, 0xd7, 0xb4, 0xfc, 0xad, 0x92, 0xfb, 0x1a, 0xbc, 0xbc, 0x99, 0x5c, 0xa5, 0x00, 0x66, 0xed,
	0xf9, 0x99, 0xb3, 0x73, 0xc6, 0xff, 0xad, 0xe4, 0xca, 0xcf, 0x94, 0xe8, 0x3a, 0x58, 0xbb, 0x9a,
	0x68, 0xf1, 0xcf, 0x29, 0xd3, 0xc5, 0x5b, 0x83, 0x5d, 0xbc, 0x0b, 0xee, 0x36, 0x13, 0x14, 0xbc,
	0x87, 0x52, 0x1f, 0x9d, 0x20, 0x1f, 0xb0, 0xad, 0xfb, 0xa5, 0xd7, 0xcb, 0x9f, 0xd3, 0xac, 0x23,
	0x45, 0x3a, 0x24, 0x1f, 0xb0, 0x83, 0xc0, 0x3d, 0x7b, 0xf5, 0x83, 0x94, 0x73, 0x4c, 0x25, 0x34,
	0xc3, 0x47, 0x5c, 0xe9, 0xb2, 0xce, 0x9e, 0x55, 0xc0, 0xc6, 0xa4, 0xdb, 0xeb, 0xf5, 0x7a, 0x13,
	0xeb, 0x39, 0xbf, 0x60, 0x66, 0x81, 0x55, 0x3a, 0x34, 0x42, 0xce, 0x4f, 0x60, 0x89, 0x50, 0x22,
	0x09, 0x8a, 0xac, 0x36, 0x6c, 0x13, 0x1a, 0xb2, 0xb6, 0x49, 0x7a, 0xfc, 0x0a, 0x36, 0xf9, 0xb3,
	0xca, 0xcc, 0x06, 0xb0, 0x36, 0xbd, 0xde, 0xb8, 0xbf, 0x68, 0x05, 0x8d, 0xc5, 0x89, 0x96, 0xd3,
	0xdb, 0xe1, 0x60, 0x25, 0xf3, 0xea, 0x9b, 0x66, 0xfd, 0x7e, 0xb7, 0x6e, 0xe2, 0xb7, 0x6c, 0x45,
	0x3f, 0x0e, 0xba, 0x3e, 0xcf, 0x07, 0x60, 0xd6, 0x0c, 0x14, 0xeb, 0x68, 0xaf, 0xcf, 0x8c, 0x0e,
	0x5a, 0x86, 0xf3, 0x08, 0xcc, 0x19, 0x50, 0x8c, 0x25, 0x0a, 0x91, 0x44, 0xee, 0x1d, 0x8d, 0x32,
	0xd4, 0x7d, 0x1b, 0x74, 0x8e, 0xc1, 0x82, 0x3a, 0x0e, 0x96, 0xca, 0x53, 0x96, 0xd2, 0x10, 0xd6,
	0x39, 0x8a, 0xb1, 0x70, 0x27, 0xae, 0x33, 0x38, 0xd5, 0xe0, 0x3d, 0xb0, 0x02, 0xbb, 0x9a, 0xef,
	0x84, 0x60, 0xf9, 0x82, 0x6c, 0xc0, 0xa8, 0xe4, 0x2c, 0xca, 0xe4, 0x27, 0xaf, 0x23, 0xef, 0xf6,
	0xc9, 0xef, 0x18, 0x1d, 0xeb, 0xf2, 0x73, 0x0e, 0x6c, 0xda, 0x66, 0x12, 0x38, 0x48, 0x25, 0x69,
	0x61, 0x48, 0x68, 0xff, 0x46, 0x60, 0x9b, 0xc8, 0x26, 0xc4, 0x71, 0x22, 0xbb, 0x30, 0x41, 0xdd,
	0x88, 0xa1, 0xd0, 0x9d, 0xba, 0x42, 0xd7, 0x3e, 0x31, 0x8d, 0x95, 0xa9, 0xee, 0xd1, 0xbe, 0xcd,
	0x9d, 0x10, 0xd9, 0x7c, 0xa3, 0x14, 0x6b, 0x46, 0xd0, 0x61, 0x60, 0x4d, 0x65, 0x91, 0x39, 0x27,
	0x9c, 0x30, 0x4e, 0x64, 0x37, 0x4b, 0x41, 0x0d, 0x2b, 0xd3, 0x87, 0x2e, 0xb8, 0x82, 0xf5, 0x6a,
	0x8c, 0x3a, 0xd6, 0xaf, 0x66, 0x95, 0x8c, 0x6f, 0x0d, 0x73, 0xd3, 0x7e, 0xce, 0xaf, 0x39, 0xf0,
	0xa2, 0xdf, 0xd1, 0xb6, 0x5b, 0x9a, 0xa8, 0x6f, 0x8d, 0x7e, 0x5b, 0x75, 0xc4, 0xe6, 0x19, 0x0a,
	0x4c, 0xa5, 0x3b, 0x7d, 0x9d, 0xba, 0x3f, 0xfd, 0x98, 0x88, 0x69, 0xbe, 0x63, 0xad, 0x7f, 0x9e,
	0xcc, 0x6b, 0x24, 0x91, 0x7e, 0x38, 0xc4, 0x54, 0xbd, 0xd2, 0xd7, 0xec, 0x65, 0xc3, 0x9c, 0x33,
	0x0e, 0x19, 0x85, 0x84, 0xea, 0xef, 0x1f, 0xf3, 0xf2, 0x89, 0xb1, 0x10, 0xa8, 0x41, 0x68, 0xc3,
	0x9d, 0xd1, 0x7d, 0xb8, 0x6a, 0xd0, 0x6f, 0x14, 0xf8, 0x80, 0xee, 0x19, 0xa8, 0x9a, 0x3c, 0xfb,
	0x19, 0xf0, 0x13, 0xa3, 0x6b, 0x70, 0x42, 0x15, 0x7f, 0xcf, 0x81, 0x85, 0xef, 0x78, 0x12, 0x0c,
	0x4e, 0xae, 0x77, 0xe0, 0x9e, 0xca, 0x60, 0x0b, 0x66, 0xdf, 0x87, 0x90, 0x99, 0x15, 0x3b, 0xbf,
	0x36, 0xfe, 0xff, 0xbd, 0x31, 0xe8, 0xe1, 0x17, 0x9a, 0x23, 0xa2, 0x97, 0x7c, 0x28, 0x8c, 0xc8,
	0xa7, 0xf2, 0x15, 0x28, 0x12, 0x66, 0x3c, 0x13, 0xce, 0x3a, 0xdd, 0x91, 0xf6, 0x95, 0xd9, 0x8c,
	0xa6, 0x7f, 0x6b, 0xb9, 0xd3, 0x3b, 0x3a, 0xfd, 0xed, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1a,
	0x82, 0xdd, 0x92, 0xfc, 0x0a, 0x00, 0x00,
}
