// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/trace/v2/opencensus.proto

package envoy_config_trace_v2

import (
	fmt "fmt"
	v1 "github.com/census-instrumentation/opencensus-proto/gen-go/trace/v1"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OpenCensusConfig_TraceContext int32

const (
	OpenCensusConfig_NONE                OpenCensusConfig_TraceContext = 0
	OpenCensusConfig_TRACE_CONTEXT       OpenCensusConfig_TraceContext = 1
	OpenCensusConfig_GRPC_TRACE_BIN      OpenCensusConfig_TraceContext = 2
	OpenCensusConfig_CLOUD_TRACE_CONTEXT OpenCensusConfig_TraceContext = 3
	OpenCensusConfig_B3                  OpenCensusConfig_TraceContext = 4
)

var OpenCensusConfig_TraceContext_name = map[int32]string{
	0: "NONE",
	1: "TRACE_CONTEXT",
	2: "GRPC_TRACE_BIN",
	3: "CLOUD_TRACE_CONTEXT",
	4: "B3",
}

var OpenCensusConfig_TraceContext_value = map[string]int32{
	"NONE":                0,
	"TRACE_CONTEXT":       1,
	"GRPC_TRACE_BIN":      2,
	"CLOUD_TRACE_CONTEXT": 3,
	"B3":                  4,
}

func (x OpenCensusConfig_TraceContext) String() string {
	return proto.EnumName(OpenCensusConfig_TraceContext_name, int32(x))
}

func (OpenCensusConfig_TraceContext) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ac20e2612a261f6f, []int{0, 0}
}

type OpenCensusConfig struct {
	TraceConfig                *v1.TraceConfig                 `protobuf:"bytes,1,opt,name=trace_config,json=traceConfig,proto3" json:"trace_config,omitempty"`
	StdoutExporterEnabled      bool                            `protobuf:"varint,2,opt,name=stdout_exporter_enabled,json=stdoutExporterEnabled,proto3" json:"stdout_exporter_enabled,omitempty"`
	StackdriverExporterEnabled bool                            `protobuf:"varint,3,opt,name=stackdriver_exporter_enabled,json=stackdriverExporterEnabled,proto3" json:"stackdriver_exporter_enabled,omitempty"`
	StackdriverProjectId       string                          `protobuf:"bytes,4,opt,name=stackdriver_project_id,json=stackdriverProjectId,proto3" json:"stackdriver_project_id,omitempty"`
	StackdriverAddress         string                          `protobuf:"bytes,10,opt,name=stackdriver_address,json=stackdriverAddress,proto3" json:"stackdriver_address,omitempty"`
	StackdriverGrpcService     *core.GrpcService               `protobuf:"bytes,13,opt,name=stackdriver_grpc_service,json=stackdriverGrpcService,proto3" json:"stackdriver_grpc_service,omitempty"`
	ZipkinExporterEnabled      bool                            `protobuf:"varint,5,opt,name=zipkin_exporter_enabled,json=zipkinExporterEnabled,proto3" json:"zipkin_exporter_enabled,omitempty"`
	ZipkinUrl                  string                          `protobuf:"bytes,6,opt,name=zipkin_url,json=zipkinUrl,proto3" json:"zipkin_url,omitempty"`
	OcagentExporterEnabled     bool                            `protobuf:"varint,11,opt,name=ocagent_exporter_enabled,json=ocagentExporterEnabled,proto3" json:"ocagent_exporter_enabled,omitempty"`
	OcagentAddress             string                          `protobuf:"bytes,12,opt,name=ocagent_address,json=ocagentAddress,proto3" json:"ocagent_address,omitempty"`
	OcagentGrpcService         *core.GrpcService               `protobuf:"bytes,14,opt,name=ocagent_grpc_service,json=ocagentGrpcService,proto3" json:"ocagent_grpc_service,omitempty"`
	IncomingTraceContext       []OpenCensusConfig_TraceContext `protobuf:"varint,8,rep,packed,name=incoming_trace_context,json=incomingTraceContext,proto3,enum=envoy.config.trace.v2.OpenCensusConfig_TraceContext" json:"incoming_trace_context,omitempty"`
	OutgoingTraceContext       []OpenCensusConfig_TraceContext `protobuf:"varint,9,rep,packed,name=outgoing_trace_context,json=outgoingTraceContext,proto3,enum=envoy.config.trace.v2.OpenCensusConfig_TraceContext" json:"outgoing_trace_context,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                        `json:"-"`
	XXX_unrecognized           []byte                          `json:"-"`
	XXX_sizecache              int32                           `json:"-"`
}

func (m *OpenCensusConfig) Reset()         { *m = OpenCensusConfig{} }
func (m *OpenCensusConfig) String() string { return proto.CompactTextString(m) }
func (*OpenCensusConfig) ProtoMessage()    {}
func (*OpenCensusConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac20e2612a261f6f, []int{0}
}

func (m *OpenCensusConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenCensusConfig.Unmarshal(m, b)
}
func (m *OpenCensusConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenCensusConfig.Marshal(b, m, deterministic)
}
func (m *OpenCensusConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenCensusConfig.Merge(m, src)
}
func (m *OpenCensusConfig) XXX_Size() int {
	return xxx_messageInfo_OpenCensusConfig.Size(m)
}
func (m *OpenCensusConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenCensusConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OpenCensusConfig proto.InternalMessageInfo

func (m *OpenCensusConfig) GetTraceConfig() *v1.TraceConfig {
	if m != nil {
		return m.TraceConfig
	}
	return nil
}

func (m *OpenCensusConfig) GetStdoutExporterEnabled() bool {
	if m != nil {
		return m.StdoutExporterEnabled
	}
	return false
}

func (m *OpenCensusConfig) GetStackdriverExporterEnabled() bool {
	if m != nil {
		return m.StackdriverExporterEnabled
	}
	return false
}

func (m *OpenCensusConfig) GetStackdriverProjectId() string {
	if m != nil {
		return m.StackdriverProjectId
	}
	return ""
}

func (m *OpenCensusConfig) GetStackdriverAddress() string {
	if m != nil {
		return m.StackdriverAddress
	}
	return ""
}

func (m *OpenCensusConfig) GetStackdriverGrpcService() *core.GrpcService {
	if m != nil {
		return m.StackdriverGrpcService
	}
	return nil
}

func (m *OpenCensusConfig) GetZipkinExporterEnabled() bool {
	if m != nil {
		return m.ZipkinExporterEnabled
	}
	return false
}

func (m *OpenCensusConfig) GetZipkinUrl() string {
	if m != nil {
		return m.ZipkinUrl
	}
	return ""
}

func (m *OpenCensusConfig) GetOcagentExporterEnabled() bool {
	if m != nil {
		return m.OcagentExporterEnabled
	}
	return false
}

func (m *OpenCensusConfig) GetOcagentAddress() string {
	if m != nil {
		return m.OcagentAddress
	}
	return ""
}

func (m *OpenCensusConfig) GetOcagentGrpcService() *core.GrpcService {
	if m != nil {
		return m.OcagentGrpcService
	}
	return nil
}

func (m *OpenCensusConfig) GetIncomingTraceContext() []OpenCensusConfig_TraceContext {
	if m != nil {
		return m.IncomingTraceContext
	}
	return nil
}

func (m *OpenCensusConfig) GetOutgoingTraceContext() []OpenCensusConfig_TraceContext {
	if m != nil {
		return m.OutgoingTraceContext
	}
	return nil
}

func init() {
	proto.RegisterEnum("envoy.config.trace.v2.OpenCensusConfig_TraceContext", OpenCensusConfig_TraceContext_name, OpenCensusConfig_TraceContext_value)
	proto.RegisterType((*OpenCensusConfig)(nil), "envoy.config.trace.v2.OpenCensusConfig")
}

func init() {
	proto.RegisterFile("envoy/config/trace/v2/opencensus.proto", fileDescriptor_ac20e2612a261f6f)
}

var fileDescriptor_ac20e2612a261f6f = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xdd, 0x4e, 0xdb, 0x3e,
	0x14, 0xff, 0xa7, 0xf4, 0x5f, 0x8a, 0x81, 0x92, 0x99, 0xaf, 0xa8, 0x1a, 0x53, 0xc5, 0x26, 0xd6,
	0x8b, 0xc9, 0x11, 0x05, 0x4d, 0xbb, 0x84, 0x66, 0x15, 0x62, 0x9a, 0xda, 0x2a, 0x2b, 0x12, 0x77,
	0x99, 0x49, 0xbc, 0xca, 0xd0, 0xd9, 0x96, 0xe3, 0x46, 0xb0, 0xab, 0x3d, 0xd7, 0x9e, 0x60, 0xb7,
	0x7b, 0x87, 0x3d, 0xc8, 0x14, 0x3b, 0x01, 0x13, 0x7a, 0x31, 0x69, 0x77, 0xc9, 0xf9, 0x7d, 0x1c,
	0x9f, 0x9f, 0x7d, 0xc0, 0x01, 0x61, 0x19, 0xbf, 0xf3, 0x63, 0xce, 0xbe, 0xd0, 0xa9, 0xaf, 0x24,
	0x8e, 0x89, 0x9f, 0xf5, 0x7c, 0x2e, 0x08, 0x8b, 0x09, 0x4b, 0xe7, 0x29, 0x12, 0x92, 0x2b, 0x0e,
	0xb7, 0x35, 0x0f, 0x19, 0x1e, 0xd2, 0x3c, 0x94, 0xf5, 0xda, 0xaf, 0x8c, 0x1c, 0x0b, 0x9a, 0xab,
	0x62, 0x2e, 0x89, 0x3f, 0x95, 0x22, 0x8e, 0x52, 0x22, 0x33, 0x1a, 0x13, 0x23, 0x6e, 0xbf, 0x79,
	0xb0, 0xf3, 0x75, 0xa5, 0x6c, 0x74, 0x68, 0x3e, 0xa2, 0xc2, 0xd6, 0xb0, 0xf7, 0xe6, 0x89, 0xc0,
	0x3e, 0x66, 0x8c, 0x2b, 0xac, 0x28, 0x67, 0xa9, 0x9f, 0x2a, 0xac, 0xca, 0x93, 0xb4, 0x77, 0x33,
	0x3c, 0xa3, 0x09, 0x56, 0xc4, 0x2f, 0x3f, 0x0c, 0xb0, 0xff, 0x7b, 0x19, 0xb8, 0x23, 0x41, 0x58,
	0xa0, 0x1b, 0x05, 0xda, 0x12, 0x9e, 0x83, 0x35, 0xbb, 0x85, 0xe7, 0x74, 0x9c, 0xee, 0x6a, 0xef,
	0x00, 0x55, 0x07, 0x2c, 0x47, 0x3a, 0x44, 0x93, 0xfc, 0xc3, 0xa8, 0xc3, 0x55, 0xf5, 0xf0, 0x03,
	0xdf, 0x82, 0xdd, 0x54, 0x25, 0x7c, 0xae, 0x22, 0x72, 0x2b, 0xb8, 0x54, 0x44, 0x46, 0x84, 0xe1,
	0xab, 0x19, 0x49, 0xbc, 0x5a, 0xc7, 0xe9, 0x36, 0xc3, 0x6d, 0x03, 0x0f, 0x0a, 0x74, 0x60, 0x40,
	0x78, 0x02, 0x9e, 0xa7, 0x0a, 0xc7, 0x37, 0x89, 0xa4, 0x59, 0xae, 0xa9, 0x8a, 0x97, 0xb4, 0xb8,
	0x6d, 0x71, 0xaa, 0x0e, 0xc7, 0x60, 0xc7, 0x76, 0x10, 0x92, 0x5f, 0x93, 0x58, 0x45, 0x34, 0xf1,
	0xea, 0x1d, 0xa7, 0xbb, 0x12, 0x6e, 0x59, 0xe8, 0xd8, 0x80, 0xe7, 0x09, 0xf4, 0xc1, 0xa6, 0xad,
	0xc2, 0x49, 0x22, 0x49, 0x9a, 0x7a, 0x40, 0x4b, 0xa0, 0x05, 0x9d, 0x1a, 0x04, 0x5e, 0x02, 0xcf,
	0x16, 0xd8, 0x17, 0xe9, 0xad, 0xeb, 0xdc, 0x5e, 0x20, 0xf3, 0x0c, 0xb0, 0xa0, 0x28, 0xeb, 0xa1,
	0xfc, 0xbe, 0xd1, 0x99, 0x14, 0xf1, 0x27, 0xc3, 0x0a, 0xed, 0x63, 0x5a, 0xf5, 0x3c, 0xba, 0x6f,
	0x54, 0xdc, 0x50, 0xf6, 0x74, 0xfa, 0xff, 0x4d, 0x74, 0x06, 0xae, 0x0e, 0xbe, 0x07, 0x40, 0xa1,
	0x9b, 0xcb, 0x99, 0xd7, 0xd0, 0x27, 0x5f, 0x31, 0x95, 0x0b, 0x39, 0x83, 0xef, 0x80, 0xc7, 0x63,
	0x3c, 0x25, 0x6c, 0xc1, 0x95, 0xac, 0x6a, 0xdf, 0x9d, 0x02, 0xaf, 0x1a, 0xbf, 0x06, 0x1b, 0xa5,
	0xb2, 0xcc, 0x65, 0x4d, 0xbb, 0xb7, 0x8a, 0x72, 0x99, 0xc9, 0x18, 0x6c, 0x95, 0xc4, 0x47, 0x79,
	0xb4, 0xfe, 0x2a, 0x0f, 0x58, 0x68, 0xed, 0x2c, 0xae, 0xc1, 0x0e, 0x65, 0x31, 0xff, 0x4a, 0xd9,
	0x34, 0xba, 0x7f, 0x9a, 0x8a, 0xdc, 0x2a, 0xaf, 0xd9, 0x59, 0xea, 0xb6, 0x7a, 0xc7, 0x68, 0xe1,
	0xaa, 0xa1, 0xea, 0xd3, 0xbe, 0x7f, 0xa8, 0xb9, 0x36, 0xdc, 0x2a, 0x3d, 0xed, 0x6a, 0xde, 0x8b,
	0xcf, 0xd5, 0x94, 0x3f, 0xed, 0xb5, 0xf2, 0x2f, 0xbd, 0x4a, 0x4f, 0xbb, 0xba, 0xff, 0x19, 0xac,
	0x3d, 0xea, 0xdd, 0x04, 0xf5, 0xe1, 0x68, 0x38, 0x70, 0xff, 0x83, 0xcf, 0xc0, 0xfa, 0x24, 0x3c,
	0x0d, 0x06, 0x51, 0x30, 0x1a, 0x4e, 0x06, 0x97, 0x13, 0xd7, 0x81, 0x10, 0xb4, 0xce, 0xc2, 0x71,
	0x10, 0x99, 0x7a, 0xff, 0x7c, 0xe8, 0xd6, 0xe0, 0x2e, 0xd8, 0x0c, 0x3e, 0x8e, 0x2e, 0xde, 0x47,
	0x8f, 0xc9, 0x4b, 0xb0, 0x01, 0x6a, 0xfd, 0x23, 0xb7, 0xfe, 0xa1, 0xde, 0x5c, 0x76, 0x9b, 0xfd,
	0x93, 0x1f, 0xdf, 0x7f, 0xfe, 0x6a, 0xd4, 0x5c, 0x07, 0xbc, 0xa4, 0xdc, 0x9c, 0x5f, 0x48, 0x7e,
	0x7b, 0xb7, 0x78, 0x94, 0xfe, 0xc6, 0xe8, 0x7e, 0xd3, 0xc7, 0xf9, 0xa2, 0x8f, 0x9d, 0xab, 0x86,
	0xde, 0xf8, 0xa3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xf4, 0xfc, 0x1d, 0xfc, 0x04, 0x00,
	0x00,
}
