// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/admin/v3alpha/certs.proto

package envoy_admin_v3alpha

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Certificates struct {
	Certificates         []*Certificate `protobuf:"bytes,1,rep,name=certificates,proto3" json:"certificates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Certificates) Reset()         { *m = Certificates{} }
func (m *Certificates) String() string { return proto.CompactTextString(m) }
func (*Certificates) ProtoMessage()    {}
func (*Certificates) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a6452563dffe0c, []int{0}
}

func (m *Certificates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Certificates.Unmarshal(m, b)
}
func (m *Certificates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Certificates.Marshal(b, m, deterministic)
}
func (m *Certificates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Certificates.Merge(m, src)
}
func (m *Certificates) XXX_Size() int {
	return xxx_messageInfo_Certificates.Size(m)
}
func (m *Certificates) XXX_DiscardUnknown() {
	xxx_messageInfo_Certificates.DiscardUnknown(m)
}

var xxx_messageInfo_Certificates proto.InternalMessageInfo

func (m *Certificates) GetCertificates() []*Certificate {
	if m != nil {
		return m.Certificates
	}
	return nil
}

type Certificate struct {
	CaCert               []*CertificateDetails `protobuf:"bytes,1,rep,name=ca_cert,json=caCert,proto3" json:"ca_cert,omitempty"`
	CertChain            []*CertificateDetails `protobuf:"bytes,2,rep,name=cert_chain,json=certChain,proto3" json:"cert_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Certificate) Reset()         { *m = Certificate{} }
func (m *Certificate) String() string { return proto.CompactTextString(m) }
func (*Certificate) ProtoMessage()    {}
func (*Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a6452563dffe0c, []int{1}
}

func (m *Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Certificate.Unmarshal(m, b)
}
func (m *Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Certificate.Marshal(b, m, deterministic)
}
func (m *Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Certificate.Merge(m, src)
}
func (m *Certificate) XXX_Size() int {
	return xxx_messageInfo_Certificate.Size(m)
}
func (m *Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_Certificate proto.InternalMessageInfo

func (m *Certificate) GetCaCert() []*CertificateDetails {
	if m != nil {
		return m.CaCert
	}
	return nil
}

func (m *Certificate) GetCertChain() []*CertificateDetails {
	if m != nil {
		return m.CertChain
	}
	return nil
}

type CertificateDetails struct {
	Path                 string                  `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	SerialNumber         string                  `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	SubjectAltNames      []*SubjectAlternateName `protobuf:"bytes,3,rep,name=subject_alt_names,json=subjectAltNames,proto3" json:"subject_alt_names,omitempty"`
	DaysUntilExpiration  uint64                  `protobuf:"varint,4,opt,name=days_until_expiration,json=daysUntilExpiration,proto3" json:"days_until_expiration,omitempty"`
	ValidFrom            *timestamp.Timestamp    `protobuf:"bytes,5,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ExpirationTime       *timestamp.Timestamp    `protobuf:"bytes,6,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CertificateDetails) Reset()         { *m = CertificateDetails{} }
func (m *CertificateDetails) String() string { return proto.CompactTextString(m) }
func (*CertificateDetails) ProtoMessage()    {}
func (*CertificateDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a6452563dffe0c, []int{2}
}

func (m *CertificateDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateDetails.Unmarshal(m, b)
}
func (m *CertificateDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateDetails.Marshal(b, m, deterministic)
}
func (m *CertificateDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateDetails.Merge(m, src)
}
func (m *CertificateDetails) XXX_Size() int {
	return xxx_messageInfo_CertificateDetails.Size(m)
}
func (m *CertificateDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateDetails.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateDetails proto.InternalMessageInfo

func (m *CertificateDetails) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CertificateDetails) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *CertificateDetails) GetSubjectAltNames() []*SubjectAlternateName {
	if m != nil {
		return m.SubjectAltNames
	}
	return nil
}

func (m *CertificateDetails) GetDaysUntilExpiration() uint64 {
	if m != nil {
		return m.DaysUntilExpiration
	}
	return 0
}

func (m *CertificateDetails) GetValidFrom() *timestamp.Timestamp {
	if m != nil {
		return m.ValidFrom
	}
	return nil
}

func (m *CertificateDetails) GetExpirationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationTime
	}
	return nil
}

type SubjectAlternateName struct {
	// Types that are valid to be assigned to Name:
	//	*SubjectAlternateName_Dns
	//	*SubjectAlternateName_Uri
	Name                 isSubjectAlternateName_Name `protobuf_oneof:"name"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SubjectAlternateName) Reset()         { *m = SubjectAlternateName{} }
func (m *SubjectAlternateName) String() string { return proto.CompactTextString(m) }
func (*SubjectAlternateName) ProtoMessage()    {}
func (*SubjectAlternateName) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a6452563dffe0c, []int{3}
}

func (m *SubjectAlternateName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubjectAlternateName.Unmarshal(m, b)
}
func (m *SubjectAlternateName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubjectAlternateName.Marshal(b, m, deterministic)
}
func (m *SubjectAlternateName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubjectAlternateName.Merge(m, src)
}
func (m *SubjectAlternateName) XXX_Size() int {
	return xxx_messageInfo_SubjectAlternateName.Size(m)
}
func (m *SubjectAlternateName) XXX_DiscardUnknown() {
	xxx_messageInfo_SubjectAlternateName.DiscardUnknown(m)
}

var xxx_messageInfo_SubjectAlternateName proto.InternalMessageInfo

type isSubjectAlternateName_Name interface {
	isSubjectAlternateName_Name()
}

type SubjectAlternateName_Dns struct {
	Dns string `protobuf:"bytes,1,opt,name=dns,proto3,oneof"`
}

type SubjectAlternateName_Uri struct {
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3,oneof"`
}

func (*SubjectAlternateName_Dns) isSubjectAlternateName_Name() {}

func (*SubjectAlternateName_Uri) isSubjectAlternateName_Name() {}

func (m *SubjectAlternateName) GetName() isSubjectAlternateName_Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SubjectAlternateName) GetDns() string {
	if x, ok := m.GetName().(*SubjectAlternateName_Dns); ok {
		return x.Dns
	}
	return ""
}

func (m *SubjectAlternateName) GetUri() string {
	if x, ok := m.GetName().(*SubjectAlternateName_Uri); ok {
		return x.Uri
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SubjectAlternateName) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SubjectAlternateName_Dns)(nil),
		(*SubjectAlternateName_Uri)(nil),
	}
}

func init() {
	proto.RegisterType((*Certificates)(nil), "envoy.admin.v3alpha.Certificates")
	proto.RegisterType((*Certificate)(nil), "envoy.admin.v3alpha.Certificate")
	proto.RegisterType((*CertificateDetails)(nil), "envoy.admin.v3alpha.CertificateDetails")
	proto.RegisterType((*SubjectAlternateName)(nil), "envoy.admin.v3alpha.SubjectAlternateName")
}

func init() { proto.RegisterFile("envoy/admin/v3alpha/certs.proto", fileDescriptor_67a6452563dffe0c) }

var fileDescriptor_67a6452563dffe0c = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x49, 0x08, 0xca, 0x24, 0x50, 0xb1, 0x05, 0xc9, 0xea, 0xa5, 0x26, 0x1c, 0x08, 0x17,
	0x5b, 0xa4, 0x27, 0x6e, 0x90, 0x94, 0x88, 0x53, 0x55, 0x99, 0xf6, 0xbc, 0x9a, 0x38, 0x9b, 0x66,
	0xd1, 0xfe, 0x58, 0xbb, 0xeb, 0xa8, 0x79, 0x12, 0x5e, 0x8d, 0xc7, 0x41, 0xb3, 0xee, 0x4f, 0x10,
	0x91, 0x2a, 0x6e, 0x9e, 0xef, 0x67, 0x3c, 0xfe, 0xfc, 0xc1, 0xa9, 0x30, 0x5b, 0xbb, 0x2b, 0x70,
	0xa5, 0xa5, 0x29, 0xb6, 0x67, 0xa8, 0xea, 0x0d, 0x16, 0x95, 0x70, 0xc1, 0xe7, 0xb5, 0xb3, 0xc1,
	0xb2, 0xe3, 0x28, 0xc8, 0xa3, 0x20, 0xbf, 0x13, 0x9c, 0x9c, 0xde, 0x58, 0x7b, 0xa3, 0x44, 0x11,
	0x25, 0xcb, 0x66, 0x5d, 0x04, 0xa9, 0x85, 0x0f, 0xa8, 0xeb, 0xd6, 0x35, 0xbe, 0x82, 0xd1, 0x5c,
	0xb8, 0x20, 0xd7, 0xb2, 0xc2, 0x20, 0x3c, 0x3b, 0x87, 0x51, 0xb5, 0x37, 0xa7, 0x49, 0xd6, 0x9d,
	0x0c, 0xa7, 0x59, 0x7e, 0x60, 0x79, 0xbe, 0x67, 0x2c, 0xff, 0x72, 0x8d, 0x7f, 0x25, 0x30, 0xdc,
	0x63, 0xd9, 0x17, 0x78, 0x51, 0x21, 0x27, 0xc9, 0xdd, 0xc2, 0x0f, 0x4f, 0x2d, 0x3c, 0x17, 0x01,
	0xa5, 0xf2, 0x65, 0xbf, 0x42, 0x42, 0xd9, 0x02, 0x80, 0xec, 0xbc, 0xda, 0xa0, 0x34, 0x69, 0xe7,
	0xff, 0x96, 0x0c, 0xc8, 0x3a, 0x27, 0xe7, 0xf8, 0x77, 0x07, 0xd8, 0xbf, 0x0a, 0xc6, 0xa0, 0x57,
	0x63, 0xd8, 0xa4, 0x49, 0x96, 0x4c, 0x06, 0x65, 0x7c, 0x66, 0xef, 0xe1, 0xa5, 0x17, 0x4e, 0xa2,
	0xe2, 0xa6, 0xd1, 0x4b, 0xe1, 0xd2, 0x4e, 0x24, 0x47, 0x2d, 0x78, 0x11, 0x31, 0x76, 0x0d, 0xaf,
	0x7d, 0xb3, 0xfc, 0x29, 0xaa, 0xc0, 0x51, 0x05, 0x6e, 0x50, 0x0b, 0x9f, 0x76, 0xe3, 0x79, 0x1f,
	0x0f, 0x9e, 0xf7, 0xa3, 0x55, 0x7f, 0x55, 0x41, 0x38, 0x83, 0x41, 0x5c, 0xa0, 0x16, 0xe5, 0x91,
	0x7f, 0x40, 0x69, 0xf6, 0x6c, 0x0a, 0x6f, 0x57, 0xb8, 0xf3, 0xbc, 0x31, 0x41, 0x2a, 0x2e, 0x6e,
	0x6b, 0xe9, 0x30, 0x48, 0x6b, 0xd2, 0x5e, 0x96, 0x4c, 0x7a, 0xe5, 0x31, 0x91, 0xd7, 0xc4, 0x7d,
	0x7b, 0xa0, 0xd8, 0x67, 0x80, 0x2d, 0x2a, 0xb9, 0xe2, 0x6b, 0x67, 0x75, 0xfa, 0x3c, 0x4b, 0x26,
	0xc3, 0xe9, 0x49, 0xde, 0x16, 0x20, 0xbf, 0x2f, 0x40, 0x7e, 0x75, 0x5f, 0x80, 0x72, 0x10, 0xd5,
	0x0b, 0x67, 0x35, 0x9b, 0xc3, 0xd1, 0xe3, 0x3b, 0x38, 0x75, 0x24, 0xed, 0x3f, 0xe9, 0x7f, 0xf5,
	0x68, 0x21, 0x70, 0xbc, 0x80, 0x37, 0x87, 0x3e, 0x8e, 0x31, 0xe8, 0xae, 0x8c, 0x6f, 0xa3, 0xfd,
	0xfe, 0xac, 0xa4, 0x81, 0xb0, 0xc6, 0xc9, 0x36, 0x51, 0xc2, 0x1a, 0x27, 0x67, 0x7d, 0xe8, 0x51,
	0x7c, 0xb3, 0x4f, 0xf0, 0x4e, 0xda, 0x36, 0xbb, 0xda, 0xd9, 0xdb, 0xdd, 0xa1, 0x18, 0x67, 0x40,
	0x3f, 0xd1, 0x5f, 0xd2, 0x55, 0x97, 0xc9, 0xb2, 0x1f, 0xcf, 0x3b, 0xfb, 0x13, 0x00, 0x00, 0xff,
	0xff, 0xb5, 0x31, 0xb4, 0xdb, 0x25, 0x03, 0x00, 0x00,
}
