// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/api/v2/auth/secret.proto

package envoy_api_v2_auth

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GenericSecret struct {
	Secret               *core.DataSource `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GenericSecret) Reset()         { *m = GenericSecret{} }
func (m *GenericSecret) String() string { return proto.CompactTextString(m) }
func (*GenericSecret) ProtoMessage()    {}
func (*GenericSecret) Descriptor() ([]byte, []int) {
	return fileDescriptor_f56e1466bdee633f, []int{0}
}

func (m *GenericSecret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericSecret.Unmarshal(m, b)
}
func (m *GenericSecret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericSecret.Marshal(b, m, deterministic)
}
func (m *GenericSecret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericSecret.Merge(m, src)
}
func (m *GenericSecret) XXX_Size() int {
	return xxx_messageInfo_GenericSecret.Size(m)
}
func (m *GenericSecret) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericSecret.DiscardUnknown(m)
}

var xxx_messageInfo_GenericSecret proto.InternalMessageInfo

func (m *GenericSecret) GetSecret() *core.DataSource {
	if m != nil {
		return m.Secret
	}
	return nil
}

type SdsSecretConfig struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SdsConfig            *core.ConfigSource `protobuf:"bytes,2,opt,name=sds_config,json=sdsConfig,proto3" json:"sds_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdsSecretConfig) Reset()         { *m = SdsSecretConfig{} }
func (m *SdsSecretConfig) String() string { return proto.CompactTextString(m) }
func (*SdsSecretConfig) ProtoMessage()    {}
func (*SdsSecretConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f56e1466bdee633f, []int{1}
}

func (m *SdsSecretConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdsSecretConfig.Unmarshal(m, b)
}
func (m *SdsSecretConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdsSecretConfig.Marshal(b, m, deterministic)
}
func (m *SdsSecretConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdsSecretConfig.Merge(m, src)
}
func (m *SdsSecretConfig) XXX_Size() int {
	return xxx_messageInfo_SdsSecretConfig.Size(m)
}
func (m *SdsSecretConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SdsSecretConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SdsSecretConfig proto.InternalMessageInfo

func (m *SdsSecretConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdsSecretConfig) GetSdsConfig() *core.ConfigSource {
	if m != nil {
		return m.SdsConfig
	}
	return nil
}

type Secret struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*Secret_TlsCertificate
	//	*Secret_SessionTicketKeys
	//	*Secret_ValidationContext
	//	*Secret_GenericSecret
	Type                 isSecret_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Secret) Reset()         { *m = Secret{} }
func (m *Secret) String() string { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()    {}
func (*Secret) Descriptor() ([]byte, []int) {
	return fileDescriptor_f56e1466bdee633f, []int{2}
}

func (m *Secret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Secret.Unmarshal(m, b)
}
func (m *Secret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Secret.Marshal(b, m, deterministic)
}
func (m *Secret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Secret.Merge(m, src)
}
func (m *Secret) XXX_Size() int {
	return xxx_messageInfo_Secret.Size(m)
}
func (m *Secret) XXX_DiscardUnknown() {
	xxx_messageInfo_Secret.DiscardUnknown(m)
}

var xxx_messageInfo_Secret proto.InternalMessageInfo

func (m *Secret) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isSecret_Type interface {
	isSecret_Type()
}

type Secret_TlsCertificate struct {
	TlsCertificate *TlsCertificate `protobuf:"bytes,2,opt,name=tls_certificate,json=tlsCertificate,proto3,oneof"`
}

type Secret_SessionTicketKeys struct {
	SessionTicketKeys *TlsSessionTicketKeys `protobuf:"bytes,3,opt,name=session_ticket_keys,json=sessionTicketKeys,proto3,oneof"`
}

type Secret_ValidationContext struct {
	ValidationContext *CertificateValidationContext `protobuf:"bytes,4,opt,name=validation_context,json=validationContext,proto3,oneof"`
}

type Secret_GenericSecret struct {
	GenericSecret *GenericSecret `protobuf:"bytes,5,opt,name=generic_secret,json=genericSecret,proto3,oneof"`
}

func (*Secret_TlsCertificate) isSecret_Type() {}

func (*Secret_SessionTicketKeys) isSecret_Type() {}

func (*Secret_ValidationContext) isSecret_Type() {}

func (*Secret_GenericSecret) isSecret_Type() {}

func (m *Secret) GetType() isSecret_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Secret) GetTlsCertificate() *TlsCertificate {
	if x, ok := m.GetType().(*Secret_TlsCertificate); ok {
		return x.TlsCertificate
	}
	return nil
}

func (m *Secret) GetSessionTicketKeys() *TlsSessionTicketKeys {
	if x, ok := m.GetType().(*Secret_SessionTicketKeys); ok {
		return x.SessionTicketKeys
	}
	return nil
}

func (m *Secret) GetValidationContext() *CertificateValidationContext {
	if x, ok := m.GetType().(*Secret_ValidationContext); ok {
		return x.ValidationContext
	}
	return nil
}

func (m *Secret) GetGenericSecret() *GenericSecret {
	if x, ok := m.GetType().(*Secret_GenericSecret); ok {
		return x.GenericSecret
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Secret) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Secret_TlsCertificate)(nil),
		(*Secret_SessionTicketKeys)(nil),
		(*Secret_ValidationContext)(nil),
		(*Secret_GenericSecret)(nil),
	}
}

func init() {
	proto.RegisterType((*GenericSecret)(nil), "envoy.api.v2.auth.GenericSecret")
	proto.RegisterType((*SdsSecretConfig)(nil), "envoy.api.v2.auth.SdsSecretConfig")
	proto.RegisterType((*Secret)(nil), "envoy.api.v2.auth.Secret")
}

func init() { proto.RegisterFile("envoy/api/v2/auth/secret.proto", fileDescriptor_f56e1466bdee633f) }

var fileDescriptor_f56e1466bdee633f = []byte{
	// 485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x4d, 0x42, 0x6a, 0xa9, 0x5b, 0xb5, 0xa5, 0xcb, 0x25, 0xaa, 0x68, 0x1b, 0x22, 0x21, 0x40,
	0x48, 0x6b, 0x29, 0x3d, 0xc3, 0x21, 0x41, 0x22, 0x08, 0x84, 0x2a, 0xa7, 0x42, 0xe2, 0x64, 0xb6,
	0xf6, 0x34, 0xac, 0x9a, 0xec, 0x5a, 0x3b, 0x13, 0x2b, 0xbe, 0x71, 0xe7, 0xc0, 0x95, 0x0f, 0xe0,
	0x1f, 0x40, 0x7c, 0x01, 0x57, 0x7e, 0x85, 0x23, 0x07, 0x84, 0xbc, 0xeb, 0x40, 0x53, 0xfb, 0xb6,
	0x9a, 0x37, 0xef, 0xbd, 0x79, 0x3b, 0xc3, 0x8e, 0x41, 0xe7, 0xa6, 0x08, 0x65, 0xa6, 0xc2, 0x7c,
	0x18, 0xca, 0x25, 0xbd, 0x0f, 0x11, 0x12, 0x0b, 0x24, 0x32, 0x6b, 0xc8, 0xf0, 0x03, 0x87, 0x0b,
	0x99, 0x29, 0x91, 0x0f, 0x45, 0x89, 0x1f, 0x36, 0x50, 0x12, 0xb3, 0x58, 0x18, 0xed, 0x29, 0x87,
	0x77, 0x37, 0xf0, 0xc4, 0x58, 0x08, 0x2f, 0x24, 0x42, 0x85, 0xde, 0xaf, 0xa3, 0x89, 0xd1, 0x97,
	0x6a, 0x16, 0xa3, 0x59, 0xda, 0x64, 0xdd, 0x76, 0xbc, 0x4c, 0x33, 0x19, 0x4a, 0xad, 0x0d, 0x49,
	0x52, 0x46, 0x63, 0xb8, 0x50, 0x33, 0x2b, 0x69, 0x8d, 0xf7, 0x6b, 0x38, 0x82, 0x46, 0x45, 0x2a,
	0x5f, 0x77, 0x1c, 0xd5, 0x3b, 0x48, 0xd2, 0x12, 0x3d, 0x3c, 0x78, 0xcd, 0x76, 0x9f, 0x83, 0x06,
	0xab, 0x92, 0xa9, 0xcb, 0xcb, 0x9f, 0xb0, 0xc0, 0x27, 0xef, 0xb5, 0xfb, 0xed, 0x87, 0x3b, 0xc3,
	0x23, 0xb1, 0x11, 0xbd, 0x9c, 0x54, 0x3c, 0x93, 0x24, 0xa7, 0x6e, 0xcc, 0x51, 0xf0, 0xed, 0xeb,
	0xc7, 0x2f, 0x9d, 0x76, 0x54, 0x91, 0x06, 0xc0, 0xf6, 0xa7, 0x29, 0x7a, 0xad, 0xb1, 0x0b, 0xc4,
	0x39, 0xeb, 0x6a, 0xb9, 0x00, 0xa7, 0xb7, 0x1d, 0xb9, 0x37, 0x7f, 0xca, 0x18, 0xa6, 0x18, 0xfb,
	0xc8, 0xbd, 0x8e, 0x73, 0x3a, 0x69, 0x70, 0xf2, 0x12, 0xde, 0x2b, 0xda, 0xc6, 0x14, 0x7d, 0x61,
	0xf0, 0xbb, 0xc3, 0x82, 0x6a, 0xe0, 0x26, 0xf9, 0x57, 0x6c, 0x9f, 0xe6, 0x18, 0x27, 0x60, 0x49,
	0x5d, 0xaa, 0x44, 0x12, 0x54, 0x1e, 0xf7, 0x44, 0x6d, 0x91, 0xe2, 0x7c, 0x8e, 0xe3, 0xff, 0x8d,
	0x93, 0x56, 0xb4, 0x47, 0x1b, 0x15, 0xfe, 0x96, 0xdd, 0x41, 0x40, 0x54, 0x46, 0xc7, 0xa4, 0x92,
	0x2b, 0xa0, 0xf8, 0x0a, 0x0a, 0xec, 0xdd, 0x72, 0x8a, 0x0f, 0x9a, 0x15, 0xa7, 0x9e, 0x70, 0xee,
	0xfa, 0x5f, 0x42, 0x81, 0x93, 0x56, 0x74, 0x80, 0x37, 0x8b, 0xfc, 0x1d, 0xe3, 0xb9, 0x9c, 0xab,
	0xd4, 0xad, 0xa6, 0xfc, 0x0e, 0x82, 0x15, 0xf5, 0xba, 0x4e, 0x39, 0x6c, 0x50, 0xbe, 0x36, 0xd6,
	0x9b, 0x7f, 0xbc, 0xb1, 0xa7, 0x95, 0x0e, 0xf9, 0xcd, 0x22, 0x7f, 0xc1, 0xf6, 0x66, 0x7e, 0xc1,
	0x71, 0xb5, 0xd7, 0x2d, 0xa7, 0xde, 0x6f, 0x50, 0xdf, 0xb8, 0x84, 0x49, 0x2b, 0xda, 0x9d, 0x5d,
	0x2f, 0x8c, 0x02, 0xd6, 0xa5, 0x22, 0x83, 0x91, 0xfa, 0xf5, 0xf9, 0xcf, 0xa7, 0xad, 0xc7, 0xfc,
	0x91, 0x57, 0x80, 0x15, 0x95, 0x37, 0x67, 0x34, 0x0a, 0xb2, 0x52, 0x63, 0x66, 0x2c, 0xc5, 0x68,
	0xca, 0x8c, 0x28, 0x68, 0x8e, 0x22, 0x3f, 0xfd, 0xfe, 0xe1, 0xc7, 0xcf, 0xa0, 0x73, 0xbb, 0xcd,
	0x4e, 0x94, 0xf1, 0xbe, 0x99, 0x35, 0xab, 0xa2, 0x3e, 0xc2, 0x68, 0xc7, 0x7b, 0x9d, 0x95, 0xc7,
	0x79, 0xd6, 0xbe, 0x08, 0xdc, 0x95, 0x9e, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x0c, 0x79,
	0xb5, 0xa0, 0x03, 0x00, 0x00,
}
