// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/api/v2/cluster/circuit_breaker.proto

package envoy_api_v2_cluster

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	_type "github.com/envoyproxy/go-control-plane/envoy/type"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CircuitBreakers struct {
	Thresholds           []*CircuitBreakers_Thresholds `protobuf:"bytes,1,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CircuitBreakers) Reset()         { *m = CircuitBreakers{} }
func (m *CircuitBreakers) String() string { return proto.CompactTextString(m) }
func (*CircuitBreakers) ProtoMessage()    {}
func (*CircuitBreakers) Descriptor() ([]byte, []int) {
	return fileDescriptor_89bc8d4e21efdd79, []int{0}
}

func (m *CircuitBreakers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CircuitBreakers.Unmarshal(m, b)
}
func (m *CircuitBreakers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CircuitBreakers.Marshal(b, m, deterministic)
}
func (m *CircuitBreakers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CircuitBreakers.Merge(m, src)
}
func (m *CircuitBreakers) XXX_Size() int {
	return xxx_messageInfo_CircuitBreakers.Size(m)
}
func (m *CircuitBreakers) XXX_DiscardUnknown() {
	xxx_messageInfo_CircuitBreakers.DiscardUnknown(m)
}

var xxx_messageInfo_CircuitBreakers proto.InternalMessageInfo

func (m *CircuitBreakers) GetThresholds() []*CircuitBreakers_Thresholds {
	if m != nil {
		return m.Thresholds
	}
	return nil
}

type CircuitBreakers_Thresholds struct {
	Priority             core.RoutingPriority                    `protobuf:"varint,1,opt,name=priority,proto3,enum=envoy.api.v2.core.RoutingPriority" json:"priority,omitempty"`
	MaxConnections       *wrappers.UInt32Value                   `protobuf:"bytes,2,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	MaxPendingRequests   *wrappers.UInt32Value                   `protobuf:"bytes,3,opt,name=max_pending_requests,json=maxPendingRequests,proto3" json:"max_pending_requests,omitempty"`
	MaxRequests          *wrappers.UInt32Value                   `protobuf:"bytes,4,opt,name=max_requests,json=maxRequests,proto3" json:"max_requests,omitempty"`
	MaxRetries           *wrappers.UInt32Value                   `protobuf:"bytes,5,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	RetryBudget          *CircuitBreakers_Thresholds_RetryBudget `protobuf:"bytes,8,opt,name=retry_budget,json=retryBudget,proto3" json:"retry_budget,omitempty"`
	TrackRemaining       bool                                    `protobuf:"varint,6,opt,name=track_remaining,json=trackRemaining,proto3" json:"track_remaining,omitempty"`
	MaxConnectionPools   *wrappers.UInt32Value                   `protobuf:"bytes,7,opt,name=max_connection_pools,json=maxConnectionPools,proto3" json:"max_connection_pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *CircuitBreakers_Thresholds) Reset()         { *m = CircuitBreakers_Thresholds{} }
func (m *CircuitBreakers_Thresholds) String() string { return proto.CompactTextString(m) }
func (*CircuitBreakers_Thresholds) ProtoMessage()    {}
func (*CircuitBreakers_Thresholds) Descriptor() ([]byte, []int) {
	return fileDescriptor_89bc8d4e21efdd79, []int{0, 0}
}

func (m *CircuitBreakers_Thresholds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CircuitBreakers_Thresholds.Unmarshal(m, b)
}
func (m *CircuitBreakers_Thresholds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CircuitBreakers_Thresholds.Marshal(b, m, deterministic)
}
func (m *CircuitBreakers_Thresholds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CircuitBreakers_Thresholds.Merge(m, src)
}
func (m *CircuitBreakers_Thresholds) XXX_Size() int {
	return xxx_messageInfo_CircuitBreakers_Thresholds.Size(m)
}
func (m *CircuitBreakers_Thresholds) XXX_DiscardUnknown() {
	xxx_messageInfo_CircuitBreakers_Thresholds.DiscardUnknown(m)
}

var xxx_messageInfo_CircuitBreakers_Thresholds proto.InternalMessageInfo

func (m *CircuitBreakers_Thresholds) GetPriority() core.RoutingPriority {
	if m != nil {
		return m.Priority
	}
	return core.RoutingPriority_DEFAULT
}

func (m *CircuitBreakers_Thresholds) GetMaxConnections() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxConnections
	}
	return nil
}

func (m *CircuitBreakers_Thresholds) GetMaxPendingRequests() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxPendingRequests
	}
	return nil
}

func (m *CircuitBreakers_Thresholds) GetMaxRequests() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxRequests
	}
	return nil
}

func (m *CircuitBreakers_Thresholds) GetMaxRetries() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxRetries
	}
	return nil
}

func (m *CircuitBreakers_Thresholds) GetRetryBudget() *CircuitBreakers_Thresholds_RetryBudget {
	if m != nil {
		return m.RetryBudget
	}
	return nil
}

func (m *CircuitBreakers_Thresholds) GetTrackRemaining() bool {
	if m != nil {
		return m.TrackRemaining
	}
	return false
}

func (m *CircuitBreakers_Thresholds) GetMaxConnectionPools() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxConnectionPools
	}
	return nil
}

type CircuitBreakers_Thresholds_RetryBudget struct {
	BudgetPercent        *_type.Percent        `protobuf:"bytes,1,opt,name=budget_percent,json=budgetPercent,proto3" json:"budget_percent,omitempty"`
	MinRetryConcurrency  *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=min_retry_concurrency,json=minRetryConcurrency,proto3" json:"min_retry_concurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CircuitBreakers_Thresholds_RetryBudget) Reset() {
	*m = CircuitBreakers_Thresholds_RetryBudget{}
}
func (m *CircuitBreakers_Thresholds_RetryBudget) String() string { return proto.CompactTextString(m) }
func (*CircuitBreakers_Thresholds_RetryBudget) ProtoMessage()    {}
func (*CircuitBreakers_Thresholds_RetryBudget) Descriptor() ([]byte, []int) {
	return fileDescriptor_89bc8d4e21efdd79, []int{0, 0, 0}
}

func (m *CircuitBreakers_Thresholds_RetryBudget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CircuitBreakers_Thresholds_RetryBudget.Unmarshal(m, b)
}
func (m *CircuitBreakers_Thresholds_RetryBudget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CircuitBreakers_Thresholds_RetryBudget.Marshal(b, m, deterministic)
}
func (m *CircuitBreakers_Thresholds_RetryBudget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CircuitBreakers_Thresholds_RetryBudget.Merge(m, src)
}
func (m *CircuitBreakers_Thresholds_RetryBudget) XXX_Size() int {
	return xxx_messageInfo_CircuitBreakers_Thresholds_RetryBudget.Size(m)
}
func (m *CircuitBreakers_Thresholds_RetryBudget) XXX_DiscardUnknown() {
	xxx_messageInfo_CircuitBreakers_Thresholds_RetryBudget.DiscardUnknown(m)
}

var xxx_messageInfo_CircuitBreakers_Thresholds_RetryBudget proto.InternalMessageInfo

func (m *CircuitBreakers_Thresholds_RetryBudget) GetBudgetPercent() *_type.Percent {
	if m != nil {
		return m.BudgetPercent
	}
	return nil
}

func (m *CircuitBreakers_Thresholds_RetryBudget) GetMinRetryConcurrency() *wrappers.UInt32Value {
	if m != nil {
		return m.MinRetryConcurrency
	}
	return nil
}

func init() {
	proto.RegisterType((*CircuitBreakers)(nil), "envoy.api.v2.cluster.CircuitBreakers")
	proto.RegisterType((*CircuitBreakers_Thresholds)(nil), "envoy.api.v2.cluster.CircuitBreakers.Thresholds")
	proto.RegisterType((*CircuitBreakers_Thresholds_RetryBudget)(nil), "envoy.api.v2.cluster.CircuitBreakers.Thresholds.RetryBudget")
}

func init() {
	proto.RegisterFile("envoy/api/v2/cluster/circuit_breaker.proto", fileDescriptor_89bc8d4e21efdd79)
}

var fileDescriptor_89bc8d4e21efdd79 = []byte{
	// 585 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x4f, 0x6f, 0xd3, 0x3e,
	0x1c, 0xc6, 0x95, 0xee, 0xd7, 0xfe, 0x2a, 0x67, 0xb4, 0xc8, 0x1d, 0x10, 0x55, 0xd3, 0x54, 0xf5,
	0x42, 0xc5, 0xc1, 0x41, 0xe9, 0x0d, 0x81, 0x10, 0xa9, 0x26, 0xc1, 0x65, 0x8a, 0x02, 0xec, 0x1a,
	0xb9, 0xa9, 0x97, 0x5a, 0x4b, 0x6c, 0xe3, 0x38, 0xa5, 0xb9, 0xf2, 0x06, 0x10, 0x37, 0x24, 0xde,
	0x01, 0x6f, 0x85, 0xd7, 0xc1, 0x85, 0x23, 0x47, 0x0e, 0x08, 0xc5, 0x4e, 0x9a, 0x6d, 0x1a, 0x52,
	0xb9, 0xc5, 0x79, 0x9e, 0xe7, 0xa3, 0xef, 0x1f, 0x1b, 0x3c, 0x22, 0x6c, 0xc3, 0x4b, 0x17, 0x0b,
	0xea, 0x6e, 0x3c, 0x37, 0x4e, 0x8b, 0x5c, 0x11, 0xe9, 0xc6, 0x54, 0xc6, 0x05, 0x55, 0xd1, 0x52,
	0x12, 0x7c, 0x49, 0x24, 0x12, 0x92, 0x2b, 0x0e, 0x8f, 0xb4, 0x17, 0x61, 0x41, 0xd1, 0xc6, 0x43,
	0xb5, 0x77, 0x7c, 0x7c, 0x9d, 0xc0, 0x25, 0x71, 0x97, 0x38, 0x27, 0x26, 0x33, 0x76, 0x8c, 0xaa,
	0x4a, 0x41, 0x5c, 0x41, 0x64, 0x4c, 0x98, 0xaa, 0x95, 0x93, 0x84, 0xf3, 0x24, 0x25, 0xae, 0x3e,
	0x2d, 0x8b, 0x0b, 0xf7, 0xbd, 0xc4, 0x42, 0x10, 0x99, 0x37, 0x7a, 0xb1, 0x12, 0xd8, 0xc5, 0x8c,
	0x71, 0x85, 0x15, 0xe5, 0x2c, 0x77, 0x33, 0x9a, 0x48, 0xac, 0x1a, 0xf2, 0x83, 0x0d, 0x4e, 0xe9,
	0x0a, 0x2b, 0xe2, 0x36, 0x1f, 0x46, 0x98, 0x7e, 0xeb, 0x81, 0xe1, 0xc2, 0x34, 0xe0, 0x9b, 0xfa,
	0x73, 0x18, 0x00, 0xa0, 0xd6, 0x92, 0xe4, 0x6b, 0x9e, 0xae, 0x72, 0xc7, 0x9a, 0x1c, 0xcc, 0x6c,
	0xef, 0x31, 0xba, 0xad, 0x1f, 0x74, 0x23, 0x8a, 0xde, 0xec, 0x72, 0xe1, 0x15, 0xc6, 0xf8, 0x7b,
	0x17, 0x80, 0x56, 0x82, 0x2f, 0x41, 0x5f, 0x48, 0xca, 0x25, 0x55, 0xa5, 0x63, 0x4d, 0xac, 0xd9,
	0xc0, 0x9b, 0xde, 0xc0, 0x73, 0x49, 0x50, 0xc8, 0x0b, 0x45, 0x59, 0x12, 0xd4, 0x4e, 0xbf, 0xff,
	0xcb, 0xef, 0x7e, 0xb0, 0x3a, 0x77, 0xad, 0x70, 0x97, 0x86, 0xa7, 0x60, 0x98, 0xe1, 0x6d, 0x14,
	0x73, 0xc6, 0x48, 0xac, 0x1b, 0x77, 0x3a, 0x13, 0x6b, 0x66, 0x7b, 0xc7, 0xc8, 0x4c, 0x0c, 0x35,
	0x13, 0x43, 0x6f, 0x5f, 0x31, 0x35, 0xf7, 0xce, 0x71, 0x5a, 0x90, 0x70, 0x90, 0xe1, 0xed, 0xa2,
	0xcd, 0xc0, 0x33, 0x70, 0x54, 0x61, 0x04, 0x61, 0x2b, 0xca, 0x92, 0x48, 0x92, 0x77, 0x05, 0xc9,
	0x55, 0xee, 0x1c, 0xec, 0xc1, 0x82, 0x19, 0xde, 0x06, 0x26, 0x18, 0xd6, 0x39, 0xf8, 0x1c, 0x1c,
	0x56, 0xbc, 0x1d, 0xe7, 0xbf, 0x3d, 0x38, 0x76, 0x86, 0xb7, 0x3b, 0xc0, 0x33, 0x60, 0x1b, 0x80,
	0x92, 0x94, 0xe4, 0x4e, 0x77, 0x8f, 0x3c, 0xd0, 0x79, 0xed, 0x87, 0x11, 0x38, 0xac, 0xa2, 0x65,
	0xb4, 0x2c, 0x56, 0x09, 0x51, 0x4e, 0x5f, 0xe7, 0x9f, 0xfe, 0xeb, 0x0e, 0x51, 0xc5, 0x2b, 0x7d,
	0xcd, 0x08, 0x6d, 0xd9, 0x1e, 0xe0, 0x43, 0x30, 0x54, 0x12, 0xc7, 0x97, 0x91, 0x24, 0x19, 0xa6,
	0x8c, 0xb2, 0xc4, 0xe9, 0x4d, 0xac, 0x59, 0x3f, 0x1c, 0xe8, 0xdf, 0x61, 0xf3, 0xb7, 0x99, 0x6c,
	0xbb, 0xa0, 0x48, 0x70, 0x9e, 0xe6, 0xce, 0xff, 0x7b, 0x4e, 0xb6, 0xdd, 0x52, 0x50, 0xe5, 0xc6,
	0x5f, 0x2c, 0x60, 0x5f, 0xa9, 0x0a, 0x3e, 0x01, 0x03, 0xd3, 0x63, 0x54, 0x3f, 0x18, 0x7d, 0xa1,
	0x6c, 0x6f, 0x54, 0xf7, 0x5a, 0xbd, 0x25, 0x14, 0x18, 0x29, 0xbc, 0x63, 0xac, 0xf5, 0x11, 0x06,
	0xe0, 0x5e, 0x46, 0x59, 0x64, 0x26, 0x15, 0x73, 0x16, 0x17, 0x52, 0x12, 0x16, 0x97, 0x7b, 0x5d,
	0xa1, 0x51, 0x46, 0x99, 0x2e, 0x64, 0xd1, 0x06, 0xfd, 0x4f, 0xd6, 0xcf, 0xcf, 0xbf, 0x3f, 0x76,
	0x4f, 0xa0, 0x79, 0xe7, 0x28, 0xe6, 0xec, 0x82, 0x26, 0xbb, 0x49, 0x6f, 0xe6, 0x38, 0x15, 0x6b,
	0x0c, 0xa6, 0x94, 0x9b, 0xf2, 0x84, 0xe4, 0xdb, 0xf2, 0xd6, 0xad, 0xf8, 0xa3, 0xeb, 0x6b, 0x09,
	0xaa, 0x1a, 0x02, 0xeb, 0x6b, 0xe7, 0xfe, 0xa9, 0x76, 0xbf, 0x10, 0x14, 0x9d, 0x7b, 0x68, 0x61,
	0xdc, 0x67, 0xaf, 0x7f, 0xfc, 0x4d, 0x58, 0xf6, 0x74, 0xf9, 0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x7f, 0x8b, 0xde, 0x07, 0xbd, 0x04, 0x00, 0x00,
}
