// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/data/dns/v4alpha/dns_table.proto

package envoy_data_dns_v4alpha

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	v4alpha "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v4alpha"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DnsTable struct {
	ExternalRetryCount   uint32                       `protobuf:"varint,1,opt,name=external_retry_count,json=externalRetryCount,proto3" json:"external_retry_count,omitempty"`
	VirtualDomains       []*DnsTable_DnsVirtualDomain `protobuf:"bytes,2,rep,name=virtual_domains,json=virtualDomains,proto3" json:"virtual_domains,omitempty"`
	KnownSuffixes        []*v4alpha.StringMatcher     `protobuf:"bytes,3,rep,name=known_suffixes,json=knownSuffixes,proto3" json:"known_suffixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DnsTable) Reset()         { *m = DnsTable{} }
func (m *DnsTable) String() string { return proto.CompactTextString(m) }
func (*DnsTable) ProtoMessage()    {}
func (*DnsTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_976389b90f744445, []int{0}
}

func (m *DnsTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnsTable.Unmarshal(m, b)
}
func (m *DnsTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnsTable.Marshal(b, m, deterministic)
}
func (m *DnsTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnsTable.Merge(m, src)
}
func (m *DnsTable) XXX_Size() int {
	return xxx_messageInfo_DnsTable.Size(m)
}
func (m *DnsTable) XXX_DiscardUnknown() {
	xxx_messageInfo_DnsTable.DiscardUnknown(m)
}

var xxx_messageInfo_DnsTable proto.InternalMessageInfo

func (m *DnsTable) GetExternalRetryCount() uint32 {
	if m != nil {
		return m.ExternalRetryCount
	}
	return 0
}

func (m *DnsTable) GetVirtualDomains() []*DnsTable_DnsVirtualDomain {
	if m != nil {
		return m.VirtualDomains
	}
	return nil
}

func (m *DnsTable) GetKnownSuffixes() []*v4alpha.StringMatcher {
	if m != nil {
		return m.KnownSuffixes
	}
	return nil
}

type DnsTable_AddressList struct {
	Address              []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DnsTable_AddressList) Reset()         { *m = DnsTable_AddressList{} }
func (m *DnsTable_AddressList) String() string { return proto.CompactTextString(m) }
func (*DnsTable_AddressList) ProtoMessage()    {}
func (*DnsTable_AddressList) Descriptor() ([]byte, []int) {
	return fileDescriptor_976389b90f744445, []int{0, 0}
}

func (m *DnsTable_AddressList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnsTable_AddressList.Unmarshal(m, b)
}
func (m *DnsTable_AddressList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnsTable_AddressList.Marshal(b, m, deterministic)
}
func (m *DnsTable_AddressList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnsTable_AddressList.Merge(m, src)
}
func (m *DnsTable_AddressList) XXX_Size() int {
	return xxx_messageInfo_DnsTable_AddressList.Size(m)
}
func (m *DnsTable_AddressList) XXX_DiscardUnknown() {
	xxx_messageInfo_DnsTable_AddressList.DiscardUnknown(m)
}

var xxx_messageInfo_DnsTable_AddressList proto.InternalMessageInfo

func (m *DnsTable_AddressList) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type DnsTable_DnsEndpoint struct {
	// Types that are valid to be assigned to EndpointConfig:
	//	*DnsTable_DnsEndpoint_AddressList
	EndpointConfig       isDnsTable_DnsEndpoint_EndpointConfig `protobuf_oneof:"endpoint_config"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *DnsTable_DnsEndpoint) Reset()         { *m = DnsTable_DnsEndpoint{} }
func (m *DnsTable_DnsEndpoint) String() string { return proto.CompactTextString(m) }
func (*DnsTable_DnsEndpoint) ProtoMessage()    {}
func (*DnsTable_DnsEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_976389b90f744445, []int{0, 1}
}

func (m *DnsTable_DnsEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnsTable_DnsEndpoint.Unmarshal(m, b)
}
func (m *DnsTable_DnsEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnsTable_DnsEndpoint.Marshal(b, m, deterministic)
}
func (m *DnsTable_DnsEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnsTable_DnsEndpoint.Merge(m, src)
}
func (m *DnsTable_DnsEndpoint) XXX_Size() int {
	return xxx_messageInfo_DnsTable_DnsEndpoint.Size(m)
}
func (m *DnsTable_DnsEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_DnsTable_DnsEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_DnsTable_DnsEndpoint proto.InternalMessageInfo

type isDnsTable_DnsEndpoint_EndpointConfig interface {
	isDnsTable_DnsEndpoint_EndpointConfig()
}

type DnsTable_DnsEndpoint_AddressList struct {
	AddressList *DnsTable_AddressList `protobuf:"bytes,1,opt,name=address_list,json=addressList,proto3,oneof"`
}

func (*DnsTable_DnsEndpoint_AddressList) isDnsTable_DnsEndpoint_EndpointConfig() {}

func (m *DnsTable_DnsEndpoint) GetEndpointConfig() isDnsTable_DnsEndpoint_EndpointConfig {
	if m != nil {
		return m.EndpointConfig
	}
	return nil
}

func (m *DnsTable_DnsEndpoint) GetAddressList() *DnsTable_AddressList {
	if x, ok := m.GetEndpointConfig().(*DnsTable_DnsEndpoint_AddressList); ok {
		return x.AddressList
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DnsTable_DnsEndpoint) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DnsTable_DnsEndpoint_AddressList)(nil),
	}
}

type DnsTable_DnsVirtualDomain struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Endpoint             *DnsTable_DnsEndpoint `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AnswerTtl            *duration.Duration    `protobuf:"bytes,3,opt,name=answer_ttl,json=answerTtl,proto3" json:"answer_ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DnsTable_DnsVirtualDomain) Reset()         { *m = DnsTable_DnsVirtualDomain{} }
func (m *DnsTable_DnsVirtualDomain) String() string { return proto.CompactTextString(m) }
func (*DnsTable_DnsVirtualDomain) ProtoMessage()    {}
func (*DnsTable_DnsVirtualDomain) Descriptor() ([]byte, []int) {
	return fileDescriptor_976389b90f744445, []int{0, 2}
}

func (m *DnsTable_DnsVirtualDomain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnsTable_DnsVirtualDomain.Unmarshal(m, b)
}
func (m *DnsTable_DnsVirtualDomain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnsTable_DnsVirtualDomain.Marshal(b, m, deterministic)
}
func (m *DnsTable_DnsVirtualDomain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnsTable_DnsVirtualDomain.Merge(m, src)
}
func (m *DnsTable_DnsVirtualDomain) XXX_Size() int {
	return xxx_messageInfo_DnsTable_DnsVirtualDomain.Size(m)
}
func (m *DnsTable_DnsVirtualDomain) XXX_DiscardUnknown() {
	xxx_messageInfo_DnsTable_DnsVirtualDomain.DiscardUnknown(m)
}

var xxx_messageInfo_DnsTable_DnsVirtualDomain proto.InternalMessageInfo

func (m *DnsTable_DnsVirtualDomain) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DnsTable_DnsVirtualDomain) GetEndpoint() *DnsTable_DnsEndpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *DnsTable_DnsVirtualDomain) GetAnswerTtl() *duration.Duration {
	if m != nil {
		return m.AnswerTtl
	}
	return nil
}

func init() {
	proto.RegisterType((*DnsTable)(nil), "envoy.data.dns.v4alpha.DnsTable")
	proto.RegisterType((*DnsTable_AddressList)(nil), "envoy.data.dns.v4alpha.DnsTable.AddressList")
	proto.RegisterType((*DnsTable_DnsEndpoint)(nil), "envoy.data.dns.v4alpha.DnsTable.DnsEndpoint")
	proto.RegisterType((*DnsTable_DnsVirtualDomain)(nil), "envoy.data.dns.v4alpha.DnsTable.DnsVirtualDomain")
}

func init() {
	proto.RegisterFile("envoy/data/dns/v4alpha/dns_table.proto", fileDescriptor_976389b90f744445)
}

var fileDescriptor_976389b90f744445 = []byte{
	// 580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xbd, 0x6f, 0xd3, 0x4e,
	0x18, 0xee, 0xd9, 0xfd, 0x70, 0xcf, 0xbf, 0xb6, 0x91, 0xf5, 0x53, 0x31, 0x16, 0x44, 0x69, 0x85,
	0x20, 0x7c, 0xd4, 0x86, 0x94, 0x29, 0x0b, 0xc2, 0x04, 0xa9, 0x03, 0x48, 0xc1, 0xad, 0x58, 0xad,
	0x4b, 0x7c, 0x49, 0x4f, 0x38, 0x77, 0xd6, 0xdd, 0xd9, 0x4d, 0x36, 0x46, 0xe6, 0x8e, 0x4c, 0x6c,
	0x48, 0xfc, 0x09, 0x4c, 0x2c, 0x48, 0xac, 0xfc, 0x2f, 0x0c, 0x28, 0x13, 0xf2, 0xd9, 0x4e, 0xcc,
	0x47, 0xa1, 0xdb, 0x7b, 0xf7, 0xdc, 0xf3, 0xbc, 0xef, 0xf3, 0xd8, 0x2f, 0xbc, 0x89, 0x69, 0xc6,
	0x66, 0x5e, 0x84, 0x24, 0xf2, 0x22, 0x2a, 0xbc, 0xec, 0x21, 0x8a, 0x93, 0x53, 0x55, 0x87, 0x12,
	0x0d, 0x62, 0xec, 0x26, 0x9c, 0x49, 0x66, 0xed, 0xaa, 0x77, 0x6e, 0xfe, 0xce, 0x8d, 0xa8, 0x70,
	0xcb, 0x77, 0xce, 0xad, 0x82, 0x2f, 0x67, 0x09, 0xf6, 0x26, 0x48, 0x0e, 0x4f, 0x31, 0x5f, 0x68,
	0x08, 0xc9, 0x09, 0x1d, 0x17, 0x02, 0x4e, 0x73, 0xcc, 0xd8, 0x38, 0xc6, 0x9e, 0x3a, 0x0d, 0xd2,
	0x91, 0x17, 0xa5, 0x1c, 0x49, 0xc2, 0x68, 0x89, 0x5f, 0x4f, 0xa3, 0x04, 0x79, 0x88, 0x52, 0x26,
	0xd5, 0xb5, 0xf0, 0x84, 0x44, 0x32, 0x15, 0x25, 0xbc, 0xf7, 0x1b, 0x9c, 0x61, 0x2e, 0x08, 0xa3,
	0xcb, 0x0e, 0x57, 0x32, 0x14, 0x93, 0x08, 0x49, 0xec, 0x55, 0x45, 0x01, 0xec, 0xbf, 0x5b, 0x87,
	0x46, 0x8f, 0x8a, 0x93, 0xdc, 0x8e, 0x75, 0x1f, 0xfe, 0x8f, 0xa7, 0x12, 0x73, 0x8a, 0xe2, 0x90,
	0x63, 0xc9, 0x67, 0xe1, 0x90, 0xa5, 0x54, 0xda, 0xa0, 0x05, 0xda, 0x5b, 0x81, 0x55, 0x61, 0x41,
	0x0e, 0x3d, 0xc9, 0x11, 0x2b, 0x82, 0x3b, 0x19, 0xe1, 0x32, 0x45, 0x71, 0x18, 0xb1, 0x09, 0x22,
	0x54, 0xd8, 0x5a, 0x4b, 0x6f, 0x9b, 0x9d, 0x07, 0xee, 0x9f, 0x43, 0x71, 0xab, 0x66, 0x79, 0xf1,
	0xb2, 0xa0, 0xf6, 0x14, 0xd3, 0x37, 0xe6, 0xfe, 0xda, 0x39, 0xd0, 0x0c, 0x10, 0x6c, 0x67, 0x75,
	0x40, 0x58, 0x7d, 0xb8, 0xfd, 0x8a, 0xb2, 0x33, 0x1a, 0x8a, 0x74, 0x34, 0x22, 0x53, 0x2c, 0x6c,
	0x5d, 0x35, 0xb9, 0x5d, 0x36, 0xc9, 0x13, 0x76, 0xcb, 0x84, 0x17, 0x8d, 0x8e, 0x55, 0xc2, 0xcf,
	0x8b, 0xdb, 0x60, 0x4b, 0x09, 0x1c, 0x97, 0x7c, 0x67, 0x04, 0xcd, 0xc7, 0x51, 0xc4, 0xb1, 0x10,
	0xcf, 0x88, 0x90, 0x56, 0x1b, 0x6e, 0xa0, 0xe2, 0x68, 0x83, 0x96, 0xde, 0xde, 0xf4, 0xb7, 0xe7,
	0xbe, 0x79, 0x0e, 0x0c, 0x03, 0xec, 0xaf, 0x72, 0xad, 0xa1, 0x07, 0x15, 0xdc, 0x3d, 0x78, 0xfb,
	0xf9, 0x4d, 0xb3, 0x5d, 0xfe, 0x1a, 0x35, 0x77, 0x87, 0x4b, 0x63, 0x35, 0x61, 0xe7, 0x3d, 0x80,
	0x66, 0x8f, 0x8a, 0xa7, 0x34, 0x4a, 0x18, 0xa1, 0xd2, 0x7a, 0x01, 0xff, 0x2b, 0x95, 0xc2, 0x98,
	0x88, 0x22, 0x59, 0xb3, 0x73, 0xef, 0x9f, 0x61, 0xd5, 0x34, 0x8f, 0x56, 0x02, 0x13, 0x2d, 0x8f,
	0x97, 0x99, 0xa8, 0x36, 0x81, 0xbf, 0x0b, 0x77, 0x70, 0x59, 0x87, 0x43, 0x46, 0x47, 0x64, 0x6c,
	0xe9, 0xdf, 0x7d, 0xe0, 0x7c, 0x03, 0xb0, 0xf1, 0xeb, 0x27, 0xb1, 0x9a, 0x70, 0x95, 0xa2, 0x09,
	0x56, 0x63, 0x6e, 0xfa, 0x70, 0xee, 0x6f, 0xf0, 0xb5, 0x86, 0xf6, 0x09, 0x80, 0x40, 0xdd, 0x5b,
	0x47, 0xd0, 0xa8, 0xc4, 0x6c, 0xed, 0x92, 0x56, 0x6a, 0xc3, 0x04, 0x0b, 0xb6, 0xe5, 0x43, 0x88,
	0xa8, 0x38, 0xc3, 0x3c, 0x94, 0x32, 0xb6, 0x75, 0xa5, 0x75, 0xd5, 0x2d, 0xf6, 0xc2, 0xad, 0xf6,
	0xc2, 0xed, 0x95, 0x7b, 0xa1, 0xfe, 0x95, 0x0f, 0x40, 0xbb, 0xb3, 0x12, 0x6c, 0x16, 0xb4, 0x13,
	0x19, 0x77, 0x3b, 0x79, 0x12, 0x07, 0xf0, 0xee, 0xdf, 0x93, 0xf8, 0xc9, 0x61, 0x77, 0x2f, 0xe7,
	0x5c, 0x83, 0xce, 0xc5, 0x1c, 0xff, 0xd1, 0xc7, 0xd7, 0x5f, 0xbe, 0xae, 0x6b, 0x0d, 0x1d, 0xde,
	0x20, 0xac, 0xb0, 0x97, 0x70, 0x36, 0x9d, 0x5d, 0xe0, 0xd4, 0xdf, 0xaa, 0x98, 0xfd, 0x7c, 0xec,
	0x3e, 0x18, 0xac, 0xab, 0xf9, 0x0f, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x89, 0xaf, 0x53,
	0x50, 0x04, 0x00, 0x00,
}
