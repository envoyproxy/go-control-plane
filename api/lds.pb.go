// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/lds.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf4 "github.com/golang/protobuf/ptypes/struct"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Filter struct {
	Name         string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Config       *google_protobuf4.Struct `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	DeprecatedV1 *Filter_DeprecatedV1     `protobuf:"bytes,3,opt,name=deprecated_v1,json=deprecatedV1" json:"deprecated_v1,omitempty"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Filter) GetConfig() *google_protobuf4.Struct {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Filter) GetDeprecatedV1() *Filter_DeprecatedV1 {
	if m != nil {
		return m.DeprecatedV1
	}
	return nil
}

type Filter_DeprecatedV1 struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *Filter_DeprecatedV1) Reset()                    { *m = Filter_DeprecatedV1{} }
func (m *Filter_DeprecatedV1) String() string            { return proto.CompactTextString(m) }
func (*Filter_DeprecatedV1) ProtoMessage()               {}
func (*Filter_DeprecatedV1) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0, 0} }

func (m *Filter_DeprecatedV1) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type FilterChainMatch struct {
	SniDomains         []string                       `protobuf:"bytes,1,rep,name=sni_domains,json=sniDomains" json:"sni_domains,omitempty"`
	PrefixRanges       []*CidrRange                   `protobuf:"bytes,3,rep,name=prefix_ranges,json=prefixRanges" json:"prefix_ranges,omitempty"`
	AddressSuffix      string                         `protobuf:"bytes,4,opt,name=address_suffix,json=addressSuffix" json:"address_suffix,omitempty"`
	SuffixLen          *google_protobuf.UInt32Value   `protobuf:"bytes,5,opt,name=suffix_len,json=suffixLen" json:"suffix_len,omitempty"`
	SourcePrefixRanges []*CidrRange                   `protobuf:"bytes,6,rep,name=source_prefix_ranges,json=sourcePrefixRanges" json:"source_prefix_ranges,omitempty"`
	SourcePorts        []*google_protobuf.UInt32Value `protobuf:"bytes,7,rep,name=source_ports,json=sourcePorts" json:"source_ports,omitempty"`
	DestinationPort    *google_protobuf.UInt32Value   `protobuf:"bytes,8,opt,name=destination_port,json=destinationPort" json:"destination_port,omitempty"`
}

func (m *FilterChainMatch) Reset()                    { *m = FilterChainMatch{} }
func (m *FilterChainMatch) String() string            { return proto.CompactTextString(m) }
func (*FilterChainMatch) ProtoMessage()               {}
func (*FilterChainMatch) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *FilterChainMatch) GetSniDomains() []string {
	if m != nil {
		return m.SniDomains
	}
	return nil
}

func (m *FilterChainMatch) GetPrefixRanges() []*CidrRange {
	if m != nil {
		return m.PrefixRanges
	}
	return nil
}

func (m *FilterChainMatch) GetAddressSuffix() string {
	if m != nil {
		return m.AddressSuffix
	}
	return ""
}

func (m *FilterChainMatch) GetSuffixLen() *google_protobuf.UInt32Value {
	if m != nil {
		return m.SuffixLen
	}
	return nil
}

func (m *FilterChainMatch) GetSourcePrefixRanges() []*CidrRange {
	if m != nil {
		return m.SourcePrefixRanges
	}
	return nil
}

func (m *FilterChainMatch) GetSourcePorts() []*google_protobuf.UInt32Value {
	if m != nil {
		return m.SourcePorts
	}
	return nil
}

func (m *FilterChainMatch) GetDestinationPort() *google_protobuf.UInt32Value {
	if m != nil {
		return m.DestinationPort
	}
	return nil
}

type FilterChain struct {
	FilterChainMatch *FilterChainMatch          `protobuf:"bytes,1,opt,name=filter_chain_match,json=filterChainMatch" json:"filter_chain_match,omitempty"`
	TlsContext       *DownstreamTlsContext      `protobuf:"bytes,2,opt,name=tls_context,json=tlsContext" json:"tls_context,omitempty"`
	Filters          []*Filter                  `protobuf:"bytes,3,rep,name=filters" json:"filters,omitempty"`
	UseProxyProto    *google_protobuf.BoolValue `protobuf:"bytes,4,opt,name=use_proxy_proto,json=useProxyProto" json:"use_proxy_proto,omitempty"`
	Metadata         *Metadata                  `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
	TransportSocket  *TransportSocket           `protobuf:"bytes,6,opt,name=transport_socket,json=transportSocket" json:"transport_socket,omitempty"`
}

func (m *FilterChain) Reset()                    { *m = FilterChain{} }
func (m *FilterChain) String() string            { return proto.CompactTextString(m) }
func (*FilterChain) ProtoMessage()               {}
func (*FilterChain) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *FilterChain) GetFilterChainMatch() *FilterChainMatch {
	if m != nil {
		return m.FilterChainMatch
	}
	return nil
}

func (m *FilterChain) GetTlsContext() *DownstreamTlsContext {
	if m != nil {
		return m.TlsContext
	}
	return nil
}

func (m *FilterChain) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *FilterChain) GetUseProxyProto() *google_protobuf.BoolValue {
	if m != nil {
		return m.UseProxyProto
	}
	return nil
}

func (m *FilterChain) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *FilterChain) GetTransportSocket() *TransportSocket {
	if m != nil {
		return m.TransportSocket
	}
	return nil
}

type Listener struct {
	Name                          string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Address                       *Address                     `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	FilterChains                  []*FilterChain               `protobuf:"bytes,3,rep,name=filter_chains,json=filterChains" json:"filter_chains,omitempty"`
	UseOriginalDst                *google_protobuf.BoolValue   `protobuf:"bytes,4,opt,name=use_original_dst,json=useOriginalDst" json:"use_original_dst,omitempty"`
	PerConnectionBufferLimitBytes *google_protobuf.UInt32Value `protobuf:"bytes,5,opt,name=per_connection_buffer_limit_bytes,json=perConnectionBufferLimitBytes" json:"per_connection_buffer_limit_bytes,omitempty"`
	Metadata                      *Metadata                    `protobuf:"bytes,6,opt,name=metadata" json:"metadata,omitempty"`
	DeprecatedV1                  *Listener_DeprecatedV1       `protobuf:"bytes,7,opt,name=deprecated_v1,json=deprecatedV1" json:"deprecated_v1,omitempty"`
}

func (m *Listener) Reset()                    { *m = Listener{} }
func (m *Listener) String() string            { return proto.CompactTextString(m) }
func (*Listener) ProtoMessage()               {}
func (*Listener) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *Listener) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Listener) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Listener) GetFilterChains() []*FilterChain {
	if m != nil {
		return m.FilterChains
	}
	return nil
}

func (m *Listener) GetUseOriginalDst() *google_protobuf.BoolValue {
	if m != nil {
		return m.UseOriginalDst
	}
	return nil
}

func (m *Listener) GetPerConnectionBufferLimitBytes() *google_protobuf.UInt32Value {
	if m != nil {
		return m.PerConnectionBufferLimitBytes
	}
	return nil
}

func (m *Listener) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Listener) GetDeprecatedV1() *Listener_DeprecatedV1 {
	if m != nil {
		return m.DeprecatedV1
	}
	return nil
}

type Listener_DeprecatedV1 struct {
	BindToPort *google_protobuf.BoolValue `protobuf:"bytes,1,opt,name=bind_to_port,json=bindToPort" json:"bind_to_port,omitempty"`
}

func (m *Listener_DeprecatedV1) Reset()                    { *m = Listener_DeprecatedV1{} }
func (m *Listener_DeprecatedV1) String() string            { return proto.CompactTextString(m) }
func (*Listener_DeprecatedV1) ProtoMessage()               {}
func (*Listener_DeprecatedV1) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3, 0} }

func (m *Listener_DeprecatedV1) GetBindToPort() *google_protobuf.BoolValue {
	if m != nil {
		return m.BindToPort
	}
	return nil
}

func init() {
	proto.RegisterType((*Filter)(nil), "envoy.api.v2.Filter")
	proto.RegisterType((*Filter_DeprecatedV1)(nil), "envoy.api.v2.Filter.DeprecatedV1")
	proto.RegisterType((*FilterChainMatch)(nil), "envoy.api.v2.FilterChainMatch")
	proto.RegisterType((*FilterChain)(nil), "envoy.api.v2.FilterChain")
	proto.RegisterType((*Listener)(nil), "envoy.api.v2.Listener")
	proto.RegisterType((*Listener_DeprecatedV1)(nil), "envoy.api.v2.Listener.DeprecatedV1")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ListenerDiscoveryService service

type ListenerDiscoveryServiceClient interface {
	StreamListeners(ctx context.Context, opts ...grpc.CallOption) (ListenerDiscoveryService_StreamListenersClient, error)
	FetchListeners(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error)
}

type listenerDiscoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewListenerDiscoveryServiceClient(cc *grpc.ClientConn) ListenerDiscoveryServiceClient {
	return &listenerDiscoveryServiceClient{cc}
}

func (c *listenerDiscoveryServiceClient) StreamListeners(ctx context.Context, opts ...grpc.CallOption) (ListenerDiscoveryService_StreamListenersClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ListenerDiscoveryService_serviceDesc.Streams[0], c.cc, "/envoy.api.v2.ListenerDiscoveryService/StreamListeners", opts...)
	if err != nil {
		return nil, err
	}
	x := &listenerDiscoveryServiceStreamListenersClient{stream}
	return x, nil
}

type ListenerDiscoveryService_StreamListenersClient interface {
	Send(*DiscoveryRequest) error
	Recv() (*DiscoveryResponse, error)
	grpc.ClientStream
}

type listenerDiscoveryServiceStreamListenersClient struct {
	grpc.ClientStream
}

func (x *listenerDiscoveryServiceStreamListenersClient) Send(m *DiscoveryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *listenerDiscoveryServiceStreamListenersClient) Recv() (*DiscoveryResponse, error) {
	m := new(DiscoveryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *listenerDiscoveryServiceClient) FetchListeners(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error) {
	out := new(DiscoveryResponse)
	err := grpc.Invoke(ctx, "/envoy.api.v2.ListenerDiscoveryService/FetchListeners", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ListenerDiscoveryService service

type ListenerDiscoveryServiceServer interface {
	StreamListeners(ListenerDiscoveryService_StreamListenersServer) error
	FetchListeners(context.Context, *DiscoveryRequest) (*DiscoveryResponse, error)
}

func RegisterListenerDiscoveryServiceServer(s *grpc.Server, srv ListenerDiscoveryServiceServer) {
	s.RegisterService(&_ListenerDiscoveryService_serviceDesc, srv)
}

func _ListenerDiscoveryService_StreamListeners_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ListenerDiscoveryServiceServer).StreamListeners(&listenerDiscoveryServiceStreamListenersServer{stream})
}

type ListenerDiscoveryService_StreamListenersServer interface {
	Send(*DiscoveryResponse) error
	Recv() (*DiscoveryRequest, error)
	grpc.ServerStream
}

type listenerDiscoveryServiceStreamListenersServer struct {
	grpc.ServerStream
}

func (x *listenerDiscoveryServiceStreamListenersServer) Send(m *DiscoveryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *listenerDiscoveryServiceStreamListenersServer) Recv() (*DiscoveryRequest, error) {
	m := new(DiscoveryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ListenerDiscoveryService_FetchListeners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenerDiscoveryServiceServer).FetchListeners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envoy.api.v2.ListenerDiscoveryService/FetchListeners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenerDiscoveryServiceServer).FetchListeners(ctx, req.(*DiscoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ListenerDiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "envoy.api.v2.ListenerDiscoveryService",
	HandlerType: (*ListenerDiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchListeners",
			Handler:    _ListenerDiscoveryService_FetchListeners_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamListeners",
			Handler:       _ListenerDiscoveryService_StreamListeners_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/lds.proto",
}

func init() { proto.RegisterFile("api/lds.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 841 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x41, 0x73, 0xdb, 0x44,
	0x14, 0x46, 0x75, 0x70, 0x92, 0x67, 0x3b, 0x31, 0x4b, 0xa1, 0xc2, 0x93, 0xb6, 0xa9, 0x18, 0x66,
	0x32, 0x1c, 0x64, 0xea, 0xde, 0x4a, 0x07, 0x86, 0xd8, 0x13, 0xe8, 0x8c, 0x3b, 0x64, 0xe4, 0xd0,
	0xe1, 0xa6, 0x59, 0x4b, 0x4f, 0xce, 0x0e, 0xf2, 0xae, 0xd8, 0x5d, 0xb9, 0xf1, 0x95, 0x1b, 0x57,
	0xf8, 0x17, 0xfc, 0x03, 0x7e, 0x07, 0x7f, 0x81, 0x1b, 0x7f, 0x82, 0xd9, 0x95, 0xe4, 0x4a, 0x6e,
	0x12, 0x72, 0xe0, 0xb6, 0x6f, 0xdf, 0xf7, 0xbe, 0x7d, 0xfa, 0xbe, 0xb7, 0x2b, 0xe8, 0xd1, 0x8c,
	0x0d, 0xd3, 0x58, 0xf9, 0x99, 0x14, 0x5a, 0x90, 0x2e, 0xf2, 0x95, 0x58, 0xfb, 0x34, 0x63, 0xfe,
	0x6a, 0x34, 0xf8, 0xc0, 0x24, 0x69, 0x1c, 0x4b, 0x54, 0x25, 0x60, 0x70, 0x60, 0xb6, 0xe6, 0x54,
	0x61, 0x19, 0x7f, 0x68, 0xe2, 0x98, 0xa9, 0x48, 0xac, 0x50, 0xae, 0xcb, 0x4d, 0x4b, 0xaa, 0x2a,
	0xd2, 0xc1, 0xd1, 0x42, 0x88, 0x45, 0x8a, 0x43, 0xcb, 0xc6, 0xb9, 0xd0, 0x54, 0x33, 0xc1, 0xb7,
	0xb3, 0x36, 0x9a, 0xe7, 0xc9, 0x50, 0x69, 0x99, 0x47, 0xba, 0xcc, 0x3e, 0xda, 0xce, 0xbe, 0x91,
	0x34, 0xcb, 0x50, 0x96, 0xd5, 0xde, 0x9f, 0x0e, 0xb4, 0xcf, 0x58, 0xaa, 0x51, 0x12, 0x02, 0x3b,
	0x9c, 0x2e, 0xd1, 0x75, 0x8e, 0x9d, 0x93, 0xfd, 0xc0, 0xae, 0xc9, 0x10, 0xda, 0x91, 0xe0, 0x09,
	0x5b, 0xb8, 0xf7, 0x8e, 0x9d, 0x93, 0xce, 0xe8, 0x81, 0x5f, 0xf0, 0xf9, 0x15, 0x9f, 0x3f, 0xb3,
	0xa7, 0x05, 0x25, 0x8c, 0x9c, 0x41, 0x2f, 0xc6, 0x4c, 0x62, 0x44, 0x35, 0xc6, 0xe1, 0xea, 0xa9,
	0xdb, 0xb2, 0x75, 0x4f, 0xfc, 0xba, 0x30, 0x7e, 0x71, 0xa2, 0x3f, 0xd9, 0x20, 0x5f, 0x3f, 0x0d,
	0xba, 0x71, 0x2d, 0x1a, 0x78, 0xd0, 0xad, 0x67, 0x4d, 0x73, 0x7a, 0x9d, 0x6d, 0x9a, 0x33, 0x6b,
	0xef, 0x8f, 0x16, 0xf4, 0x0b, 0xa6, 0xf1, 0x25, 0x65, 0xfc, 0x15, 0xd5, 0xd1, 0x25, 0x79, 0x0c,
	0x1d, 0xc5, 0x59, 0x18, 0x8b, 0x25, 0x65, 0x5c, 0xb9, 0xce, 0x71, 0xeb, 0x64, 0x3f, 0x00, 0xc5,
	0xd9, 0xa4, 0xd8, 0x21, 0x2f, 0xa0, 0x97, 0x49, 0x4c, 0xd8, 0x55, 0x28, 0x29, 0x5f, 0xa0, 0x72,
	0x5b, 0xc7, 0x2d, 0xfb, 0x65, 0x8d, 0x0e, 0xc7, 0x2c, 0x96, 0x81, 0xc9, 0x07, 0xdd, 0x02, 0x6d,
	0x03, 0x45, 0x3e, 0x83, 0x83, 0xd2, 0xd0, 0x50, 0xe5, 0x49, 0xc2, 0xae, 0xdc, 0x1d, 0xdb, 0x51,
	0xaf, 0xdc, 0x9d, 0xd9, 0x4d, 0xf2, 0x25, 0x40, 0x91, 0x0e, 0x53, 0xe4, 0xee, 0xfb, 0x56, 0x83,
	0xa3, 0x77, 0xb4, 0xfb, 0xe1, 0x25, 0xd7, 0xcf, 0x46, 0xaf, 0x69, 0x9a, 0x63, 0xb0, 0x5f, 0xe0,
	0xa7, 0xc8, 0xc9, 0x4b, 0xb8, 0xaf, 0x44, 0x2e, 0x23, 0x0c, 0x9b, 0x8d, 0xb6, 0x6f, 0x6f, 0x94,
	0x14, 0x45, 0xe7, 0xf5, 0x76, 0xbf, 0x86, 0x6e, 0x45, 0x25, 0xa4, 0x56, 0xee, 0xae, 0xa5, 0xb8,
	0xbd, 0x93, 0x4e, 0xc9, 0x63, 0x0a, 0xc8, 0xb7, 0xd0, 0x8f, 0x51, 0x69, 0xc6, 0xed, 0xcc, 0x59,
	0x16, 0x77, 0xef, 0x0e, 0x9f, 0x73, 0x58, 0xab, 0x32, 0x4c, 0xde, 0x6f, 0x2d, 0xe8, 0xd4, 0xcc,
	0x22, 0x53, 0x20, 0x89, 0x0d, 0xc3, 0xc8, 0xc4, 0xe1, 0xd2, 0xb8, 0x67, 0xed, 0xed, 0x8c, 0x1e,
	0x5d, 0x37, 0x2d, 0x6f, 0x3d, 0x0e, 0xfa, 0xc9, 0xb6, 0xeb, 0x63, 0xe8, 0xe8, 0x54, 0x85, 0x91,
	0xe0, 0x1a, 0xaf, 0x74, 0x39, 0xac, 0x5e, 0x93, 0x66, 0x22, 0xde, 0x70, 0xa5, 0x25, 0xd2, 0xe5,
	0x45, 0xaa, 0xc6, 0x05, 0x32, 0x00, 0xbd, 0x59, 0x13, 0x1f, 0x76, 0x0b, 0xe2, 0x6a, 0x26, 0xee,
	0x5f, 0xd7, 0x47, 0x50, 0x81, 0xc8, 0x29, 0x1c, 0xe6, 0xca, 0x98, 0x24, 0xae, 0xd6, 0xa1, 0x55,
	0xc1, 0x0e, 0x43, 0x67, 0x34, 0x78, 0x47, 0x9a, 0x53, 0x21, 0xd2, 0x42, 0x98, 0x5e, 0xae, 0xf0,
	0xdc, 0x54, 0x9c, 0xdb, 0x07, 0x63, 0x04, 0x7b, 0x4b, 0xd4, 0x34, 0xa6, 0x9a, 0x96, 0x63, 0xf2,
	0x71, 0xf3, 0xd0, 0x57, 0x65, 0x36, 0xd8, 0xe0, 0xc8, 0x77, 0xd0, 0xd7, 0x92, 0x72, 0x65, 0xcc,
	0x08, 0x95, 0x88, 0x7e, 0x42, 0xed, 0xb6, 0x6d, 0xed, 0xc3, 0x66, 0xed, 0x45, 0x85, 0x9a, 0x59,
	0x50, 0x70, 0xa8, 0x9b, 0x1b, 0xde, 0xaf, 0x3b, 0xb0, 0x37, 0x65, 0x4a, 0x23, 0xbf, 0xf1, 0xfe,
	0xef, 0x96, 0x83, 0x5d, 0x6a, 0xfa, 0x51, 0xf3, 0x84, 0x6f, 0x8a, 0x64, 0x50, 0xa1, 0xc8, 0x57,
	0xd0, 0xab, 0xdb, 0x5a, 0x29, 0xf9, 0xc9, 0x8d, 0x8e, 0x06, 0xdd, 0x9a, 0x99, 0x8a, 0x4c, 0xa0,
	0x6f, 0x34, 0x15, 0x92, 0x2d, 0x18, 0xa7, 0x69, 0x18, 0x2b, 0x7d, 0x07, 0x51, 0x0f, 0x72, 0x85,
	0xdf, 0x97, 0x25, 0x13, 0xa5, 0x49, 0x02, 0x4f, 0x32, 0xd3, 0x82, 0xe0, 0x1c, 0x23, 0x3b, 0xb8,
	0xf3, 0x3c, 0x49, 0x50, 0x86, 0x29, 0x5b, 0x32, 0x1d, 0xce, 0xd7, 0x1a, 0xd5, 0x9d, 0x6e, 0xe5,
	0xc3, 0x0c, 0xe5, 0x78, 0xc3, 0x72, 0x6a, 0x49, 0xa6, 0x86, 0xe3, 0xd4, 0x50, 0x34, 0xdc, 0x6b,
	0xdf, 0xd9, 0xbd, 0xad, 0x17, 0x72, 0xd7, 0x16, 0x7e, 0xda, 0x2c, 0xac, 0x5c, 0xb9, 0xed, 0x8d,
	0x9c, 0x6e, 0xbd, 0x91, 0x2f, 0xa0, 0x3b, 0x67, 0x3c, 0x0e, 0xb5, 0x28, 0xee, 0xa9, 0xf3, 0x9f,
	0xba, 0x81, 0xc1, 0x5f, 0x08, 0x73, 0x41, 0x47, 0xff, 0x38, 0xe0, 0x56, 0xa7, 0x4e, 0xaa, 0x1f,
	0xd2, 0x0c, 0xe5, 0x8a, 0x45, 0x48, 0x7e, 0x84, 0xc3, 0x99, 0xbd, 0x3a, 0x15, 0x42, 0x91, 0xad,
	0x4b, 0xba, 0x29, 0x09, 0xf0, 0xe7, 0x1c, 0x95, 0x1e, 0x3c, 0xbe, 0x31, 0xaf, 0x32, 0xc1, 0x15,
	0x7a, 0xef, 0x9d, 0x38, 0x5f, 0x38, 0x24, 0x87, 0x83, 0x33, 0xd4, 0xd1, 0xe5, 0xff, 0x48, 0xec,
	0xfd, 0xf2, 0xd7, 0xdf, 0xbf, 0xdf, 0x3b, 0xf2, 0x1e, 0x0c, 0x57, 0xa3, 0xb7, 0xff, 0xd6, 0xe7,
	0x69, 0x75, 0xc2, 0x73, 0xe7, 0xf3, 0x79, 0xdb, 0xaa, 0xf1, 0xec, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xb1, 0x1c, 0xda, 0x60, 0xc0, 0x07, 0x00, 0x00,
}
