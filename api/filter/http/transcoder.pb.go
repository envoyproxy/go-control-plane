// Code generated by protoc-gen-go.
// source: api/filter/http/transcoder.proto
// DO NOT EDIT!

package http

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GrpcJsonTranscoder struct {
	ProtoDescriptor string                           `protobuf:"bytes,1,opt,name=proto_descriptor,json=protoDescriptor" json:"proto_descriptor,omitempty"`
	Services        []string                         `protobuf:"bytes,2,rep,name=services" json:"services,omitempty"`
	PrintOptions    *GrpcJsonTranscoder_PrintOptions `protobuf:"bytes,3,opt,name=print_options,json=printOptions" json:"print_options,omitempty"`
}

func (m *GrpcJsonTranscoder) Reset()                    { *m = GrpcJsonTranscoder{} }
func (m *GrpcJsonTranscoder) String() string            { return proto.CompactTextString(m) }
func (*GrpcJsonTranscoder) ProtoMessage()               {}
func (*GrpcJsonTranscoder) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *GrpcJsonTranscoder) GetProtoDescriptor() string {
	if m != nil {
		return m.ProtoDescriptor
	}
	return ""
}

func (m *GrpcJsonTranscoder) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *GrpcJsonTranscoder) GetPrintOptions() *GrpcJsonTranscoder_PrintOptions {
	if m != nil {
		return m.PrintOptions
	}
	return nil
}

type GrpcJsonTranscoder_PrintOptions struct {
	AddWhitespace              bool `protobuf:"varint,1,opt,name=add_whitespace,json=addWhitespace" json:"add_whitespace,omitempty"`
	AlwaysPrintPrimitiveFields bool `protobuf:"varint,2,opt,name=always_print_primitive_fields,json=alwaysPrintPrimitiveFields" json:"always_print_primitive_fields,omitempty"`
	AlwaysPrintEnumsAsInts     bool `protobuf:"varint,3,opt,name=always_print_enums_as_ints,json=alwaysPrintEnumsAsInts" json:"always_print_enums_as_ints,omitempty"`
	PreserveProtoFieldNames    bool `protobuf:"varint,4,opt,name=preserve_proto_field_names,json=preserveProtoFieldNames" json:"preserve_proto_field_names,omitempty"`
}

func (m *GrpcJsonTranscoder_PrintOptions) Reset()         { *m = GrpcJsonTranscoder_PrintOptions{} }
func (m *GrpcJsonTranscoder_PrintOptions) String() string { return proto.CompactTextString(m) }
func (*GrpcJsonTranscoder_PrintOptions) ProtoMessage()    {}
func (*GrpcJsonTranscoder_PrintOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 0}
}

func (m *GrpcJsonTranscoder_PrintOptions) GetAddWhitespace() bool {
	if m != nil {
		return m.AddWhitespace
	}
	return false
}

func (m *GrpcJsonTranscoder_PrintOptions) GetAlwaysPrintPrimitiveFields() bool {
	if m != nil {
		return m.AlwaysPrintPrimitiveFields
	}
	return false
}

func (m *GrpcJsonTranscoder_PrintOptions) GetAlwaysPrintEnumsAsInts() bool {
	if m != nil {
		return m.AlwaysPrintEnumsAsInts
	}
	return false
}

func (m *GrpcJsonTranscoder_PrintOptions) GetPreserveProtoFieldNames() bool {
	if m != nil {
		return m.PreserveProtoFieldNames
	}
	return false
}

func init() {
	proto.RegisterType((*GrpcJsonTranscoder)(nil), "envoy.api.v2.filter.http.GrpcJsonTranscoder")
	proto.RegisterType((*GrpcJsonTranscoder_PrintOptions)(nil), "envoy.api.v2.filter.http.GrpcJsonTranscoder.PrintOptions")
}

func init() { proto.RegisterFile("api/filter/http/transcoder.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0x59, 0x2b, 0xd2, 0xc6, 0x56, 0x25, 0x07, 0x5d, 0x16, 0x84, 0x45, 0x10, 0xea, 0x25,
	0x85, 0x7a, 0x52, 0x4f, 0x05, 0xff, 0xa0, 0x07, 0x2d, 0x8b, 0xe0, 0xcd, 0x10, 0x77, 0xa7, 0x74,
	0xa0, 0x4d, 0x42, 0x26, 0x6e, 0xe9, 0x53, 0xf9, 0x6c, 0xbe, 0x81, 0x24, 0x4b, 0x97, 0x8a, 0x78,
	0x9c, 0x99, 0xdf, 0x37, 0xdf, 0x37, 0xc3, 0x72, 0x65, 0x71, 0x34, 0xc3, 0x85, 0x07, 0x37, 0x9a,
	0x7b, 0x6f, 0x47, 0xde, 0x29, 0x4d, 0xa5, 0xa9, 0xc0, 0x09, 0xeb, 0x8c, 0x37, 0x3c, 0x05, 0x5d,
	0x9b, 0xb5, 0x50, 0x16, 0x45, 0x3d, 0x16, 0x0d, 0x2a, 0x02, 0x7a, 0xf6, 0xd5, 0x61, 0xfc, 0xc1,
	0xd9, 0xf2, 0x89, 0x8c, 0x7e, 0x6d, 0x65, 0xfc, 0x82, 0x1d, 0x45, 0xa5, 0xac, 0x80, 0x4a, 0x87,
	0xd6, 0x1b, 0x97, 0x26, 0x79, 0x32, 0xec, 0x15, 0x87, 0xb1, 0x7f, 0xdb, 0xb6, 0x79, 0xc6, 0xba,
	0x04, 0xae, 0xc6, 0x12, 0x28, 0xdd, 0xc9, 0x3b, 0xc3, 0x5e, 0xd1, 0xd6, 0xfc, 0x9d, 0x0d, 0xac,
	0x43, 0xed, 0xa5, 0xb1, 0x1e, 0x8d, 0xa6, 0xb4, 0x93, 0x27, 0xc3, 0xfd, 0xf1, 0x95, 0xf8, 0x2f,
	0x8f, 0xf8, 0x9b, 0x45, 0x4c, 0xc3, 0x86, 0x97, 0x66, 0x41, 0xd1, 0xb7, 0x5b, 0x55, 0xf6, 0x9d,
	0xb0, 0xfe, 0xf6, 0x98, 0x9f, 0xb3, 0x03, 0x55, 0x55, 0x72, 0x35, 0x47, 0x0f, 0x64, 0x55, 0x09,
	0x31, 0x75, 0xb7, 0x18, 0xa8, 0xaa, 0x7a, 0x6b, 0x9b, 0x7c, 0xc2, 0x4e, 0xd5, 0x62, 0xa5, 0xd6,
	0x24, 0x9b, 0x78, 0xd6, 0xe1, 0x12, 0x3d, 0xd6, 0x20, 0x67, 0x08, 0x8b, 0x2a, 0x1c, 0x12, 0x54,
	0x59, 0x03, 0x45, 0x87, 0xe9, 0x06, 0xb9, 0x8f, 0x04, 0xbf, 0x66, 0xd9, 0xaf, 0x15, 0xa0, 0x3f,
	0x97, 0x24, 0x15, 0x49, 0xd4, 0xbe, 0xb9, 0xb3, 0x5b, 0x1c, 0x6f, 0xe9, 0xef, 0xc2, 0x7c, 0x42,
	0x8f, 0xda, 0x13, 0xbf, 0x61, 0x99, 0x75, 0x10, 0xbe, 0x04, 0xb2, 0x79, 0x73, 0xb4, 0x95, 0x5a,
	0x2d, 0x81, 0xd2, 0xdd, 0xa8, 0x3d, 0xd9, 0x10, 0xd3, 0x00, 0x44, 0xd3, 0xe7, 0x30, 0xfe, 0xd8,
	0x8b, 0x8a, 0xcb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x01, 0xa1, 0x23, 0xf6, 0x01, 0x00,
	0x00,
}
