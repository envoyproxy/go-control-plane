// Code generated by protoc-gen-go.
// source: api/filter/network/rate_limit.proto
// DO NOT EDIT!

package network

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import envoy_api_v21 "github.com/envoyproxy/go-control-plane/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RateLimit struct {
	StatPrefix  string                               `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix" json:"stat_prefix,omitempty"`
	Domain      string                               `protobuf:"bytes,2,opt,name=domain" json:"domain,omitempty"`
	Descriptors []*envoy_api_v21.RateLimitDescriptor `protobuf:"bytes,3,rep,name=descriptors" json:"descriptors,omitempty"`
	Timeout     *google_protobuf1.Duration           `protobuf:"bytes,4,opt,name=timeout" json:"timeout,omitempty"`
}

func (m *RateLimit) Reset()                    { *m = RateLimit{} }
func (m *RateLimit) String() string            { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()               {}
func (*RateLimit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RateLimit) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

func (m *RateLimit) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *RateLimit) GetDescriptors() []*envoy_api_v21.RateLimitDescriptor {
	if m != nil {
		return m.Descriptors
	}
	return nil
}

func (m *RateLimit) GetTimeout() *google_protobuf1.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func init() {
	proto.RegisterType((*RateLimit)(nil), "envoy.api.v2.filter.network.RateLimit")
}

func init() { proto.RegisterFile("api/filter/network/rate_limit.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8e, 0x3d, 0x4e, 0xc3, 0x40,
	0x10, 0x85, 0x65, 0x82, 0x82, 0xb2, 0x16, 0xcd, 0x16, 0xc8, 0x04, 0x09, 0x0c, 0x34, 0xae, 0x66,
	0x25, 0xe7, 0x08, 0xa4, 0xa4, 0x40, 0xbe, 0x40, 0xb4, 0xc1, 0xe3, 0x68, 0x84, 0xed, 0x59, 0x8d,
	0xc7, 0x01, 0x2e, 0xc7, 0xd9, 0x90, 0x7f, 0x12, 0x41, 0x39, 0xef, 0x7d, 0xfb, 0xf6, 0x33, 0xcf,
	0x3e, 0x90, 0xab, 0xa8, 0x56, 0x14, 0xd7, 0xa2, 0x7e, 0xb2, 0x7c, 0x38, 0xf1, 0x8a, 0xbb, 0x9a,
	0x1a, 0x52, 0x08, 0xc2, 0xca, 0xf6, 0x0e, 0xdb, 0x23, 0x7f, 0x83, 0x0f, 0x04, 0xc7, 0x1c, 0x26,
	0x1a, 0x66, 0x7a, 0x7d, 0x3d, 0x2c, 0x48, 0xdd, 0x4d, 0xec, 0xfa, 0xfe, 0xc0, 0x7c, 0xa8, 0xd1,
	0x8d, 0xd7, 0xbe, 0xaf, 0x5c, 0xd9, 0x8b, 0x57, 0xe2, 0x76, 0xea, 0x9f, 0x7e, 0x22, 0xb3, 0x2a,
	0xbc, 0xe2, 0xeb, 0xb0, 0x6f, 0x1f, 0x4c, 0xdc, 0xa9, 0xd7, 0x5d, 0x10, 0xac, 0xe8, 0x2b, 0x89,
	0xd2, 0x28, 0x5b, 0x15, 0x66, 0x88, 0xde, 0xc6, 0xc4, 0xde, 0x98, 0x65, 0xc9, 0x8d, 0xa7, 0x36,
	0xb9, 0x18, 0xbb, 0xf9, 0xb2, 0x2f, 0x26, 0x2e, 0xb1, 0x7b, 0x17, 0x0a, 0xca, 0xd2, 0x25, 0x8b,
	0x74, 0x91, 0xc5, 0xf9, 0x23, 0xfc, 0x13, 0x3d, 0x7f, 0xb3, 0x3d, 0x93, 0xc5, 0xdf, 0x57, 0x76,
	0x63, 0xae, 0x94, 0x1a, 0xe4, 0x5e, 0x93, 0xcb, 0x34, 0xca, 0xe2, 0xfc, 0x16, 0x26, 0x7b, 0x38,
	0xd9, 0xc3, 0x76, 0xb6, 0x2f, 0x4e, 0xe4, 0x7e, 0x39, 0x76, 0x9b, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x39, 0xc5, 0x48, 0x95, 0x3a, 0x01, 0x00, 0x00,
}
